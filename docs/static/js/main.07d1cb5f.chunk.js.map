{"version":3,"sources":["store/actions.js","store/actionTypes.js","containers/CompleteTaskButtonContainer.jsx","utils/constants.js","containers/AppBarContainer/index.jsx","components/List.jsx","components/TaskList.jsx","containers/TaskListContainer/index.jsx","components/MenuList.jsx","utils/index.js","containers/MenuListContainer/index.jsx","components/RightSlidePage/style.js","components/RightSlidePage/index.jsx","containers/SideMenuContainer/index.jsx","components/TaskItemList.jsx","containers/TodoListContainer/index.jsx","Layout/Index/index.jsx","store/reducer.js","store/index.js","App.jsx","index.js"],"names":["showSideMenu","type","hideSideMenu","createNewTask","task","payload","removeTask","changeCurrentTask","changeCurrentEditingTask","addNewTaskItemInCurrentEditingTask","taskItem","removeTaskItemInCurrentEditingTask","syncCurrentEdtingTaskToTasks","resetIsEditngTaskEdited","arguments","length","undefined","toggleTaskItemChecked","$taskItem","CompleteTaskButton","props","$tasksItems","dispatch","history","numOfAllTaskItem","size","numOfUncheckedItem","useMemo","count","get","isAllComleted","onClickCompleteButton","useCallback","push","buttonText","concat","buttonColor","react_default","a","createElement","Fab","style","flex","backgroundColor","color","variant","aria-label","onClick","defaultProps","List","connect","_ref","$global","isEditingTaskEdited","getIn","SaveChangeButton","disabled","StartOneTaskButton","AppBarContainer","onClickMenuButton","onClickSaveChangeButton","onClickStartOneTaskButton","AppBar","className","css","_templateObject","position","Toolbar","IconButton","edge","Menu_default","react_router","path","render","AppBarContainer_SaveChangeButton","component","CompleteTaskButtonContainer","AppBarContainer_StartOneTaskButton","MoreVert_default","$currentTaskItems","ListWrapper","title","children","subsubheader","ListSubheader","id","width","subheader","slowFade","TaskList_templateObject","renderTask","$task","onClickTask","onClickEditTaskButton","onClickRemoveTaskButton","isEditable","CSSTransition","key","timeout","classNames","Fragment","ListItem","height","button","ListItemText","primary","evt","BorderColor_default","DeleteForever_default","TaskList","$tasks","onClickSwitchButton","withStopEvtPropagation","callback","stopPropagation","_len","args","Array","_key","apply","subHeader","_templateObject2","Typography","Switch","checked","components_List","Divider","TransitionGroup","map","console","log","withRouter","_useState","useState","_useState2","Object","slicedToArray","setIsEditable","toggleIsEditable","components_TaskList","MenuList","onCreateTask","newTaskTitle","setNewTaskTitle","onInputCreateTask","target","value","onKeyEnterUp","_evt$keyCode","keyCode","keyUp","TextField","label","onChange","onKeyUp","margin","fullWidth","uniqueId","nextId","prefix","taskTitle","Map","$items","components_MenuList","fade","style_templateObject","slideRight","style_templateObject2","_templateObject3","RightSlidePage","show","onClickMask","stopEvtPropagation","in","appear","role","RightSlidePage_templateObject","join","RightSlidePage_templateObject2","onClickSideMenuMask","components_RightSlidePage","containers_TaskListContainer","containers_MenuListContainer","TaskItemList_templateObject","TaskItemList","onCreateNewTaskItem","onClickRemoveButton","onClickCheckbox","newTaskItemTitle","setNewTaskItemTitle","onInputNewTaskItem","taksItemTitle","dense","gutterBottom","$item","Checkbox","Input","placeholder","FOR_EDITING","FOR_TODO","TodoListContainer","action","match","params","$currentEditingTask","$currentTask","$newTaskItem","toggleTaskItemPropChecked","to","components_TaskItemList","Index","Index_templateObject","Index_templateObject2","TaskListContainer","containers_AppBarContainer","containers_SideMenuContainer","defaultState","fromJS","reducers","combineReducers","state","Error","set","$newTask","$targetTask","filter","propPath","setIn","$targetTaskItem","flag","targetKey","findKey","targetPropPath","persistConfig","transforms","immutableTransform","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","App","es","integration_react","loading","react_router_dom","ReactDOM","React","document","getElementById"],"mappings":"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","file":"static/js/main.07d1cb5f.chunk.js","sourcesContent":["import * as constants from './actionTypes';\n\nexport const showSideMenu = () => ({\n  type: constants.SHOW_SIDE_MENU,\n});\n\nexport const hideSideMenu = () => ({\n  type: constants.HIDE_SIDE_MENU,\n});\n\nexport const createNewTask = task => ({\n  type: constants.CREATE_TASK,\n  payload: task,\n});\n\nexport const editTask = task => ({\n  type: constants.EDIT_TASK,\n  payload: task,\n});\n\nexport const removeTask = task => ({\n  type: constants.REMOVE_TASK,\n  payload: task,\n});\n\nexport const changeCurrentTask = task => ({\n  type: constants.CHANGE_CURRENT_TASK,\n  payload: task,\n});\n\nexport const changeCurrentEditingTask = task => ({\n  type: constants.CHANGE_CURRENT_CURRENT_EDITING_TASK,\n  payload: task,\n});\n\nexport const addNewTaskItemInCurrentEditingTask = taskItem => ({\n  type: constants.ADD_NEW_TASK_ITEM_IN_CURRENT_EDITING_TASK,\n  payload: taskItem,\n});\n\nexport const removeTaskItemInCurrentEditingTask = taskItem => ({\n  type: constants.REMOVE_TASK_ITEM_IN_CURRENT_EDITING_TASK,\n  payload: taskItem,\n});\n\nexport const syncCurrentEdtingTaskToTasks = () => ({\n  type: constants.SYNC_CURRENT_EDITING_TASK_TO_TASKS,\n});\n\nexport const resetIsEditngTaskEdited = (flag = false) => ({\n  type: constants.RESET_IS_EDITING_TASK_EDITED,\n  payload: flag,\n});\n\nexport const completeTheFirstUncheckedTaskItem = () => ({\n  type: constants.COMPLETE_THE_FIRST_UNCHECKED_TASK_ITEM,\n});\n\nexport const completeAllUncheckedTaskItem = () => ({\n  type: constants.COMPLETE_ALL_UNCHECKED_TASK_ITEM,\n});\n\nexport const toggleTaskItemChecked = $taskItem => ({\n  type: constants.TOGGLE_TASK_ITEM_CHECKED,\n  payload: $taskItem,\n});\n","export const SHOW_SIDE_MENU = 'SHOW_SIDE_MENU';\n\nexport const HIDE_SIDE_MENU = 'HIDE_SIDE_MENU';\n\nexport const CREATE_TASK = 'CREATE_TASK';\n\nexport const REMOVE_TASK = 'REMOVE_TASK';\n\nexport const CHANGE_CURRENT_TASK = 'CHANGE_CURRENT_TASK';\n\nexport const EDIT_TASK = 'EDIT_TASK';\n\nexport const CHANGE_CURRENT_CURRENT_EDITING_TASK = 'CHANGE_CURRENT_EDITTING_TASK';\n\nexport const ADD_NEW_TASK_ITEM_IN_CURRENT_EDITING_TASK = 'ADD_NEW_ITEM_IN_CURRENT_EDITING_TASK';\n\nexport const REMOVE_TASK_ITEM_IN_CURRENT_EDITING_TASK = 'REMOVE_ITEM_IN_CURRENT_EDITING_TASK';\n\nexport const SYNC_CURRENT_EDITING_TASK_TO_TASKS = 'SYNC_CURRENT_EDITING_TASK_TO_TASKS';\n\nexport const RESET_IS_EDITING_TASK_EDITED = 'RESET_IS_EDITING_TASK_EDITED';\n\nexport const COMPLETE_THE_FIRST_UNCHECKED_TASK_ITEM = 'COMPLETE_THE_FIRST_UNCHECKED_TASK_ITEM';\n\nexport const COMPLETE_ALL_UNCHECKED_TASK_ITEM = 'COMPLETE_ALL_UNCHECKED_TASK_ITEM';\n\nexport const TOGGLE_TASK_ITEM_CHECKED = 'TOGGLE_TASK_ITEM_CHECKED';\n","import React, { useCallback, useMemo } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { List } from 'immutable';\n\nimport { COLOR_ORANGE, COLOR_GREEN } from '../utils/constants';\nimport { completeTheFirstUncheckedTaskItem } from '../store/actions';\n\nconst CompleteTaskButton = (props) => {\n  const { $tasksItems, dispatch, history } = props;\n\n  const numOfAllTaskItem = $tasksItems.size;\n  const numOfUncheckedItem = useMemo(\n    () => $tasksItems.count($taskItem => $taskItem.get('checked')),\n    [$tasksItems],\n  );\n  const isAllComleted = numOfAllTaskItem === numOfUncheckedItem;\n\n  const onClickCompleteButton = useCallback(() => {\n    if (!isAllComleted) {\n      dispatch(completeTheFirstUncheckedTaskItem());\n    } else {\n      /* 全部完成，进行跳转 */\n      history.push('/');\n    }\n  }, [dispatch, isAllComleted, history]);\n\n  const buttonText = isAllComleted\n    ? `全部完成(${numOfUncheckedItem}/${numOfAllTaskItem})`\n    : `完成一个任务项(${numOfUncheckedItem}/${numOfAllTaskItem})`;\n\n  const buttonColor = isAllComleted ? COLOR_GREEN : COLOR_ORANGE;\n\n  return (\n    <Fab\n      style={{\n        flex: '1',\n        backgroundColor: buttonColor,\n        color: '#fff',\n      }}\n      variant=\"extended\"\n      size=\"medium\"\n      aria-label=\"add\"\n      onClick={onClickCompleteButton}\n    >\n      {buttonText}\n    </Fab>\n  );\n};\n\nCompleteTaskButton.propTypes = {\n  $tasksItems: Proptypes.instanceOf(List),\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n};\n\nCompleteTaskButton.defaultProps = {\n  $tasksItems: new List(),\n};\n\nconst mapState = ({ $global }) => ({\n  isEditingTaskEdited: $global.get('isEditingTaskEdited'),\n  $tasksItems: $global.getIn(['$currentTask', '$items']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(CompleteTaskButton);\n","export const COLOR_BLUE = '#2196f3';\n\nexport const COLOR_GREEN = '#00e500';\n\nexport const COLOR_YELLOW = '#ffeb3b';\n\nexport const COLOR_GREY = '#9e9e9e';\n\nexport const COLOR_ORANGE = '#ff5722';\n\nexport const ROOT_URL = '/monica/';\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport { Switch, Route } from 'react-router-dom';\n\nimport {\n  showSideMenu,\n  syncCurrentEdtingTaskToTasks,\n  resetIsEditngTaskEdited,\n} from '../../store/actions';\nimport { COLOR_BLUE, COLOR_GREY } from '../../utils/constants';\nimport CompleteTaskButtonContainer from '../CompleteTaskButtonContainer';\n\nconst SaveChangeButton = (props) => {\n  const { onClick, isEditingTaskEdited } = props;\n  return (\n    <Fab\n      disabled={!isEditingTaskEdited}\n      style={{\n        flex: '1',\n        backgroundColor: !isEditingTaskEdited ? COLOR_GREY : COLOR_BLUE,\n        color: '#fff',\n      }}\n      variant=\"extended\"\n      size=\"medium\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'保存修改'}\n    </Fab>\n  );\n};\n\nSaveChangeButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n  isEditingTaskEdited: Proptypes.bool.isRequired,\n};\n\nconst StartOneTaskButton = (props) => {\n  const { onClick } = props;\n  return (\n    <Fab\n      style={{ flex: '1', backgroundColor: COLOR_BLUE, color: '#fff' }}\n      variant=\"extended\"\n      size=\"medium\"\n      color=\"primary\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'开始一项任务'}\n    </Fab>\n  );\n};\n\nStartOneTaskButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n};\n\nfunction AppBarContainer(props) {\n  const { dispatch, isEditingTaskEdited } = props;\n  const onClickMenuButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickSaveChangeButton = useCallback(() => {\n    dispatch(syncCurrentEdtingTaskToTasks());\n    dispatch(resetIsEditngTaskEdited(false));\n  }, [dispatch]);\n\n  const onClickStartOneTaskButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n      }}\n      className={css`\n        flex: 0 0 60px;\n      `}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <Switch>\n          <Route\n            path=\"/edit\"\n            render={() => (\n              <SaveChangeButton\n                isEditingTaskEdited={isEditingTaskEdited}\n                onClick={onClickSaveChangeButton}\n              />\n            )}\n          />\n          <Route path=\"/todo\" component={CompleteTaskButtonContainer} />\n          <Route render={() => <StartOneTaskButton onClick={onClickStartOneTaskButton} />} />\n        </Switch>\n\n        <IconButton edge=\"end\">\n          <MoreIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\nAppBarContainer.propTypes = {\n  dispatch: Proptypes.func.isRequired,\n  isEditingTaskEdited: Proptypes.bool.isRequired,\n  // $currentTaskItems: Proptypes.instanceOf(List),\n};\n\nAppBarContainer.defaultProps = {\n  // $currentTaskItems: new List(),\n};\n\nconst mapState = ({ $global }) => ({\n  isEditingTaskEdited: $global.get('isEditingTaskEdited'),\n  $currentTaskItems: $global.getIn(['$currentTask', '$items']),\n});\nexport default connect(\n  mapState,\n  null,\n)(AppBarContainer);\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport { ListSubheader } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nfunction ListWrapper(props) {\n  const { title, children } = props;\n\n  const subsubheader = title === '' ? null : (\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n      {title}\n    </ListSubheader>\n  );\n\n  return (\n    <div>\n      <List\n        style={{\n          width: '100%',\n        }}\n        component=\"nav\"\n        // aria-label=\"secondary mailbox folders\"\n        subheader={subsubheader}\n      >\n        {children}\n      </List>\n    </div>\n  );\n}\n\nListWrapper.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nListWrapper.defaultProps = {\n  title: '',\n  children: <div>default props</div>,\n};\n\nexport default ListWrapper;\n","import React, { useCallback } from 'react';\nimport { css } from 'emotion';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch as SwitchButton,\n  Typography,\n} from '@material-ui/core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\nconst slowFade = css`\n  .slow-fade-enter {\n    opacity: 0;\n  }\n  .slow-fade-enter-active {\n    opacity: 1;\n    transition: all 600ms ease-out;\n  }\n  .slow-fade-exit {\n    opacity: 1;\n  }\n  .slow-fade-exit-active {\n    opacity: 0;\n    transition: all 600ms ease-out;\n  }\n`;\n\n/* eslint-disable */\nconst renderTask = ({\n  $task,\n  onClickTask,\n  onClickEditTaskButton,\n  onClickRemoveTaskButton,\n  isEditable,\n}) => (\n  <CSSTransition key={$task.get('id')} timeout={600} classNames=\"slow-fade\">\n    <React.Fragment>\n      <ListItem style={{ height: '48px' }} onClick={() => onClickTask($task)} button={!isEditable}>\n        <ListItemText primary={$task.get('title')} />\n        {isEditable ? (\n          <React.Fragment>\n            <IconButton onClick={(evt) => onClickEditTaskButton(evt, $task)}>\n              <EditIcon />\n            </IconButton>\n            <IconButton onClick={(evt) => onClickRemoveTaskButton(evt, $task)}>\n              <DeleteIcon />\n            </IconButton>\n          </React.Fragment>\n        ) : null}\n      </ListItem>\n    </React.Fragment>\n  </CSSTransition>\n);\n/* eslint-enable */\n\nfunction TaskList(props) {\n  const {\n    onClickTask,\n    onClickEditTaskButton,\n    onClickRemoveTaskButton,\n    $tasks,\n    isEditable,\n    onClickSwitchButton,\n  } = props;\n\n  const withStopEvtPropagation = useCallback(\n    callback => (evt, ...args) => {\n      evt.stopPropagation();\n      callback(...args);\n    },\n    [],\n  );\n\n  const subHeader = (\n    <div\n      className={css`\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      `}\n    >\n      <div className=\"left\">\n        <Typography>任务列表</Typography>\n      </div>\n      <div className=\"right\">\n        <Typography>\n          {'编辑'}\n          <SwitchButton onClick={onClickSwitchButton} checked={isEditable} color=\"primary\" />\n        </Typography>\n      </div>\n    </div>\n  );\n\n  return (\n    <List title={subHeader}>\n      <Divider />\n      <TransitionGroup className={slowFade}>\n        {$tasks.map($task => renderTask({\n          $task,\n          isEditable,\n          onClickTask,\n          onClickRemoveTaskButton: withStopEvtPropagation(onClickRemoveTaskButton),\n          onClickEditTaskButton: withStopEvtPropagation(onClickEditTaskButton),\n        }))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickTask: PropTypes.func,\n  onClickRemoveTaskButton: PropTypes.func,\n  onClickEditTaskButton: PropTypes.func,\n  onClickSwitchButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  // children: PropTypes.element\n};\n\nTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickRemoveTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickRemoveTaskButton');\n  },\n  onClickEditTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickEditTaskButton');\n  },\n  onClickSwitchButton: () => {\n    /*eslint-disable*/\n    console.log('onClickSwitchButton');\n  },\n  isEditable: false,\n  // children: <div>default menu content</div>\n};\n\nexport default TaskList;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { List } from 'immutable';\nimport {\n  hideSideMenu,\n  removeTask,\n  changeCurrentEditingTask,\n  resetIsEditngTaskEdited,\n  changeCurrentTask,\n} from '../../store/actions';\n\nimport TaskList from '../../components/TaskList';\n\nfunction TaskListContainer(props) {\n  const { $tasks, dispatch, history } = props;\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const toggleIsEditable = useCallback(() => {\n    // setIsEditable(prevFlag => !prevFlag);\n    setIsEditable(!isEditable);\n  }, [setIsEditable, isEditable]);\n\n  const onClickEditTaskButton = useCallback(\n    ($task) => {\n      dispatch(resetIsEditngTaskEdited(false));\n      dispatch(changeCurrentEditingTask($task));\n      dispatch(hideSideMenu());\n      history.push(`/edit/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  const onClickRemoveTaskButton = useCallback(\n    ($task) => {\n      dispatch(removeTask($task));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      // 防止编辑模式点击，然后进入到任务模式，只能在非编辑模式下进入任务\n      if (isEditable) return;\n\n      dispatch(hideSideMenu());\n      dispatch(changeCurrentTask($task));\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history, isEditable],\n  );\n\n  return (\n    <TaskList\n      onClickEditTaskButton={onClickEditTaskButton}\n      onClickRemoveTaskButton={onClickRemoveTaskButton}\n      onClickTask={onClickTask}\n      isEditable={isEditable}\n      onClickSwitchButton={toggleIsEditable}\n      $tasks={$tasks}\n    />\n  );\n}\n\nTaskListContainer.propTypes = {\n  $tasks: PropTypes.instanceOf(List).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapState = ({ $global }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n  $tasks: $global.get('$tasks'),\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TaskListContainer),\n);\n","import React, { useCallback, useState } from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport PropTypes from 'prop-types';\n\nimport List from './List';\n\nfunction MenuList(props) {\n  const { onCreateTask } = props;\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const onInputCreateTask = useCallback((evt) => {\n    setNewTaskTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (newTaskTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateTask(newTaskTitle);\n        setNewTaskTitle('');\n      }\n    },\n    [newTaskTitle, setNewTaskTitle, onCreateTask],\n  );\n  return (\n    <List title=\"菜单项\">\n      <Divider />\n      <ListItem button>\n        <TextField\n          label=\"创建新任务\"\n          // className={classes.textField}\n          onChange={onInputCreateTask}\n          onKeyUp={onKeyEnterUp}\n          type=\"text\"\n          value={newTaskTitle}\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </ListItem>\n    </List>\n  );\n}\n\nMenuList.propTypes = {\n  onCreateTask: PropTypes.func,\n};\n\nMenuList.defaultProps = {\n  onCreateTask: () => {\n    /*eslint-disable*/\n    console.log('onCreateTask');\n  },\n};\n\nexport default MenuList;\n","export const uniqueId = (function saveNextId() {\n  let nextId = -1;\n  const date = 'develoopment' || new Date().toISOString();\n  return function generatorOfUniqueId(prefix = '') {\n    nextId += 1;\n    if (prefix.length === 0) return `${date} - ${nextId}`;\n    return `${prefix} - ${date} - ${nextId}`;\n  };\n}());\n\nexport function deepCopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Map, List } from 'immutable';\nimport MenuList from '../../components/MenuList';\nimport { uniqueId } from '../../utils';\nimport { createNewTask } from '../../store/actions';\n\nfunction MenuListContainer(props) {\n  const { dispatch } = props;\n\n  const onCreateTask = useCallback(\n    (taskTitle) => {\n      dispatch(\n        createNewTask(\n          Map({\n            title: taskTitle,\n            id: uniqueId(),\n            $items: new List(),\n          }),\n        ),\n      );\n    },\n    [dispatch],\n  );\n  return <MenuList onCreateTask={onCreateTask} />;\n}\n\nMenuListContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapState = () => ({});\n\nexport default connect(\n  mapState,\n  null,\n)(MenuListContainer);\n","import { css } from 'emotion';\n\nexport const fade = css`\n  transition: opacity 300ms ease-out;\n  display: none;\n  &.fade-enter {\n    opacity: 0;\n    display: block;\n  }\n  &.fade-enter-active {\n    opacity: 1;\n    display: block;\n  }\n  &.fade-enter-done {\n    opacity: 1;\n    display: block;\n  }\n  &.fade-exit {\n    opacity: 1;\n    display: block;\n  }\n  &.fade-exit-active {\n    opacity: 0;\n    display: block;\n  }\n`;\n\nexport const slowFade = css`\n  .slow-fade-enter {\n    opacity: 0;\n  }\n  .slow-fade-enter-active {\n    opacity: 1;\n    transition: all 1000ms ease-out;\n  }\n  .slow-fade-exit {\n    opacity: 1;\n  }\n  .slow-fade-exit-active {\n    opacity: 0;\n    transition: all 1000ms ease-out;\n  }\n`;\n\nexport const slideRight = css`\n  transition: transform 300ms ease-out;\n\n  &.slide-right-appear {\n    transform: translate(-100%, 0);\n  }\n  &.slide-right-appear-active {\n    transform: translate(0, 0);\n  }\n  &.slide-right-enter {\n    transform: translate(-100%, 0);\n  }\n  &.slide-right-enter-active {\n    transform: translate(0, 0);\n  }\n  &.slide-right-exit {\n    transform: translate(0, 0);\n  }\n  &.slide-right-exit-active {\n    transform: translate(-100%, 0);\n  }\n`;\n","import React, { useCallback } from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { fade, slideRight } from './style';\n\nfunction RightSlidePage(props) {\n  const { show, children, onClickMask } = props;\n\n  const stopEvtPropagation = useCallback((evt) => {\n    evt.stopPropagation();\n    // evt.persist();\n  }, []);\n\n  return (\n    <CSSTransition classNames=\"fade\" in={show} timeout={300} appear>\n      <div\n        onClick={onClickMask}\n        role=\"button\"\n        className={[\n          css`\n            position: absolute;\n            background-color: rgba(0, 0, 0, 0.3);\n            top: 0;\n            left: 0;\n            height: 100%;\n            width: 100%;\n            z-index: 2000;\n          `,\n          fade,\n        ].join(' ')}\n      >\n        <CSSTransition classNames=\"slide-right\" timeout={300} in={show} appear>\n          <div\n            onClick={stopEvtPropagation}\n            className={[\n              css`\n                width: 65%;\n                max-width: 375px;\n                height: 100%;\n                background-color: #fff;\n                overflow-y: scroll; /* 防止子margin-top影响父margin-top */\n                overflow-x: hidden;\n              `,\n              slideRight,\n            ].join(' ')}\n          >\n            {children}\n          </div>\n        </CSSTransition>\n      </div>\n    </CSSTransition>\n  );\n}\n\nRightSlidePage.propTypes = {\n  onClickMask: PropTypes.func,\n  show: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nRightSlidePage.defaultProps = {\n  show: true,\n  onClickMask: () => {\n    /*eslint-disable*/\n    console.log('onClickMask');\n  },\n  children: <div>default menu content</div>,\n};\n\nexport default RightSlidePage;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { hideSideMenu } from '../../store/actions';\n\nimport TaskListContainer from '../TaskListContainer';\nimport MenuListContainer from '../MenuListContainer';\nimport RightSlidePage from '../../components/RightSlidePage';\n\nfunction SideMenuContainer(props) {\n  const { dispatch, showSideMenu } = props;\n  const onClickSideMenuMask = useCallback(() => {\n    dispatch(hideSideMenu());\n  }, [dispatch]);\n\n  return (\n    <RightSlidePage show={showSideMenu} onClickMask={onClickSideMenuMask}>\n      <TaskListContainer />\n      <MenuListContainer />\n    </RightSlidePage>\n  );\n}\n\nSideMenuContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showSideMenu: PropTypes.bool.isRequired,\n};\n\n// SideMenuContainer.defaultProps = {\n//   showSideMenu: true,\n// };\n\nconst mapState = ({ $global }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(SideMenuContainer);\n","import React, { useState, useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { css } from 'emotion';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Divider, Input } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\n// import EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { Map } from 'immutable';\nimport { uniqueId } from '../utils';\n\nconst slowFade = css`\n  .slow-fade-enter {\n    opacity: 0;\n  }\n  .slow-fade-enter-active {\n    opacity: 1;\n    transition: all 300ms ease-out;\n  }\n  .slow-fade-exit {\n    opacity: 1;\n  }\n  .slow-fade-exit-active {\n    opacity: 0;\n    transition: all 300ms ease-out;\n  }\n`;\n\nfunction TaskItemList(props) {\n  const {\n    $task, onCreateNewTaskItem, onClickRemoveButton, isEditable, onClickCheckbox,\n  } = props;\n  const [newTaskItemTitle, setNewTaskItemTitle] = useState('');\n\n  const onInputNewTaskItem = useCallback((evt) => {\n    setNewTaskItemTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      const taksItemTitle = evt.target.value;\n      if (taksItemTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateNewTaskItem(\n          Map({\n            id: uniqueId(),\n            title: taksItemTitle,\n            checked: false,\n          }),\n        );\n        setNewTaskItemTitle('');\n      }\n    },\n    [setNewTaskItemTitle, onCreateNewTaskItem],\n  );\n\n  return (\n    <List>\n      <ListItem dense>\n        <Typography variant=\"h4\" gutterBottom>\n          {$task.get('title')}\n        </Typography>\n      </ListItem>\n      <TransitionGroup className={slowFade}>\n        {$task.get('$items').map($item => (\n          <CSSTransition key={$item.get('id')} timeout={300} classNames=\"slow-fade\">\n            <React.Fragment key={$item.get('id')}>\n              <ListItem>\n                <Checkbox\n                  onClick={() => onClickCheckbox($item)}\n                  edge=\"start\"\n                  checked={$item.get('checked')}\n                />\n                <ListItemText primary={$item.get('title')} />\n                {isEditable ? (\n                  <IconButton onClick={() => onClickRemoveButton($item)}>\n                    <DeleteIcon />\n                  </IconButton>\n                ) : null}\n              </ListItem>\n              <Divider variant=\"middle\" />\n            </React.Fragment>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n      {isEditable ? (\n        <ListItem button>\n          <Input\n            value={newTaskItemTitle}\n            onKeyUp={onKeyEnterUp}\n            onChange={onInputNewTaskItem}\n            placeholder=\"新增待做事项\"\n            fullWidth\n          />\n        </ListItem>\n      ) : null}\n    </List>\n  );\n}\n\nTaskItemList.propTypes = {\n  $task: PropTypes.instanceOf(Map).isRequired,\n  onCreateNewTaskItem: PropTypes.func,\n  onClickRemoveButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  onClickCheckbox: PropTypes.func,\n};\n\nTaskItemList.defaultProps = {\n  onCreateNewTaskItem: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickRemoveButton: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickCheckbox: () => {\n    /* eslint-disable */\n    console.log('onClickCheckbox');\n  },\n  isEditable: false,\n};\n\nexport default TaskItemList;\n\n// export default TaskItemList;\n","import React, { useCallback } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport TaskItemList from '../../components/TaskItemList';\nimport {\n  addNewTaskItemInCurrentEditingTask,\n  removeTaskItemInCurrentEditingTask,\n  // changeCurrentEditingTask,\n  resetIsEditngTaskEdited,\n  toggleTaskItemChecked,\n} from '../../store/actions';\nimport { ROOT_URL } from '../../utils/constants';\n\nconst FOR_EDITING = 'edit'; // 编辑模式\nconst FOR_TODO = 'todo'; // 任务模式\n\nfunction TodoListContainer(props) {\n  const {\n    // match: {\n    //   params: { id: currentEditingTaskId, action },\n    // },\n    match: {\n      params: { action },\n    },\n    // $tasks,\n    dispatch,\n  } = props;\n  let $task;\n  if (action === FOR_EDITING) {\n    $task = props.$currentEditingTask;\n  } else if (action === FOR_TODO) {\n    $task = props.$currentTask;\n  }\n  const isEditable = action === FOR_EDITING;\n\n  const onCreateNewTaskItem = useCallback(\n    ($newTaskItem) => {\n      dispatch(addNewTaskItemInCurrentEditingTask($newTaskItem));\n      dispatch(resetIsEditngTaskEdited(true));\n    },\n    [dispatch],\n  );\n\n  const onClickRemoveButton = useCallback(\n    ($taskItem) => {\n      dispatch(removeTaskItemInCurrentEditingTask($taskItem));\n      dispatch(resetIsEditngTaskEdited(true));\n    },\n    [dispatch],\n  );\n\n  const toggleTaskItemPropChecked = useCallback(\n    ($taskItem) => {\n      // 编辑模式不可用\n      if (isEditable) return;\n      dispatch(toggleTaskItemChecked($taskItem));\n    },\n    [dispatch, isEditable],\n  );\n\n  if ($task == null) return <Redirect to=\"/\" />;\n\n  return (\n    <TaskItemList\n      onCreateNewTaskItem={onCreateNewTaskItem}\n      onClickRemoveButton={onClickRemoveButton}\n      onClickCheckbox={toggleTaskItemPropChecked}\n      $task={$task}\n      isEditable={isEditable}\n    />\n  );\n}\n\nTodoListContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n      action: PropTypes.string,\n    }),\n  }).isRequired,\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  $currentEditingTask: PropTypes.instanceOf(Map),\n  $currentTask: PropTypes.instanceOf(Map),\n  dispatch: PropTypes.func.isRequired,\n};\n\nTodoListContainer.defaultProps = {\n  $currentEditingTask: new Map(),\n  $currentTask: new Map(),\n};\n\nconst mapState = ({ $global }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n  $currentEditingTask: $global.get('$currentEditingTask'),\n  $currentTask: $global.get('$currentTask'),\n  $tasks: $global.get('$tasks'),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(TodoListContainer);\n\n// export default TodoListContainer;\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBarContainer from '../../containers/AppBarContainer';\n\nimport SideMenuContainer from '../../containers/SideMenuContainer';\nimport TodoListContainer from '../../containers/TodoListContainer';\nimport TaskListContainer from '../../containers/TaskListContainer';\n\nfunction Index() {\n  return (\n    <div\n      className={css`\n        position: relative;\n        height: 100vh;\n        display: flex;\n        flex-flow: column nowrap;\n      `}\n    >\n      <div\n        className={css`\n          position: relative;\n          flex: 1;\n          overflow-y: scroll;\n          overflow-x: hidden;\n        `}\n      >\n        <Switch>\n          <Route path=\"/:action/:id\" component={TodoListContainer} />\n          <Route component={TaskListContainer} />\n        </Switch>\n      </div>\n      <AppBarContainer />\n      <SideMenuContainer />\n    </div>\n  );\n}\n\n// Index.propTypes = {\n//   // dispatch: PropTypes.func.isRequired,\n//   // children: PropTypes.node,\n// };\n\n// Index.defaultProps = {\n//   // children: '',\n// };\n\nexport default Index;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\nimport { combineReducers } from 'redux';\n\nimport * as constants from './actionTypes';\nimport { uniqueId } from '../utils';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  showSideMenu: false,\n  $tasks: [\n    {\n      id: uniqueId(),\n      title: '创建一个任务',\n      $items: [\n        {\n          id: uniqueId(),\n          title: '创建任务: 在侧菜单栏中的输入框内按回车',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '编辑任务: 在侧菜单栏中打开编辑模式',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '添加任务项: 打开编辑模式后，点击编辑按钮',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '保存: 编辑后，点击下方蓝色按钮保存',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '开始一项任务: 在非编辑模式下点击任务即可',\n          checked: false,\n        },\n      ],\n    },\n  ],\n  $currentTask: null,\n  $currentEditingTask: null,\n  isEditingTaskEdited: false,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst globalReducer = (state = defaultState, action) => {\n  if (typeof action.type === 'undefined') {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case constants.SHOW_SIDE_MENU: {\n      return state.set('showSideMenu', true);\n    }\n    case constants.HIDE_SIDE_MENU: {\n      return state.set('showSideMenu', false);\n    }\n    case constants.CREATE_TASK: {\n      const { payload: $newTask } = action;\n      return state.set('$tasks', state.get('$tasks').concat([$newTask]));\n    }\n    case constants.REMOVE_TASK: {\n      const $targetTask = action.payload;\n      return state.set(\n        '$tasks',\n        state.get('$tasks').filter($task => $task.get('id') !== $targetTask.get('id')),\n      );\n    }\n    case constants.CHANGE_CURRENT_TASK: {\n      const { payload: $task } = action;\n      return state.set('$currentTask', $task);\n    }\n    case constants.CHANGE_CURRENT_CURRENT_EDITING_TASK: {\n      const { payload: $task } = action;\n      return state.set('$currentEditingTask', $task);\n    }\n    case constants.ADD_NEW_TASK_ITEM_IN_CURRENT_EDITING_TASK: {\n      const { payload: $newTaskItem } = action;\n      const propPath = ['$currentEditingTask', '$items'];\n      return state.setIn(propPath, state.getIn(propPath).concat([$newTaskItem]));\n    }\n    case constants.REMOVE_TASK_ITEM_IN_CURRENT_EDITING_TASK: {\n      const { payload: $targetTaskItem } = action;\n      const propPath = ['$currentEditingTask', '$items'];\n      return state.setIn(\n        propPath,\n        state\n          .getIn(propPath)\n          .filter($taskItem => $taskItem.get('id') !== $targetTaskItem.get('id')),\n      );\n    }\n    case constants.SYNC_CURRENT_EDITING_TASK_TO_TASKS: {\n      return state.set(\n        '$tasks',\n        state\n          .get('$tasks')\n          .filter($task => $task.id !== state.getIn(['$currentEditingTask', 'id']))\n          .concat([state.get('$currentEditingTask')]),\n      );\n    }\n    case constants.RESET_IS_EDITING_TASK_EDITED: {\n      const { payload: flag } = action;\n      return state.set('isEditingTaskEdited', flag);\n    }\n    case constants.COMPLETE_THE_FIRST_UNCHECKED_TASK_ITEM: {\n      const propPath = ['$currentTask', '$items'];\n      const targetKey = state\n        .getIn(propPath)\n        .findKey($taskItem => $taskItem.get('checked') === false);\n      if (targetKey == null) return state;\n      return state.setIn(propPath.concat([targetKey, 'checked']), true);\n    }\n    case constants.COMPLETE_ALL_UNCHECKED_TASK_ITEM: {\n      const propPath = ['$currentTask', '$items'];\n      return state.setIn(\n        propPath,\n        state.getIn(propPath).map($taskItem => $taskItem.set('checked', true)),\n      );\n    }\n    case constants.TOGGLE_TASK_ITEM_CHECKED: {\n      const { payload: $targetTaskItem } = action;\n      const propPath = ['$currentTask', '$items'];\n      const targetKey = state\n        .getIn(propPath)\n        .findKey($taskItem => $taskItem.get('id') === $targetTaskItem.get('id'));\n      const targetPropPath = propPath.concat([targetKey, 'checked']);\n      return state.setIn(targetPropPath, !state.getIn(targetPropPath));\n    }\n    default:\n      return state;\n  }\n};\n\nconst reducers = combineReducers({\n  $global: globalReducer,\n});\n\n/* eslint-disable */\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport immutableTransform from 'redux-persist-transform-immutable';\n// import hardSet from 'redux-persist/lib/stateReconciler/hardSet';\n\nimport * as constants from './actionTypes';\nimport * as actions from './actions';\nimport reducers from './reducer';\n\nconst persistConfig = {\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\n// const store = createStore(\n//   persistedReducer,\n//   /* eslint-disable */\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n// );\n\nconst store = createStore(persistedReducer);\n\nexport const persistor = persistStore(store);\n\nexport { store, constants, actions };\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport Index from './Layout/Index';\n// import TodoListContainer from './containers/TodoListContainer';\n\nimport { store, persistor } from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={<div>loding...</div>}>\n        <Router>\n          <Route path=\"/\" component={Index} />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n"],"sourceRoot":""}