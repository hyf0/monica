{"version":3,"sources":["store/tasks/actions.js","store/tasks/actionTypes.js","store/global/actions.js","store/global/actionTypes.js","store/editingTask/actions.js","store/editingTask/actionTypes.js","containers/CompleteTaskButtonContainer.jsx","utils/constants.js","containers/EdtingTaskButtonContainer.jsx","containers/AppBarContainer/index.jsx","components/List.jsx","components/TaskList.jsx","containers/TaskListContainer.jsx","components/MenuList.jsx","env.js","utils/index.js","containers/MenuListContainer/index.jsx","components/Drawer.jsx","components/mask.jsx","containers/SideMenuContainer/index.jsx","components/NotFound.jsx","components/Checkbox.jsx","components/TaskItemList.jsx","containers/TodoListContainer/index.jsx","components/PinnedTaskList.jsx","components/RecentTaskList.jsx","containers/HomeContainer.jsx","containers/EditingTaskPageContainer.jsx","Layout/Index/index.jsx","store/index.js","store/global/reducer.js","store/tasks/reducer.js","store/editingTask/reducer.js","store/reducer.js","store/epics.js","App.jsx","index.js"],"names":["addTaskToTasks","task","type","payload","removeTaskInTasks","changeCurrentTodoTask","$task","changeCurrentTodoTaskById","taskId","addTaskIdToRecentTaskIds","$taskId","removeTaskIdInRecentTaskIds","addTaskIdToPinnedTaskIds","removeTaskIdInPinnedTaskIds","checkTaskItemInTaskItemsByIndex","index","checkTaskItemInTaskItemsByTaskId","toggleTaskItemPropChecked","$taskItem","updateTaskFromEdting","showSideMenu","hideSideMenu","changeCurrentPath","path","sideEffect","arguments","length","undefined","changeCurrentTask","addTaskItemInCurrentTask","removeTaskItemInCurrentTask","undoCurrentTask","redoCurrentTask","snapshotCurrentTask","clearFutureTasks","clearAllEdtingHistory","CompleteTaskButton","props","buttonText","buttonColor","$tasksItemsEntity","$tasksItemsRefs","dispatch","history","$unchckedTaskItems","useMemo","filter","getIn","map","get","numOfAllTaskItem","size","numOfCheckedItem","isAllComleted","hasZeroTaskItem","onClickCompleteButton","useCallback","push","concat","taskActions","react_default","a","createElement","Button","style","flex","backgroundColor","color","transition","aria-label","onClick","defaultProps","List","Map","connect","_ref","$Task","$editingTask","$futureTasks","$oldTasks","withRouter","isUndoBtnDisabled","isRedoBtnDisabled","undoEditing","editingTaskActions","redoEditing","ButtonGroup","fullWidth","variant","disabled","StartOneTaskButton","AppBarContainer","onClickMenuButton","onClickStartOneTaskButton","onClickHomeButton","AppBar","position","Toolbar","IconButton","edge","Menu_default","react_router","component","EdtingTaskButtonContainer","CompleteTaskButtonContainer","render","AppBarContainer_StartOneTaskButton","Home_default","$currentTaskItems","$global","ListWrapper","title","children","subsubheader","ListSubheader","id","width","subheader","renderTask","onClickTask","onClickEditTaskButton","onClickRemoveTaskButton","isEditable","CSSTransition","key","timeout","classNames","ListItem","height","button","ListItemText","primary","Fragment","evt","BorderColor_default","DeleteForever_default","TaskList","$tasks","onClickSwitchButton","withStopEvtPropagation","callback","stopPropagation","_len","args","Array","_key","apply","subHeader","display","justifyContent","alignItems","className","Typography","Switch","checked","components_List","Divider","TransitionGroup","console","log","$tasksEntity","$tasksRefs","$taskList","_useState","useState","_useState2","Object","slicedToArray","setIsEditable","toggleIsEditable","globalActions","components_TaskList","MenuList","onCreateTask","newTaskTitle","setNewTaskTitle","onInputCreateTask","target","value","onKeyEnterUp","_evt$keyCode","keyCode","keyUp","taskTitle","TextField","label","onChange","onKeyUp","margin","host","isDev","location","some","hs","includes","uniqueId","curID","date","Date","now","toString","prefix","withStopEventtPropagation","func","normalize","arr","name","result","entity","refs","forEach","oriObj","identityKey","fromJS","items","components_MenuList","Drawer","show","in","appear","mountOnEnter","unmountOnExit","maxWidth","overflowY","overflowX","opacity","zIndex","Mask","role","top","left","onClickSideMenuMask","mask","components_Drawer","containers_TaskListContainer","containers_MenuListContainer","NotFound","message","time","isTimeout","setIsTimeout","_useState3","_useState4","seconds","setSeconds","useEffect","timeoutId","setTimeout","intervalId","setInterval","prev","clearTimeout","clearInterval","to","padding","Math","round","Checkbox","es_checkbox","TaskItemList","onCreateNewTaskItem","onClickRemoveButton","onClickCheckbox","newTaskItemTitle","setNewTaskItemTitle","onInputNewTaskItem","taksItemTitle","dense","gutterBottom","taskItemId","$item","components_Checkbox","Input","placeholder","TodoListContainer","match","params","$currentTodoTask","components_NotFound","components_TaskItemList","PinnedTaskList","onClickIconButton","onClickIconButtonWithStopEvtPropagation","Star_default","RecentTaskList","StarBorder_default","HomeContainer","$recentTaskIds","$pinnedTaskIds","$recentTasksWithIsPinnedProp","set","$pinnedTasks","pinOneTask","unpinOneTask","components_PinnedTaskList","components_RecentTaskList","EditingTaskPageContainer","$currentEditingTask","$target","$newTaskItem","Index","store","persistor","flexFlow","containers_AppBarContainer","containers_SideMenuContainer","defaultState","globalReducer","state","action","_action$type","_action$payload","Error","tasks","recentTaskIds","pinnedTaskIds","currentTodoTask","TasksReducer","tasksEntity","tasksRefs","newTask","merge","targetId","delete","todoTask","targetTaskId","updatedrecentTasks","unshift","propPath","setIn","taskItemIndex","targetTaskItemId","currentTask","futureTasks","oldTasks","editingTaskReducer","taskItems","taskItemsEntity","taskItemsRefs","tid","oldTask","last","pop","futureTask","clear","reducers","combineReducers","tasksReducer","combineEpics","epicMiddleware","createEpicMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","persistConfig","transforms","immutableTransform","storage","persistedReducer","persistReducer","run","epics","persistStore","App","es","react_router_dom","integration_react","loading","ReactDOM","React","document","getElementById"],"mappings":"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","file":"static/js/main.a64dd0ed.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nexport const addTaskToTasks = task => ({\n  type: actionTypes.ADD_TASK_TO_TASKS,\n  payload: task,\n});\n\nexport const removeTaskInTasks = task => ({\n  type: actionTypes.REMOVE_TASK_IN_TASKS,\n  payload: task,\n});\n\nexport const changeCurrentTodoTask = $task => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK,\n  payload: $task,\n});\n\nexport const changeCurrentTodoTaskById = taskId => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID,\n  payload: taskId,\n});\n\nexport const addTaskIdToRecentTaskIds = $taskId => ({\n  type: actionTypes.ADD_TASK_ID_TO_RECENT_TASK_IDS,\n  payload: $taskId,\n});\n\nexport const removeTaskIdInRecentTaskIds = $taskId => ({\n  type: actionTypes.REMOVE_TASK_ID_IN_RECENT_TASK_IDS,\n  payload: $taskId,\n});\n\nexport const addTaskIdToPinnedTaskIds = $taskId => ({\n  type: actionTypes.ADD_TASK_ID_TO_PINNED_TASK_IDS,\n  payload: $taskId,\n});\n\nexport const removeTaskIdInPinnedTaskIds = $taskId => ({\n  type: actionTypes.REMOVE_TASK_ID_IN_PINNED_TASK_IDS,\n  payload: $taskId,\n});\n\n// -- task item\n\nexport const checkTaskItemInTaskItemsByIndex = index => ({\n  type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX,\n  payload: index,\n});\n\nexport const checkTaskItemInTaskItemsByTaskId = taskId => ({\n  type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID,\n  payload: taskId,\n});\n\nexport const toggleTaskItemPropChecked = $taskItem => ({\n  type: actionTypes.TOGGLE_TASK_ITEM_CHECKED,\n  payload: $taskItem,\n});\n\n// edting task\n\nexport const updateTaskFromEdting = $task => ({\n  type: actionTypes.UPDARE_TASK_FROM_EDTING,\n  payload: $task,\n});\n","/* eslint-disable operator-linebreak */\nexport const ADD_TASK_TO_TASKS = 'tasks/ADD_TASK_TO_TASKS';\n\nexport const REMOVE_TASK_IN_TASKS = 'tasks/REMOVE_TASK_IN_TASKS';\n\nexport const CHANGE_CURRENT_TODO_TASK = 'tasks/CHANGE_CURRENT_TODO_TASK';\n\nexport const CHANGE_CURRENT_TODO_TASK_BY_ID =\n  'tasks/CHANGE_CURRENT_TODO_TASK_BY_ID';\n\nexport const ADD_TASK_ID_TO_RECENT_TASK_IDS =\n  'tasks/ADD_TASK_ID_TO_RECENT_TASK_IDS';\n\nexport const REMOVE_TASK_ID_IN_RECENT_TASK_IDS =\n  'tasks/REMOVE_TASK_ID_IN_RECENT_TASK_IDS';\n\nexport const ADD_TASK_ID_TO_PINNED_TASK_IDS =\n  'tasks/ADD_TASK_ID_TO_PINNED_TASK_IDS';\n\nexport const REMOVE_TASK_ID_IN_PINNED_TASK_IDS =\n  'tasks/REMOVE_TASK_ID_IN_PINNED_TASK_IDS';\n\n// -- task item\n\nexport const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX =\n  'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX';\n\nexport const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID =\n  'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID';\n\nexport const TOGGLE_TASK_ITEM_CHECKED = 'tasks/TOGGLE_TASK_ITEM_CHECKED';\n\n// editing task\n\nexport const UPDARE_TASK_FROM_EDTING = 'tasks/UPDARE_TASK_FROM_EDTING';\n\n// -- tobe removed\n","import * as actionTypes from './actionTypes';\n\nexport const showSideMenu = () => ({\n  type: actionTypes.SHOW_SIDE_MENU,\n});\n\nexport const hideSideMenu = () => ({\n  type: actionTypes.HIDE_SIDE_MENU,\n});\n\nexport const changeCurrentPath = (path, sideEffect = null) => ({\n  type: actionTypes.CHANGE_CURRENT_PATH,\n  payload: path,\n  sideEffect,\n});\n","export const SHOW_SIDE_MENU = 'global/SHOW_SIDE_MENU';\n\nexport const HIDE_SIDE_MENU = 'global/HIDE_SIDE_MENU';\n\nexport const CHANGE_CURRENT_PATH = 'global/CHANGE_CURRENT_PATH';\n","/* eslint-disable arrow-parens */\nimport * as actionTypes from './actionTypes';\n\nexport const changeCurrentTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TASK,\n  payload: $task,\n});\n\nexport const addTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const removeTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const undoCurrentTask = () => ({\n  type: actionTypes.UNDO_CURRENT_TASK,\n});\n\nexport const redoCurrentTask = () => ({\n  type: actionTypes.REDO_CURRENT_TASK,\n});\n\nexport const snapshotCurrentTask = () => ({\n  type: actionTypes.SNAPSHOT_CURRENT_TASK,\n});\n\nexport const clearFutureTasks = () => ({\n  type: actionTypes.CLEAR_FUTURE_TASKS,\n});\n\nexport const clearAllEdtingHistory = () => ({\n  type: actionTypes.CLEAR_EDITNG_HISTORY,\n});\n","/* eslint-disable operator-linebreak */\nexport const CHANGE_CURRENT_TASK = 'editingTask/CHANGE_CURRENT_TASK';\n\nexport const ADD_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/ADD_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const REMOVE_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/REMOVE_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const SNAPSHOT_CURRENT_TASK = 'editingTask/SNAPSHOT_CURRENT_TASK';\n\nexport const UNDO_CURRENT_TASK = 'editingTask/UNDO_CURRENT_TASK';\n\nexport const REDO_CURRENT_TASK = 'editingTask/REDO_CURRENT_TASK';\n\nexport const CLEAR_FUTURE_TASKS = 'editingTask/CLEAR_FUTURE_TASKS';\n\nexport const CLEAR_EDITNG_HISTORY = 'editingTask/CLEAR_EDITNG_HISTORY';\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { List, Map } from 'immutable';\n\nimport { COLOR_ORANGE, COLOR_GREEN, COLOR_RED } from '../utils/constants';\nimport { taskActions } from '../store/actions';\n\nconst CompleteTaskButton = (props) => {\n  const {\n    $task,\n    $tasksItemsEntity,\n    $tasksItemsRefs,\n    dispatch,\n    history,\n  } = props;\n\n  const $unchckedTaskItems = useMemo(\n    () =>\n      $tasksItemsRefs\n        .filter((taskId) => !$tasksItemsEntity.getIn([taskId, 'checked']))\n        .map((taskId) => $tasksItemsEntity.get(taskId)),\n    [$tasksItemsEntity, $tasksItemsRefs],\n  );\n  const numOfAllTaskItem = $tasksItemsRefs.size;\n  const numOfUncheckedItem = $unchckedTaskItems.size;\n  const numOfCheckedItem = numOfAllTaskItem - numOfUncheckedItem;\n  const isAllComleted = numOfAllTaskItem === numOfCheckedItem;\n  const hasZeroTaskItem = numOfAllTaskItem === 0;\n  const onClickCompleteButton = useCallback(() => {\n    if (hasZeroTaskItem) {\n      // 零个可完成任务项，提供跳转到编辑页面的快速方式\n      history.push(`/edit/${$task.get('id')}`);\n    } else if (isAllComleted) {\n      /* 所有任务项全部完成，跳转到APP主页 */\n      history.push('/');\n    } else {\n      dispatch(\n        taskActions.checkTaskItemInTaskItemsByTaskId(\n          $unchckedTaskItems.getIn(['0', 'id']),\n        ),\n      );\n    }\n  }, [\n    $task,\n    hasZeroTaskItem,\n    isAllComleted,\n    $unchckedTaskItems,\n    history,\n    dispatch,\n  ]);\n\n  let buttonText;\n  let buttonColor;\n  if (hasZeroTaskItem) {\n    buttonText = '添加任务项';\n    buttonColor = COLOR_RED;\n  } else if (isAllComleted) {\n    buttonText = `全部完成(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_GREEN;\n  } else {\n    buttonText = `完成一个任务项(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_ORANGE;\n  }\n\n  return (\n    <Button\n      style={{\n        flex: '1',\n        backgroundColor: buttonColor,\n        color: '#fff',\n        transition: 'background-color 300ms',\n      }}\n      size=\"medium\"\n      aria-label=\"add\"\n      onClick={onClickCompleteButton}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nCompleteTaskButton.propTypes = {\n  $tasksItemsEntity: Proptypes.instanceOf(Map),\n  $tasksItemsRefs: Proptypes.instanceOf(List),\n  $task: Proptypes.instanceOf(Map),\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n};\n\nCompleteTaskButton.defaultProps = {\n  $tasksItemsRefs: new List(),\n  $tasksItemsEntity: new Map(),\n  $task: null,\n};\n\nconst mapState = ({ $Task }) => ({\n  $tasksItemsEntity: $Task.getIn(['currentTodoTask', 'items', 'entity']),\n  $tasksItemsRefs: $Task.getIn(['currentTodoTask', 'items', 'refs']),\n  $task: $Task.get('currentTodoTask'),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(CompleteTaskButton);\n","export const COLOR_BLUE = '#2196f3';\n\nexport const COLOR_GREEN = '#43a047';\n\nexport const COLOR_YELLOW = '#ffeb3b';\n\nexport const COLOR_GREY = '#9e9e9e';\n\nexport const COLOR_ORANGE = '#ff5722';\n\nexport const COLOR_RED = '#f44336';\n\nexport const ROOT_URL = '/monica/';\n","import React, { useCallback } from 'react';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router-dom';\nimport { List } from 'immutable';\nimport { editingTaskActions } from '../store/actions';\n\nconst EdtingTaskButtonContainer = (props) => {\n  const { $futureTasks, $oldTasks, dispatch } = props;\n  const isUndoBtnDisabled = $oldTasks.size === 0;\n  const isRedoBtnDisabled = $futureTasks.size === 0;\n\n  const undoEditing = useCallback(() => {\n    dispatch(editingTaskActions.undoCurrentTask());\n  }, [dispatch]);\n\n  const redoEditing = useCallback(() => {\n    dispatch(editingTaskActions.redoCurrentTask());\n  }, [dispatch]);\n\n  return (\n    <ButtonGroup fullWidth variant=\"outlined\">\n      <Button onClick={undoEditing} disabled={isUndoBtnDisabled}>\n        Undo\n      </Button>\n      <Button onClick={redoEditing} disabled={isRedoBtnDisabled}>\n        Redo\n      </Button>\n    </ButtonGroup>\n  );\n};\nEdtingTaskButtonContainer.propTypes = {\n  $futureTasks: Proptypes.instanceOf(List).isRequired,\n  $oldTasks: Proptypes.instanceOf(List).isRequired,\n  dispatch: Proptypes.func.isRequired,\n  // isEditingTaskEdited: Proptypes.bool.isRequired,\n};\n\nconst mapState = ({ $editingTask }) => ({\n  $futureTasks: $editingTask.get('futureTasks'),\n  $oldTasks: $editingTask.get('oldTasks'),\n});\nexport default connect(\n  mapState,\n  null,\n)(withRouter(EdtingTaskButtonContainer));\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\n// import MoreIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n\nimport { showSideMenu } from '../../store/actions';\nimport { COLOR_BLUE } from '../../utils/constants';\nimport CompleteTaskButtonContainer from '../CompleteTaskButtonContainer';\n\nimport EdtingTaskButtonContainer from '../EdtingTaskButtonContainer';\n\nconst StartOneTaskButton = (props) => {\n  const { onClick } = props;\n  return (\n    <Button\n      style={{ backgroundColor: COLOR_BLUE, color: '#fff' }}\n      size=\"medium\"\n      fullWidth\n      // variant=\"outlined\"\n      color=\"primary\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'开始一项任务'}\n    </Button>\n  );\n};\n\nStartOneTaskButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n};\n\nfunction AppBarContainer(props) {\n  const { dispatch, history } = props;\n  const onClickMenuButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickStartOneTaskButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickHomeButton = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n        flex: '0 0 60px',\n      }}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <Switch>\n          <Route path=\"/edit/:id\" component={EdtingTaskButtonContainer} />\n          <Route path=\"/todo\" component={CompleteTaskButtonContainer} />\n          <Route\n            render={() => (\n              <StartOneTaskButton onClick={onClickStartOneTaskButton} />\n            )}\n          />\n        </Switch>\n\n        <IconButton onClick={onClickHomeButton} edge=\"end\">\n          <HomeIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\nAppBarContainer.propTypes = {\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n  // $currentTaskItems: Proptypes.instanceOf(List),\n};\n\nAppBarContainer.defaultProps = {\n  // $currentTaskItems: new List(),\n};\n\nconst mapState = ({ $global }) => ({\n  $currentTaskItems: $global.getIn(['$currentTask', '$items']),\n});\nexport default connect(\n  mapState,\n  null,\n)(withRouter(AppBarContainer));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PropTypes from 'prop-types';\n\nfunction ListWrapper(props) {\n  const { title, children } = props;\n\n  const subsubheader = title === '' ? null : (\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n      {title}\n    </ListSubheader>\n  );\n\n  return (\n    <div>\n      <List\n        style={{\n          width: '100%',\n        }}\n        component=\"nav\"\n        // aria-label=\"secondary mailbox folders\"\n        subheader={subsubheader}\n      >\n        {children}\n      </List>\n    </div>\n  );\n}\n\nListWrapper.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nListWrapper.defaultProps = {\n  title: '',\n  children: <div>default props</div>,\n};\n\nexport default ListWrapper;\n","import React, { useCallback } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch as SwitchButton,\n  Typography,\n} from '@material-ui/core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\n/* eslint-disable */\nconst renderTask = ({\n  $task,\n  onClickTask,\n  onClickEditTaskButton,\n  onClickRemoveTaskButton,\n  isEditable,\n}) => (\n  <CSSTransition key={$task.get('id')} timeout={300} classNames=\"ani-fade\">\n    <ListItem style={{ height: '48px' }} onClick={() => onClickTask($task)} button={!isEditable}>\n      <ListItemText primary={$task.get('title')} />\n      {isEditable ? (\n        <React.Fragment>\n          <IconButton onClick={(evt) => onClickEditTaskButton(evt, $task)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton onClick={(evt) => onClickRemoveTaskButton(evt, $task)}>\n            <DeleteIcon />\n          </IconButton>\n        </React.Fragment>\n      ) : null}\n    </ListItem>\n  </CSSTransition>\n);\n/* eslint-enable */\n\nfunction TaskList(props) {\n  const {\n    onClickTask,\n    onClickEditTaskButton,\n    onClickRemoveTaskButton,\n    $tasks,\n    isEditable,\n    onClickSwitchButton,\n  } = props;\n\n  const withStopEvtPropagation = useCallback(\n    callback => (evt, ...args) => {\n      evt.stopPropagation();\n      callback(...args);\n    },\n    [],\n  );\n\n  const subHeader = (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"left\">\n        <Typography>任务列表</Typography>\n      </div>\n      <div className=\"right\">\n        <Typography>\n          {'编辑'}\n          <SwitchButton onClick={onClickSwitchButton} checked={isEditable} color=\"primary\" />\n        </Typography>\n      </div>\n    </div>\n  );\n\n  return (\n    <List title={subHeader}>\n      <Divider />\n      <TransitionGroup className=\"transition-fade\">\n        {$tasks.map($task => renderTask({\n          $task,\n          isEditable,\n          onClickTask,\n          onClickRemoveTaskButton: withStopEvtPropagation(onClickRemoveTaskButton),\n          onClickEditTaskButton: withStopEvtPropagation(onClickEditTaskButton),\n        }))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickTask: PropTypes.func,\n  onClickRemoveTaskButton: PropTypes.func,\n  onClickEditTaskButton: PropTypes.func,\n  onClickSwitchButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  // children: PropTypes.element\n};\n\nTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickRemoveTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickRemoveTaskButton');\n  },\n  onClickEditTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickEditTaskButton');\n  },\n  onClickSwitchButton: () => {\n    /*eslint-disable*/\n    console.log('onClickSwitchButton');\n  },\n  isEditable: false,\n  // children: <div>default menu content</div>\n};\n\nexport default TaskList;\n","import React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { taskActions, globalActions } from '../store/actions';\n\nimport TaskList from '../components/TaskList';\n\nfunction TaskListContainer(props) {\n  const { $tasks, dispatch, history } = props;\n  const $tasksEntity = $tasks.get('entity');\n  const $tasksRefs = $tasks.get('refs');\n  const $taskList = useMemo(() => $tasksRefs.map(taskId => $tasksEntity.get(taskId)), [\n    $tasksEntity,\n    $tasksRefs,\n  ]);\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const toggleIsEditable = useCallback(() => {\n    // setIsEditable(prevFlag => !prevFlag);\n    setIsEditable(!isEditable);\n  }, [setIsEditable, isEditable]);\n\n  const onClickEditTaskButton = useCallback(\n    ($task) => {\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/edit/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  const onClickRemoveTaskButton = useCallback(\n    ($task) => {\n      dispatch(taskActions.removeTaskInTasks($task));\n      dispatch(taskActions.removeTaskIdInRecentTaskIds($task.get('id')));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      // 防止编辑模式点击，然后进入到任务模式，只能在非编辑模式下进入任务\n      if (isEditable) return;\n\n      const taskId = $task.get('id');\n      dispatch(globalActions.hideSideMenu());\n      dispatch(taskActions.addTaskIdToRecentTaskIds(taskId));\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history, isEditable],\n  );\n\n  return (\n    <TaskList\n      onClickEditTaskButton={onClickEditTaskButton}\n      onClickRemoveTaskButton={onClickRemoveTaskButton}\n      onClickTask={onClickTask}\n      isEditable={isEditable}\n      onClickSwitchButton={toggleIsEditable}\n      $tasks={$taskList}\n    />\n  );\n}\n\nTaskListContainer.propTypes = {\n  $tasks: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapState = ({ $global, $Task }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n  $tasks: $Task.get('tasks'),\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TaskListContainer),\n);\n","import React, { useCallback, useState } from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport PropTypes from 'prop-types';\n\nimport List from './List';\n\nfunction MenuList(props) {\n  const { onCreateTask } = props;\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const onInputCreateTask = useCallback((evt) => {\n    setNewTaskTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      const taskTitle = evt.target.value;\n      if (taskTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateTask(taskTitle);\n        setNewTaskTitle('');\n      }\n    },\n    [setNewTaskTitle, onCreateTask],\n  );\n  return (\n    <List title=\"菜单项\">\n      <Divider />\n      <ListItem>\n        <TextField\n          label=\"创建新任务\"\n          onChange={onInputCreateTask}\n          onKeyUp={onKeyEnterUp}\n          type=\"text\"\n          value={newTaskTitle}\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </ListItem>\n    </List>\n  );\n}\n\nMenuList.propTypes = {\n  onCreateTask: PropTypes.func,\n};\n\nMenuList.defaultProps = {\n  onCreateTask: () => {\n    /*eslint-disable*/\n    console.log('onCreateTask');\n  },\n};\n\nexport default MenuList;\n","/**\n * @param {String} host\n */\nconst createIsDev = host => () => {\n  const hosts = ['localhost', '127.0.0.1'];\n  return hosts.some(hs => host.includes(hs));\n};\n\n// eslint-disable-next-line no-restricted-globals\nexport const isDev = createIsDev(location.host);\n// export const isDev = () => false;\nexport const foo = 'nothing';\n","import { isDev } from '../env';\n\nexport const uniqueId = (function saveNextId() {\n  let curID = -1;\n  let date = Date.now().toString();\n  if (isDev()) {\n    console.log('处于开发模式中');\n    date = 1566347293201; // 固定时间，防止每次刷新改变时间，导致程序无法根据id找到对应任务\n  }\n  return function generatorOfUniqueId(prefix = '') {\n    curID += 1;\n    if (prefix.length === 0) return `${date}-${curID}`;\n    return `${prefix}-${date}-${curID}`;\n  };\n}());\n\nexport function deepCopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function withStopEventtPropagation(func) {\n  return (evt, ...args) => {\n    evt.stopPropagation();\n    return func(...args);\n  };\n}\n\n/**\n *\n * @param {Array} arr\n * @param {String} name\n * @param {String} key\n */\nexport function normalize(arr, name = 'entity', key = 'id') {\n  const result = {};\n  const entity = {};\n  const refs = [];\n  const refsName = 'refs';\n  result[name] = entity;\n  result[refsName] = refs;\n  arr.forEach((oriObj) => {\n    const identityKey = oriObj[key];\n    refs.push(identityKey);\n    entity[identityKey] = oriObj;\n  });\n  return result;\n}\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fromJS } from 'immutable';\nimport MenuList from '../../components/MenuList';\nimport { uniqueId, normalize } from '../../utils';\nimport { taskActions } from '../../store/actions';\n\nfunction MenuListContainer(props) {\n  const { dispatch } = props;\n\n  const onCreateTask = useCallback(\n    (taskTitle) => {\n      dispatch(\n        taskActions.addTaskToTasks(\n          fromJS({\n            title: taskTitle,\n            id: uniqueId(),\n            items: normalize([]),\n          }),\n        ),\n      );\n    },\n    [dispatch],\n  );\n  return <MenuList onCreateTask={onCreateTask} />;\n}\n\nMenuListContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapState = () => ({});\n\nexport default connect(\n  mapState,\n  null,\n)(MenuListContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Drawer(props) {\n  const { show, children } = props;\n\n  return (\n    <CSSTransition\n      classNames=\"ani-slide-right\"\n      timeout={300}\n      in={show}\n      appear\n      mountOnEnter\n      unmountOnExit\n    >\n      <div\n        style={{\n          position: 'absolute',\n          width: '65%',\n          maxWidth: '375px',\n          height: '100vh',\n          backgroundColor: '#fff',\n          overflowY: 'scroll', //* 防止子margin-top影响父margin-top *\n          overflowX: 'hidden',\n          opacity: '1',\n          zIndex: '3000',\n        }}\n        className=\"transition-slide-right-self\"\n      >\n        {children}\n      </div>\n    </CSSTransition>\n  );\n}\n\nDrawer.propTypes = {\n  show: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDrawer.defaultProps = {\n  show: true,\n  children: '',\n};\n\nexport default Drawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Mask(props) {\n  const { show, onClick } = props;\n\n  return (\n    <CSSTransition classNames=\"ani-fade\" in={show} timeout={300} mountOnEnter unmountOnExit>\n      <div\n        onClick={onClick}\n        role=\"button\"\n        style={{\n          // display: show ? 'block' : 'none',\n          position: 'absolute',\n          backgroundColor: 'rgba(0, 0, 0, 0.75)',\n          top: '0',\n          left: '0',\n          height: '100vh',\n          width: '100%',\n          zIndex: '2000',\n        }}\n        className=\"transition-fade-self\"\n      />\n    </CSSTransition>\n  );\n}\n\nMask.propTypes = {\n  onClick: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n};\n\nMask.defaultProps = {\n  onClick: () => {\n    /*eslint-disable*/\n    console.log('Mask:onClick');\n  },\n};\n\nexport default Mask;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { hideSideMenu } from '../../store/actions';\n\nimport TaskListContainer from '../TaskListContainer';\nimport MenuListContainer from '../MenuListContainer';\nimport Drawer from '../../components/Drawer';\nimport Mask from '../../components/mask';\n\nfunction SideMenuContainer(props) {\n  const { dispatch, showSideMenu } = props;\n  const onClickSideMenuMask = useCallback(() => {\n    dispatch(hideSideMenu());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Mask show={showSideMenu} onClick={onClickSideMenuMask} />\n      <Drawer show={showSideMenu}>\n        <TaskListContainer />\n        <MenuListContainer />\n      </Drawer>\n    </>\n  );\n}\n\nSideMenuContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showSideMenu: PropTypes.bool.isRequired,\n};\n\n// SideMenuContainer.defaultProps = {\n//   showSideMenu: true,\n// };\n\nconst mapState = ({ $global }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(SideMenuContainer);\n","/* eslint-disable arrow-parens */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction NotFound(props) {\n  const { message, time } = props;\n  const [isTimeout, setIsTimeout] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsTimeout(true);\n    }, time);\n\n    const intervalId = setInterval(() => {\n      setSeconds((prev) => prev + 1);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [time, setIsTimeout, setSeconds]);\n\n  return isTimeout ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div\n      style={{\n        padding: '20px',\n      }}\n    >\n      <h1>{message}</h1>\n      <h2>\n        {Math.round(time / 1000) - seconds}\n        秒后回到主页\n      </h2>\n    </div>\n  );\n}\n\nNotFound.propTypes = {\n  message: PropTypes.string,\n  time: PropTypes.number,\n};\n\nNotFound.defaultProps = {\n  message: '404 Not Found',\n  time: 3000,\n};\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AntdCheckbox from 'antd/es/checkbox';\n\nfunction Checkbox(props) {\n  return <AntdCheckbox {...props} />;\n}\n\nCheckbox.propTypes = {\n  onClick: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nCheckbox.defaultProps = {\n  onClick: null,\n  checked: false,\n  disabled: false,\n};\n\nexport default Checkbox;\n","import React, { useState, useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport Input from '@material-ui/core/Input';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\n\nimport Checkbox from './Checkbox';\nimport { uniqueId } from '../utils';\n\nfunction TaskItemList(props) {\n  const {\n    $task, onCreateNewTaskItem, onClickRemoveButton, isEditable, onClickCheckbox,\n  } = props;\n  const [newTaskItemTitle, setNewTaskItemTitle] = useState('');\n\n  const onInputNewTaskItem = useCallback((evt) => {\n    setNewTaskItemTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      const taksItemTitle = evt.target.value;\n      if (taksItemTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateNewTaskItem(\n          Map({\n            id: uniqueId(),\n            title: taksItemTitle,\n            checked: false,\n          }),\n        );\n        setNewTaskItemTitle('');\n      }\n    },\n    [setNewTaskItemTitle, onCreateNewTaskItem],\n  );\n\n  return (\n    <List>\n      <ListItem dense>\n        <Typography variant=\"h4\" gutterBottom>\n          {$task.get('title')}\n        </Typography>\n      </ListItem>\n      <TransitionGroup className=\"transition-fade\">\n        {$task.getIn(['items', 'refs']).map((taskItemId) => {\n          const $item = $task.getIn(['items', 'entity', taskItemId]);\n          return (\n            <CSSTransition key={$item.get('id')} timeout={300} classNames=\"ani-fade\">\n              <React.Fragment key={$item.get('id')}>\n                <ListItem>\n                  <IconButton onClick={() => onClickCheckbox($item)}>\n                    <Checkbox disabled={isEditable} edge=\"start\" checked={$item.get('checked')} />\n                  </IconButton>\n                  <ListItemText primary={$item.get('title')} />\n                  {isEditable ? (\n                    <IconButton onClick={() => onClickRemoveButton($item)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  ) : null}\n                </ListItem>\n                <Divider variant=\"middle\" />\n              </React.Fragment>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n      {isEditable ? (\n        <ListItem>\n          <Input\n            value={newTaskItemTitle}\n            onKeyUp={onKeyEnterUp}\n            onChange={onInputNewTaskItem}\n            placeholder=\"新增待做事项\"\n            fullWidth\n          />\n        </ListItem>\n      ) : null}\n    </List>\n  );\n}\n\nTaskItemList.propTypes = {\n  $task: PropTypes.instanceOf(Map).isRequired,\n  onCreateNewTaskItem: PropTypes.func,\n  onClickRemoveButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  onClickCheckbox: PropTypes.func,\n};\n\nTaskItemList.defaultProps = {\n  onCreateNewTaskItem: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickRemoveButton: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickCheckbox: () => {\n    /* eslint-disable */\n    console.log('onClickCheckbox');\n  },\n  isEditable: false,\n};\n\nexport default TaskItemList;\n\n// export default TaskItemList;\n","import React, { useCallback, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport NotFound from '../../components/NotFound';\nimport TaskItemList from '../../components/TaskItemList';\nimport { taskActions } from '../../store/actions';\n\nfunction TodoListContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    $currentTodoTask,\n    dispatch,\n  } = props;\n\n  useEffect(\n    () => () => {\n      // 离开当前任务页面时，重置状态树中的currentTodoTask为null，保持状态树整洁\n      dispatch(taskActions.changeCurrentTodoTask(null));\n    },\n    [dispatch, taskId],\n  );\n\n  useEffect(() => {\n    dispatch(taskActions.changeCurrentTodoTaskById(taskId));\n  }, [taskId, dispatch]);\n\n  const toggleTaskItemPropChecked = useCallback(\n    ($taskItem) => {\n      dispatch(taskActions.toggleTaskItemPropChecked($taskItem));\n    },\n    [dispatch],\n  );\n\n  if ($currentTodoTask == null) return <NotFound />;\n\n  return (\n    <TaskItemList\n      onClickCheckbox={toggleTaskItemPropChecked}\n      $task={$currentTodoTask}\n      isEditable={false}\n    />\n  );\n}\n\nTodoListContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n      action: PropTypes.string,\n    }),\n  }).isRequired,\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $currentTodoTask: PropTypes.instanceOf(Map),\n  dispatch: PropTypes.func.isRequired,\n};\n\nTodoListContainer.defaultProps = {\n  $currentTodoTask: null,\n};\n\nconst mapState = ({ $global, $Task }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n  $tasksEntity: $Task.getIn(['tasks', 'entity']),\n  $currentTodoTask: $Task.get('currentTodoTask'),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(TodoListContainer);\n\n// export default TodoListContainer;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\nfunction PinnedTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"置顶任务\">\n      <Divider />\n      <TransitionGroup className=\"transition-fade\">\n        {$tasks.map($task => (\n          <CSSTransition key={$task.get('id')} timeout={600} classNames=\"ani-fade\">\n            <React.Fragment>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                <IconButton onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                  <StarIcon />\n                </IconButton>\n              </ListItem>\n            </React.Fragment>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nPinnedTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nPinnedTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default PinnedTaskList;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\nfunction RecentTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"最近任务\">\n      <Divider />\n      <TransitionGroup className=\"transition-fade\">\n        {$tasks.map($task => (\n          <CSSTransition key={$task.get('id')} timeout={300} classNames=\"ani-fade\">\n            <React.Fragment>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                {$task.get('isPinned') ? null : (\n                  <IconButton\n                    onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}\n                  >\n                    <StarBorderIcon />\n                  </IconButton>\n                )}\n              </ListItem>\n            </React.Fragment>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nRecentTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nRecentTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default RecentTaskList;\n","import React, { useCallback, useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList, Map } from 'immutable';\nimport { connect } from 'react-redux';\n\nimport PinnedTaskList from '../components/PinnedTaskList';\n\nimport { taskActions } from '../store/actions';\nimport RecentTaskList from '../components/RecentTaskList';\n\nfunction HomeContainer(props) {\n  const {\n    $recentTaskIds, dispatch, history, $tasksEntity, $pinnedTaskIds,\n  } = props;\n\n  const $recentTasksWithIsPinnedProp = useMemo(\n    () => $recentTaskIds.map(taskId => $tasksEntity.get(taskId).set('isPinned', $pinnedTaskIds.includes(taskId))),\n    [$recentTaskIds, $tasksEntity, $pinnedTaskIds],\n  );\n\n  const $pinnedTasks = useMemo(() => $pinnedTaskIds.map(taskId => $tasksEntity.get(taskId)), [\n    $pinnedTaskIds,\n    $tasksEntity,\n  ]);\n\n  const pinOneTask = useCallback(\n    ($task) => {\n      const id = $task.get('id');\n      dispatch(taskActions.addTaskIdToPinnedTaskIds(id));\n    },\n    [dispatch],\n  );\n\n  const unpinOneTask = useCallback(\n    ($task) => {\n      dispatch(taskActions.removeTaskIdInPinnedTaskIds($task.get('id')));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      const id = $task.get('id');\n      dispatch(taskActions.addTaskIdToRecentTaskIds(id));\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  return (\n    <React.Fragment>\n      <PinnedTaskList\n        onClickIconButton={unpinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$pinnedTasks}\n      />\n      <RecentTaskList\n        onClickIconButton={pinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$recentTasksWithIsPinnedProp}\n      />\n    </React.Fragment>\n  );\n}\n\nHomeContainer.propTypes = {\n  $recentTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  $pinnedTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nHomeContainer.defaultProps = {};\n\nconst mapState = ({ $Task }) => ({\n  $recentTaskIds: $Task.get('recentTaskIds'),\n  $pinnedTaskIds: $Task.get('pinnedTaskIds'),\n  $tasksEntity: $Task.getIn(['tasks', 'entity']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(HomeContainer);\n","/* eslint-disable nonblock-statement-body-position */\nimport React, { useCallback, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport TaskItemList from '../components/TaskItemList';\nimport { taskActions, editingTaskActions } from '../store/actions';\nimport NotFound from '../components/NotFound';\n\nfunction EditingTaskPageContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    dispatch,\n    $tasksEntity,\n    $currentEditingTask,\n  } = props;\n\n  useEffect(() => {\n    // 根据taskid加载对应的将要被编辑的任务\n    const $target = $tasksEntity.get(taskId) || null;\n    dispatch(editingTaskActions.changeCurrentTask($target));\n  }, [dispatch, taskId, $tasksEntity]);\n\n  useEffect(() => {\n    // 因为根据taskId加载任务，所以taskId变化，即任务变化，所以每次切换任务，就要重置编辑历史，重置redo，undo按钮状态\n    dispatch(editingTaskActions.clearAllEdtingHistory());\n\n    return () => {\n      // 即使退出也要重置状态，保持状态树的干净\n      dispatch(editingTaskActions.clearAllEdtingHistory());\n      // 退出任务, 重置为null，\n      dispatch(editingTaskActions.changeCurrentTask(null));\n    };\n  }, [taskId, dispatch]);\n\n  useEffect(() => {\n    // 将编辑后的任务保存到原任务上\n    if ($currentEditingTask != null) {\n      dispatch(taskActions.updateTaskFromEdting($currentEditingTask));\n    }\n  }, [$currentEditingTask, dispatch]);\n\n  const onCreateNewTaskItem = useCallback(\n    ($newTaskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.addTaskItemInCurrentTask($newTaskItem));\n      // 因为添加了新任务，所以清空重做任务列表，重置 重做 按钮状态，为了避免编辑状态混乱\n      dispatch(editingTaskActions.clearFutureTasks());\n    },\n    [dispatch],\n  );\n\n  const onClickRemoveButton = useCallback(\n    ($taskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.removeTaskItemInCurrentTask($taskItem));\n    },\n    [dispatch],\n  );\n\n  if ($currentEditingTask == null) return <NotFound />;\n\n  return (\n    <TaskItemList\n      onCreateNewTaskItem={onCreateNewTaskItem}\n      onClickRemoveButton={onClickRemoveButton}\n      $task={$currentEditingTask}\n      isEditable\n    />\n  );\n}\n\nEditingTaskPageContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  $currentEditingTask: PropTypes.instanceOf(Map),\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nEditingTaskPageContainer.defaultProps = {\n  $currentEditingTask: null,\n};\n\nconst mapState = ({ $global, $Task, $editingTask }) => ({\n  showSideMenu: $global.get('showSideMenu'),\n  $tasksEntity: $Task.getIn(['tasks', 'entity']),\n  $currentEditingTask: $editingTask.get('currentTask'),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(EditingTaskPageContainer);\n\n// export default EditingTaskPageContainer;\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBarContainer from '../../containers/AppBarContainer';\n\nimport SideMenuContainer from '../../containers/SideMenuContainer';\nimport TodoListContainer from '../../containers/TodoListContainer';\nimport HomeContainer from '../../containers/HomeContainer';\nimport EditingTaskPageContainer from '../../containers/EditingTaskPageContainer';\n\nfunction Index() {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: '100vh',\n        display: 'flex',\n        flexFlow: 'column nowrap',\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          flex: '1',\n          overflowY: 'scroll',\n          overflowX: 'hidden',\n        }}\n      >\n        <Switch>\n          <Route path=\"/todo/:id\" component={TodoListContainer} />\n          <Route path=\"/edit/:id\" component={EditingTaskPageContainer} />\n          <Route component={HomeContainer} />\n        </Switch>\n      </div>\n      <AppBarContainer />\n      <SideMenuContainer />\n    </div>\n  );\n}\n\n// Index.propTypes = {\n//   // dispatch: PropTypes.func.isRequired,\n//   // children: PropTypes.node,\n// };\n\n// Index.defaultProps = {\n//   // children: '',\n// };\n\nexport default Index;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport { createEpicMiddleware } from 'redux-observable';\n\n// import hardSet from 'redux-persist/lib/stateReconciler/hardSet';\n\nimport * as constants from './actionTypes';\nimport * as actions from './actions';\nimport reducers from './reducer';\nimport epics from './epics';\n\nimport { isDev } from '../env';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst middlewares = [epicMiddleware];\n\n// eslint-disable-next-line import/no-mutable-exports\nlet store;\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (isDev()) {\n  console.log('正处于develoment模式');\n  store = createStore(\n    reducers,\n    /* eslint-disable */\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n} else {\n  const persistConfig = {\n    transforms: [immutableTransform()],\n    key: 'root',\n    storage,\n  };\n\n  const persistedReducer = persistReducer(persistConfig, reducers);\n\n  store = createStore(persistedReducer, applyMiddleware(...middlewares));\n}\n\nepicMiddleware.run(epics);\n\n// const store = createStore(persistedReducer);\nlet persistor;\nif (!isDev()) {\n  persistor = persistStore(store);\n}\nexport { persistor };\n\nexport { store, constants, actions };\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  showSideMenu: false,\n  path: '/',\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst globalReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.SHOW_SIDE_MENU: {\n      return state.set('showSideMenu', true);\n    }\n    case actionTypes.HIDE_SIDE_MENU: {\n      return state.set('showSideMenu', false);\n    }\n    case actionTypes.CHANGE_CURRENT_PATH: {\n      const path = payload;\n      return state.set('path', path);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { uniqueId, normalize } from '../../utils';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  tasks: normalize([\n    {\n      id: uniqueId(),\n      title: '创建一个任务',\n      items: normalize([\n        {\n          id: uniqueId(),\n          title: '创建任务: 在侧菜单栏中的输入框内按回车',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '编辑任务: 在侧菜单栏中打开编辑模式',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '添加任务项: 打开编辑模式后，点击编辑按钮',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '保存: 每次编辑后，程序会自动保存',\n          checked: false,\n        },\n        {\n          id: uniqueId(),\n          title: '开始一项任务: 在非编辑模式下点击任务即可',\n          checked: false,\n        },\n      ]),\n    },\n  ]),\n  recentTaskIds: [],\n  pinnedTaskIds: [],\n  currentTodoTask: null,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst TasksReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n  // 快捷访问方式\n  /** @type Map<String, any> */\n  const tasks = state.get('tasks');\n  /** @type Map<String, any> */\n  const tasksEntity = state.getIn(['tasks', 'entity']);\n  /** @type List<String> */\n  const tasksRefs = state.getIn(['tasks', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.ADD_TASK_TO_TASKS: {\n      const { payload: newTask } = action;\n      const id = newTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.set(id, newTask),\n          refs: tasksRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_IN_TASKS: {\n      const targetTask = payload;\n      const targetId = targetTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.delete(targetId),\n          refs: tasksRefs.filter((id) => id !== targetId),\n        }),\n      );\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK: {\n      const todoTask = payload;\n      return state.set('currentTodoTask', todoTask);\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID: {\n      const id = payload;\n      return state.set('currentTodoTask', state.getIn(['tasks', 'entity', id]));\n    }\n    case actionTypes.ADD_TASK_ID_TO_RECENT_TASK_IDS: {\n      const { payload: targetTaskId } = action;\n      const updatedrecentTasks = state\n        .get('recentTaskIds')\n        .filter((taskId) => targetTaskId !== taskId) // remove self if exist\n        .unshift(targetTaskId);\n      return state.set('recentTaskIds', updatedrecentTasks);\n    }\n    case actionTypes.REMOVE_TASK_ID_IN_RECENT_TASK_IDS: {\n      const { payload: targetTaskId } = action;\n      const updatedrecentTasks = state\n        .get('recentTaskIds')\n        .filter((taskId) => targetTaskId !== taskId); // remove self if exist\n      return state.set('recentTaskIds', updatedrecentTasks);\n    }\n    case actionTypes.ADD_TASK_ID_TO_PINNED_TASK_IDS: {\n      const { payload: targetTaskId } = action;\n      const updatedrecentTasks = state\n        .get('pinnedTaskIds')\n        .filter((taskId) => targetTaskId !== taskId) // remove self if exist\n        .unshift(targetTaskId);\n      return state.set('pinnedTaskIds', updatedrecentTasks);\n    }\n    case actionTypes.REMOVE_TASK_ID_IN_PINNED_TASK_IDS: {\n      const { payload: targetTaskId } = action;\n      const updatedrecentTasks = state\n        .get('pinnedTaskIds')\n        .filter((taskId) => targetTaskId !== taskId); // remove self if exist\n      return state.set('pinnedTaskIds', updatedrecentTasks);\n    }\n\n    // editing task item\n\n    case actionTypes.TOGGLE_TASK_ITEM_CHECKED: {\n      const taskItem = payload;\n      const propPath = [\n        'currentTodoTask',\n        'items',\n        'entity',\n        taskItem.get('id'),\n        'checked',\n      ];\n      return state.setIn(propPath, !state.getIn(propPath));\n    }\n\n    case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX: {\n      const taskItemIndex = payload;\n      const targetTaskItemId = state.getIn([\n        'currentTodoTask',\n        'items',\n        'refs',\n        taskItemIndex,\n      ]);\n      return state.setIn(\n        ['currentTodoTask', 'items', 'entity', targetTaskItemId, 'checked'],\n        true,\n      );\n    }\n\n    case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID: {\n      const taskId = payload;\n      return state.setIn(\n        ['currentTodoTask', 'items', 'entity', taskId, 'checked'],\n        true,\n      );\n    }\n\n    case actionTypes.UPDARE_TASK_FROM_EDTING: {\n      const task = payload;\n      const id = task.get('id');\n      return state.setIn(['tasks', 'entity', id], task);\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default TasksReducer;\n","/* eslint-disable arrow-parens */\n/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  currentTask: null,\n  futureTasks: [],\n  oldTasks: [],\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst editingTaskReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n\n  const taskItems = state.getIn(['currentTask', 'items']);\n  const taskItemsEntity = state.getIn(['currentTask', 'items', 'entity']);\n  const taskItemsRefs = state.getIn(['currentTask', 'items', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_CURRENT_TASK: {\n      const task = payload;\n      return state.set('currentTask', task);\n    }\n    case actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.set(id, $taskItem),\n          refs: taskItemsRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.delete(id),\n          refs: taskItemsRefs.filter((tid) => tid !== id),\n        }),\n      );\n    }\n    case actionTypes.UNDO_CURRENT_TASK: {\n      const oldTasks = state.get('oldTasks');\n      if (oldTasks.length !== 0) {\n        const futureTasks = state.get('futureTasks');\n        const currentTask = state.get('currentTask');\n        const oldTask = oldTasks.last();\n        return state.merge({\n          currentTask: oldTask,\n          futureTasks: futureTasks.push(currentTask),\n          oldTasks: oldTasks.pop(),\n        });\n      }\n      return state;\n    }\n    case actionTypes.REDO_CURRENT_TASK: {\n      const futureTasks = state.get('futureTasks');\n      if (futureTasks.length !== 0) {\n        const oldTasks = state.get('oldTasks');\n        const currentTask = state.get('currentTask');\n        const futureTask = futureTasks.last();\n        return state.merge({\n          currentTask: futureTask,\n          futureTasks: futureTasks.pop(),\n          oldTasks: oldTasks.push(currentTask),\n        });\n      }\n      return state;\n    }\n    case actionTypes.SNAPSHOT_CURRENT_TASK: {\n      const currentTask = state.get('currentTask');\n      if (currentTask != null) {\n        const oldTasks = state.get('oldTasks');\n        return state.set('oldTasks', oldTasks.push(currentTask));\n      }\n      return state;\n    }\n    case actionTypes.CLEAR_FUTURE_TASKS: {\n      return state.set('futureTasks', state.get('futureTasks').clear());\n    }\n    case actionTypes.CLEAR_EDITNG_HISTORY: {\n      return state.merge({\n        futureTasks: state.get('futureTasks').clear(),\n        oldTasks: state.get('oldTasks').clear(),\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default editingTaskReducer;\n","import { combineReducers } from 'redux';\n\nimport globalReducer from './global/reducer';\nimport tasksReducer from './tasks/reducer';\nimport editingTaskReducer from './editingTask/reducer';\n\nconst reducers = combineReducers({\n  $global: globalReducer,\n  $Task: tasksReducer,\n  $editingTask: editingTaskReducer,\n});\n\n/* eslint-disable */\n\nexport default reducers;\n","// import { taskActionTypes, globalActionTypes } from './actionTypes';\n// import { combineEpics, ofType } from 'redux-observable';\nimport { combineEpics } from 'redux-observable';\n// import {} from 'react-router-dom';\n\n// import { Observable } from 'rxjs';\n// import {\n//   map, concatMap, tap, concat,\n// } from 'rxjs/operators';\n// import { globalActionTypes } from './actionTypes';\n// import { taskActions } from './actions';\n\n// /**\n//  * @param {Observable} action$\n//  */\n// export const taskEpic = (action$, state$) => {\n//   /** @type Observable */\n//   let history;\n//   let pathUrl;\n//   const changeCurTodoTask$ = action$.pipe(\n//     ofType(globalActionTypes.CHANGE_CURRENT_PATH),\n//     tap((action) => {\n//       const {\n//         sideEffect: { history: reactRouterHistory },\n//         path,\n//       } = action;\n//       history = reactRouterHistory;\n//       pathUrl = path;\n//     }),\n//     concatMap(({ sideEffect: { id, history } }) => taskActions.changeCurrentTodoTaskById(id)),\n//   );\n\n//   const afterChangeCurTodoTask$ = changeCurTodoTask$.pipe(map(() => action$));\n\n//   const ubsubAfterChangeCurTodoTask = afterChangeCurTodoTask$.subscribe({\n//     next() {\n//       // const {\n//       //   sideEffect: { history: reactRouterHistory },\n//       //   path,\n//       // } = action;\n//       // console.log('reactRouterHistory', reactRouterHistory);\n//       history.push(pathUrl);\n//     },\n//     complete() {\n//       ubsubAfterChangeCurTodoTask();\n//     },\n//   });\n\n//   return changeCurTodoTask$;\n// };\n\nexport default combineEpics();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport Index from './Layout/Index';\n// import TodoListContainer from './containers/TodoListContainer';\n\nimport { isDev } from './env';\n\nimport { store, persistor } from './store';\n\nfunction App() {\n  if (isDev) {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Route path=\"/\" component={Index} />\n        </Router>\n      </Provider>\n    );\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={<div>loding...</div>}>\n        <Router>\n          <Route path=\"/\" component={Index} />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport App from './App';\nimport './index.scss';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n"],"sourceRoot":""}