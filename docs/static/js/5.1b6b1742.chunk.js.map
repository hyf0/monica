{"version":3,"sources":["components/TextFieldOnKeyEnterUp.jsx","containers/AccountManagerContainer/components/LoginArea.jsx","containers/AccountManagerContainer/components/RegisterArea.jsx","containers/AccountManagerContainer/components/LoginStatus.jsx","containers/AccountManagerContainer/index.jsx"],"names":["TextFieldOnKeyEnterUp","props","onKeyEnterUp","rest","Object","_mnt_e_docs_gitcodes_monica_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","doOnKeyEnterUp","useCallback","evt","_evt$keyCode","keyCode","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2__","assign","onKeyUp","defaultProps","LoginArea","_React$useState","React","useState","_React$useState2","slicedToArray","username","setUsername","_React$useState3","_React$useState4","password","setPassword","handleInputUsername","target","value","handleInputPassword","onLogin","isLogining","disabled","tryLogin","isDisabled","trim","buttonText","react_default","List","ListItem","TextField","onChange","type","label","fullWidth","onkeyEnterUp","Button","variant","onClick","RegisterArea","onRegister","tryRegister","placeholder","UserInfo","$userInfo","concat","get","usernamePattern","passwordPattern","AccountManagerContainer","dispatch","hasLogin","isRegistering","_useState","_useState2","tabIndex","setTabIndex","history","useHistory","_useState3","_useState4","isShow","setIsShow","handleClickMask","afterExitTransition","push","handleTabChange","tabIndexChangedTo","handleLogin","userInfo","_userInfo$username","_userInfo$password","test","userActions","effectLogin","globalActions","addOneNitification","title","detail","key","uniqueId","handleRegister","_userInfo$username2","_userInfo$password2","effectRegister","handleClickLogoutButton","logout","tabContentItems","useMemo","components_LoginArea","components_RegisterArea","Fade","in","onExited","className","style","position","display","justifyContent","alignItems","top","left","height","width","zIndex","boxSizing","padding","backgroundColor","Paper","stopEventPropagation","Fragment","LoginStatus","Tabs","indicatorColor","textColor","centered","Tab","connect","$state","getIn"],"mappings":"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","file":"static/js/5.1b6b1742.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextFieldOnKeyEnterUp(props) {\n  const { onKeyEnterUp, ...rest } = props;\n\n  const doOnKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER_CODE = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER_CODE) {\n        onKeyEnterUp(evt);\n      }\n    },\n    [onKeyEnterUp],\n  );\n\n  return <TextField onKeyUp={doOnKeyEnterUp} {...rest} />;\n}\n\nTextFieldOnKeyEnterUp.propTypes = {\n  onKeyEnterUp: PropTypes.func.isRequired,\n};\n\nTextFieldOnKeyEnterUp.defaultProps = {};\n\nexport default TextFieldOnKeyEnterUp;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport TextFieldOnKeyEnterUp from '../../../components/TextFieldOnKeyEnterUp';\n\n\nfunction LoginArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onLogin, disabled } = props;\n\n  const isLogining = disabled;\n\n  const tryLogin = useCallback(() => {\n    // handleClickButton\n    onLogin({\n      username,\n      password,\n    });\n  }, [username, password, onLogin]);\n\n  const isDisabled = isLogining || username.trim() === '' || password.trim() === '';\n\n  const buttonText = isLogining ? '登录中...' : '登录';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <TextFieldOnKeyEnterUp onkeyEnterUp={tryLogin} value={password} onChange={handleInputPassword} type=\"password\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={tryLogin} fullWidth>\n          {buttonText}\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nLoginArea.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLoginArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default LoginArea;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport TextFieldOnKeyEnterUp from '../../../components/TextFieldOnKeyEnterUp';\n\n\nfunction RegisterArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onRegister, disabled } = props;\n\n  const tryRegister = useCallback(() => {\n    // handle click register button\n    onRegister({\n      username,\n      password,\n    });\n  }, [username, password, onRegister]);\n\n  const isDisabled = disabled || username.trim() === '' || password.trim() === '';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField placeholder=\"请输入4到16位字母，数字\" value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        {/* 这里密码输入用type=text是为了用户视觉上可以确认所输入的密码 */}\n        <TextFieldOnKeyEnterUp onKeyEnterUp={tryRegister} placeholder=\"请输入4到16位字母，数字\" value={password} onChange={handleInputPassword} type=\"text\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={tryRegister} fullWidth>\n          注册\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nRegisterArea.propTypes = {\n  onRegister: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nRegisterArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default RegisterArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nfunction UserInfo(props) {\n  const { $userInfo } = props;\n\n  return (\n    <List>\n      <ListItem>\n        已经登录，欢迎您!\n      </ListItem>\n      <ListItem>\n        {`用户名: ${$userInfo.get('username')}`}\n      </ListItem>\n    </List>\n  );\n}\n\nUserInfo.propTypes = {\n  $userInfo: PropTypes.instanceOf(Map).isRequired,\n};\n\nUserInfo.defaultProps = {};\n\nexport default UserInfo;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Map } from 'immutable';\nimport Fade from '@material-ui/core/Fade';\nimport { useHistory } from 'react-router-dom';\n\n\nimport LoginArea from './components/LoginArea';\nimport RegisterArea from './components/RegisterArea';\nimport LoginStatus from './components/LoginStatus';\nimport { globalActions, userActions } from '../../store/actions';\nimport { stopEventPropagation, uniqueId } from '../../utils';\n\nconst usernamePattern = /^[a-zA-Z0-9_-]{4,16}$/;\nconst passwordPattern = /^[a-zA-Z0-9_-]{4,16}$/;\n\nfunction AccountManagerContainer(props) {\n  const {\n    dispatch,\n    hasLogin,\n    $userInfo,\n    isLogining,\n    isRegistering,\n  } = props;\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const history = useHistory();\n\n  const [isShow, setIsShow] = useState(true);\n\n  const handleClickMask = useCallback(() => {\n    setIsShow(false);\n  }, [setIsShow]);\n\n  const afterExitTransition = useCallback(() => {\n    history.push('/');\n  }, []);\n\n  const handleTabChange = useCallback((evt, tabIndexChangedTo) => {\n    setTabIndex(tabIndexChangedTo);\n  }, []);\n\n  const handleLogin = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectLogin(userInfo));\n      } else {\n        dispatch(\n          globalActions.addOneNitification({\n            type: 'error',\n            title: '登录失败',\n            detail: '非法用户名或密码，请输入4到16位的字母或数字',\n            key: uniqueId('notify'),\n          }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleRegister = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectRegister(userInfo));\n      } else {\n        dispatch(\n          globalActions.addOneNitification({\n            type: 'error',\n            title: '注册失败',\n            detail: '非法用户名或密码，请输入4到16位的字母或数字',\n            key: uniqueId('notify'),\n          }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleClickLogoutButton = useCallback(() => {\n    dispatch(userActions.logout());\n  }, [dispatch]);\n\n  const loginArea = useMemo(\n    () => <LoginArea disabled={isLogining} onLogin={handleLogin} />,\n    [isLogining, handleLogin],\n  );\n  const registerArea = useMemo(\n    () => <RegisterArea disabled={isRegistering} onRegister={handleRegister} />,\n    [handleRegister, isRegistering],\n  );\n\n  const tabContentItems = [loginArea, registerArea];\n\n  return (\n    <Fade in={isShow} onExited={afterExitTransition}>\n      <div\n        className=\"AccountManager\"\n        onClick={handleClickMask}\n        style={{\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          top: '0',\n          left: '0',\n          height: '100%',\n          width: '100%',\n          zIndex: '3000',\n          boxSizing: 'border-box',\n          padding: '0 50px',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n        }}\n      >\n        <Paper onClick={stopEventPropagation}>\n          {hasLogin ? (\n            <>\n              <LoginStatus $userInfo={$userInfo} />\n              <Button\n                fullWidth\n                variant=\"outlined\"\n                onClick={handleClickLogoutButton}\n              >\n                退出\n              </Button>\n            </>\n          ) : (\n            <>\n              <Tabs\n                value={tabIndex}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleTabChange}\n                centered\n              >\n                <Tab label=\"登录\" />\n                <Tab label=\"注册\" />\n              </Tabs>\n              <div>{tabContentItems[tabIndex]}</div>\n            </>\n          )}\n        </Paper>\n      </div>\n    </Fade>\n  );\n}\n\nAccountManagerContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLogining: PropTypes.bool.isRequired,\n  isRegistering: PropTypes.bool.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  $userInfo: PropTypes.instanceOf(Map),\n};\n\nAccountManagerContainer.defaultProps = {\n  $userInfo: null,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n  isLogining: $state.getIn(['user', 'isLogining']),\n  isRegistering: $state.getIn(['user', 'isRegistering']),\n  $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(AccountManagerContainer);\n"],"sourceRoot":""}