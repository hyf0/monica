{"version":3,"sources":["store/tasks/actionTypes.js","store/tasks/actions.js","store/global/actionTypes.js","store/global/actions.js","store/editingTask/actionTypes.js","store/editingTask/actions.js","store/effect/actionTypes.js","store/effect/actions.js","store/user/actionTypes.js","store/user/actions.js","utils/constants.js","containers/CompleteTaskButtonContainer.jsx","containers/EdtingTaskButtonContainer.jsx","store/global/reducer.js","utils/index.js","store/tasks/reducer.js","env.js","store/editingTask/reducer.js","store/user/reducer.js","store/reducer.js","utils/request.js","config.js","store/user/saga.js","store/effect/sagas.js","store/tasks/saga.js","store/editingTask/saga.js","store/global/sagas.js","store/rootSaga.js","store/index.js","hooks/helper.js","hooks/index.js","components/HomeButton.jsx","containers/AppBarContainer/index.jsx","components/List.jsx","components/TaskList.jsx","containers/TaskListContainer.jsx","components/MenuList.jsx","components/InputOnEnter.jsx","containers/MenuListContainer/index.jsx","components/Drawer.jsx","components/mask.jsx","containers/SideMenuContainer/index.jsx","components/NotFound.jsx","components/Checkbox.jsx","containers/TodoListContainer/index.jsx","components/PinnedTaskList.jsx","components/RecentTaskList.jsx","containers/HomeContainer.jsx","components/TaskItemList.jsx","containers/EditingTaskPageContainer.jsx","components/LoginArea.jsx","components/RegisterArea.jsx","components/LoginStatus.jsx","containers/AccountManagerContainer.jsx","components/NotificationCard.jsx","containers/NotificationsPanelContainer.jsx","Layout/Index/index.jsx","containers/InitWrapperContainer.jsx","App.jsx","index.js"],"names":["CHANGE_TASKS","ADD_TASK_TO_TASKS","REMOVE_TASK_IN_TASKS","CHANGE_CURRENT_TODO_TASK","CHANGE_CURRENT_TODO_TASK_BY_ID","CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID","TOGGLE_TASK_ITEM_CHECKED","UPDATE_TASK_IN_TASKS","EFFECT_GET_TASK_LIST","EFFECT_DELETE_TASK","EFFECT_GET_TASK","changeTasks","$tasks","type","actionTypes","payload","addTaskToTasks","task","removeTaskInTasks","changeCurrentTodoTask","$task","changeCurrentTodoTaskById","taskId","checkTaskItemInTaskItemsByTaskId","toggleTaskItemPropChecked","$taskItem","updateTaskInTasks","effectGetTaskList","effectDeleteTask","effectGetTask","SHOW_SIDE_MENU","HIDE_SIDE_MENU","SHOW_ACCOUNT_MANAGER","HIDE_ACCOUNT_MANAGER","ADD_ONE_NOTIFICATION","REMOVE_THE_TOP_NOTIFICATION","showSideMenu","hideSideMenu","showAccountManager","hideAccountManager","addOneNitification","info","removeTheTopNitification","CHANGE_CURRENT_TASK","ADD_TASK_ITEM_IN_CURRENT_TASK","REMOVE_TASK_ITEM_IN_CURRENT_TASK","SNAPSHOT_CURRENT_TASK","UNDO_CURRENT_TASK","REDO_CURRENT_TASK","CLEAR_FUTURE_TASKS","CLEAR_EDITNG_HISTORY","EFFECT_UPDATE_TASK","changeCurrentTask","addTaskItemInCurrentTask","removeTaskItemInCurrentTask","undoCurrentTask","redoCurrentTask","snapshotCurrentTask","clearFutureTasks","clearAllEdtingHistory","effectUpdateTask","EFFECT_CREATE_TASK","createTask","updateTask","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REGISTER_SUCCESS","REGISTER_FAIL","EFFECT_GET_USERINFO","EFFECT_LOGIN","EFFECT_REGISTER","loginSuccess","$loginInfo","loginFail","err","logout","registerSuccess","$registerInfo","registerFail","effectGetUserInfo","effectLogin","userInfo","effectRegister","COLOR_GREEN","COLOR_ORANGE","CompleteTaskButton","props","buttonText","buttonColor","$tasksItemsEntity","$tasksItemsRefs","dispatch","history","$unchckedTaskItems","useMemo","filter","getIn","map","get","numOfAllTaskItem","size","numOfCheckedItem","isAllComleted","hasZeroTaskItem","onClickCompleteButton","useCallback","push","concat","taskActions","react_default","a","createElement","Button","style","backgroundColor","color","transition","fullWidth","aria-label","onClick","defaultProps","List","Map","connect","$state","$editingTask","$futureTasks","$oldTasks","withRouter","isUndoBtnDisabled","isRedoBtnDisabled","undoEditing","editingTaskActions","redoEditing","ButtonGroup","variant","disabled","defaultState","fromJS","notifications","globalReducer","state","arguments","length","undefined","action","_action$type","_action$payload","Error","set","rawInfo","shift","uniqueId","count","timestamp","Date","now","toString","prefix","ramdomNumsStr","String","Math","round","random","id","withStopEventtPropagation","func","evt","stopPropagation","_len","args","Array","_key","apply","stopEventPropagation","normalize","arr","name","key","result","entity","refs","forEach","oriObj","identityKey","denormalize","obj","entityName","refsName","ref","getLocalJWT","localStorage","getItem","setLocalJWT","jwt","setItem","host","tasks","currentTodoTask","TasksReducer","tasksEntity","tasksRefs","tasksTobeChangedTo","newTask","merge","targetId","delete","todoTask","propPath","setIn","userActionTypes","clear","currentTask","futureTasks","oldTasks","editingTaskReducer","taskItems","taskItemsEntity","taskItemsRefs","tid","oldTask","last","pop","futureTask","hasLogin","isLogining","isRegistering","userReducer","loginInfo","reducers","combineReducers","global","tasksReducer","editingTask","user","isDev","location","some","hs","includes","request","Axios","create","baseURL","timeout","interceptors","use","config","changedConfig","headers","Authorization","Promise","reject","response","errorResp","data","getUserInfo","login","register","_ref","regenerator_default","wrap","_context","prev","next","call","sent","put","userActions","t0","console","error","stop","_marked","_ref2","loginResp","_loginResp$user","userInfoResp","token","rest","_context2","post","Object","objectWithoutProperties","objectSpread","globalActions","title","_marked2","_ref3","registerResp","_registerResp$user","_context3","message","_marked3","saga","takeEvery","takeLatest","get$TaskById","updateTaskBy$task","rawTask","items","abrupt","sagas_marked","_$task$toJS","updatedTask","updatedItems","updatedRest","$updatedTask","errorInfo","toJS","sagas_marked2","getTaskList","deleteTaskById","get$TaskThenChangeAndUpdate","rowTaskList","saga_marked","saga_marked2","_ref4","saga_marked3","tasks_saga","taskActionTypes","updateTaskThenSyncInTasks","get$TaskThenChange","editingTask_saga_marked","editingTask_saga_marked2","editingTask_saga","editingTaskActionTypes","removeTheTopNotificationAfterWhile","ms","resolve","setTimeout","global_sagas_marked","sagas","globalActionTypes","mySaga","taskResp","rootSaga_marked","effectActionTypes","all","toConsumableArray","userSagas","taskSagas","editingTaskSagas","globalSagas","rootSaga_marked2","store","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","log","createStore","applyMiddleware","run","rootSaga","HomeButton","needDoubleClick","forceUpdate","_useState5","useState","setUpdateCount","slicedToArray","prevCount","useForceUpdate","clickCountRef","useRef","timerIdRef","doOnClick","current","clickCountSoFar","clearTimeout","IconButton","edge","Home_default","StartOneTaskButton","AppBarContainer","onClickMenuButton","onClickStartOneTaskButton","onClickHomeButton","AppBar","flex","position","Toolbar","Menu_default","className","padding","react_router","path","component","EdtingTaskButtonContainer","CompleteTaskButtonContainer","render","AppBarContainer_StartOneTaskButton","components_HomeButton","$currentTaskItems","ListWrapper","children","subsubheader","ListSubheader","width","subheader","renderTask","onClickTask","onClickEditTaskButton","onClickRemoveTaskButton","isEditable","react_dump_transition_dist","ListItem","height","button","ListItemText","primary","Fragment","BorderColor_default","DeleteForever_default","TaskList","onClickSwitchButton","withStopEvtPropagation","callback","subHeader","display","justifyContent","alignItems","Typography","Switch","checked","components_List","Divider","$global","$tasksEntity","$tasksRefs","$taskList","isOnline","_useState","navigator","onLine","_useState2","setIsOnline","onlineListener","offlineListener","useEffect","addEventListener","removeEventListener","useIsOnline","setIsEditable","toggleIsEditable","prevFlag","components_TaskList","MenuList","React","Children","node","index","InputOnEnter","onEnter","onKeyEnterUp","_evt$keyCode","keyCode","TextField","assign","onKeyUp","newTaskTitle","setNewTaskTitle","handleCreateTaskInputChange","target","value","handleEnterUp","trim","effectActions","handleClickLoginBtn","components_MenuList","components_InputOnEnter","label","onChange","margin","Drawer","show","direction","maxWidth","overflowY","overflowX","opacity","zIndex","Mask","role","top","left","onClickSideMenuMask","mask","components_Drawer","containers_TaskListContainer","containers_MenuListContainer","NotFound","time","isTimeout","setIsTimeout","_useState3","_useState4","seconds","setSeconds","timeoutId","intervalId","setInterval","clearInterval","to","Checkbox","ListItemOfTaskItemWithCheckbox","rawOnClick","components_Checkbox","TodoListContainer","match","params","$currentTodoTask","_useMemo","unfinished","finished","taskItemId","_useMemo2","unfinishedTaskItemRefs","finishedTaskItemRefs","jumpToEditingPage","components_NotFound","dense","gutterBottom","$item","PinnedTaskList","onClickIconButton","onClickIconButtonWithStopEvtPropagation","Star_default","RecentTaskList","StarBorder_default","HomeContainer","$recentTasks","sort","$taskA","$taskB","taskATime","$pinnedTasks","pinOneTask","$pinndTask","unpinOneTask","$unpinndTask","components_PinnedTaskList","components_RecentTaskList","$recentTaskIds","$pinnedTaskIds","TaskItemList","onCreateNewTaskItem","onClickRemoveButton","onClickEditButton","newTaskItemTitle","setNewTaskItemTitle","onInputNewTaskItem","keyUp","taksItemTitle","emitTaskId","Input","placeholder","onClickCheckbox","EditingTaskPageContainer","$currentEditingTask","isTaskLoaded","setIsTaskLoaded","isTaskTaskChanged","setIsTaskTaskChanged","$newTaskItem","components_TaskItemList","LoginArea","_React$useState","_React$useState2","username","setUsername","_React$useState3","_React$useState4","password","setPassword","handleInputUsername","handleInputPassword","onLogin","tryLogin","isDisabled","RegisterArea","onRegister","tryRegister","UserInfo","$userInfo","usernamePattern","passwordPattern","AccountManagerContainer","tabIndex","setTabIndex","handleClickMask","handleTabChange","tabIndexChangedTo","handleLogin","_userInfo$username","_userInfo$password","test","detail","handleRegister","_userInfo$username2","_userInfo$password2","handleClickLogoutButton","tabContentItems","components_LoginArea","components_RegisterArea","boxSizing","Paper","LoginStatus","Tabs","indicatorColor","textColor","centered","Tab","SUCCESS","ERROR","TYPE_COLOR_MAPPING","_TYPE_COLOR_MAPPING","defineProperty","NotificationCard","forwardRef","subtitle","iconStyle","borderRadius","overflow","icon","PriorityHigh_default","Clear_default","Done_default","Card","CardHeader","avatar","types","WARN","propTypes","PropTypes","oneOf","isRequired","objectOf","oneOfType","string","number","NotificationsPanelContainer","$notifications","_ref$detail","_ref$type","components_NotificationCard","marginTop","Index","flexFlow","containers_NotificationsPanelContainer","containers_AppBarContainer","containers_SideMenuContainer","containers_AccountManagerContainer","InitWrapperContainer","bool","App","es","containers_InitWrapperContainer","react_router_dom","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.66c9015e.chunk.js","sourcesContent":["/* eslint-disable operator-linebreak */\n\nexport const CHANGE_TASKS = 'tasks/CHANGE_TASKS';\n\nexport const ADD_TASK_TO_TASKS = 'tasks/ADD_TASK_TO_TASKS';\n\nexport const REMOVE_TASK_IN_TASKS = 'tasks/REMOVE_TASK_IN_TASKS';\n\nexport const CHANGE_CURRENT_TODO_TASK = 'tasks/CHANGE_CURRENT_TODO_TASK';\n\nexport const CHANGE_CURRENT_TODO_TASK_BY_ID =\n  'tasks/CHANGE_CURRENT_TODO_TASK_BY_ID';\n\n// -- task item\n\n// export const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX =\n//   'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX';\n\nexport const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID =\n  'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID';\n\nexport const TOGGLE_TASK_ITEM_CHECKED = 'tasks/TOGGLE_TASK_ITEM_CHECKED';\n\n// editing task\n\n// export const UPDARE_TASK_FROM_EDTING = 'tasks/UPDARE_TASK_FROM_EDTING';\n\nexport const UPDATE_TASK_IN_TASKS = 'tasks/UPDATE_TASK_IN_TASKS';\n\n// effect\n\nexport const EFFECT_GET_TASK_LIST = 'tasks/EFFECT_GET_TASK_LIST';\n\nexport const EFFECT_DELETE_TASK = 'tasks/EFFECT_DELETE_TASK';\n\nexport const EFFECT_GET_TASK = 'tasks/EFFECT_GET_TASK';\n\n// export const EFFECT_UPDATE_TASK = 'tasks/EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\nexport const changeTasks = ($tasks) => ({\n  type: actionTypes.CHANGE_TASKS,\n  payload: $tasks,\n});\n\nexport const addTaskToTasks = (task) => ({\n  type: actionTypes.ADD_TASK_TO_TASKS,\n  payload: task,\n});\n\nexport const removeTaskInTasks = (task) => ({\n  type: actionTypes.REMOVE_TASK_IN_TASKS,\n  payload: task,\n});\n\nexport const changeCurrentTodoTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK,\n  payload: $task,\n});\n\nexport const changeCurrentTodoTaskById = (taskId) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID,\n  payload: taskId,\n});\n\n// -- task item\n\n// export const checkTaskItemInTaskItemsByIndex = (index) => ({\n//   type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX,\n//   payload: index,\n// });\n\nexport const checkTaskItemInTaskItemsByTaskId = (taskId) => ({\n  type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID,\n  payload: taskId,\n});\n\nexport const toggleTaskItemPropChecked = ($taskItem) => ({\n  type: actionTypes.TOGGLE_TASK_ITEM_CHECKED,\n  payload: $taskItem,\n});\n\n// edting task\n\n// export const updateTaskFromEdting = ($task) => ({\n//   type: actionTypes.UPDARE_TASK_FROM_EDTING,\n//   payload: $task,\n// });\n\nexport const updateTaskInTasks = ($task) => ({\n  type: actionTypes.UPDATE_TASK_IN_TASKS,\n  payload: $task,\n});\n\n// effect\n\nexport const effectGetTaskList = () => ({\n  type: actionTypes.EFFECT_GET_TASK_LIST,\n});\n\nexport const effectDeleteTask = (taskId) => ({\n  type: actionTypes.EFFECT_DELETE_TASK,\n  payload: taskId,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n\n// export const effectUpdateTask = ($task) => ({\n//   type: actionTypes.EFFECT_UPDATE_TASK,\n//   payload: $task,\n// });\n","export const SHOW_SIDE_MENU = 'global/SHOW_SIDE_MENU';\n\nexport const HIDE_SIDE_MENU = 'global/HIDE_SIDE_MENU';\n\nexport const SHOW_ACCOUNT_MANAGER = 'SHOW_ACCOUNT_MANAGER';\n\nexport const HIDE_ACCOUNT_MANAGER = 'HIDE_ACCOUNT_MANAGER';\n\nexport const ADD_ONE_NOTIFICATION = 'ADD_ONE_NOTIFICATION';\n\nexport const REMOVE_THE_TOP_NOTIFICATION = 'REMOVE_THE_TOP_NOTIFICATION';\n\n// export const CHANGE_CURRENT_PATH = 'global/CHANGE_CURRENT_PATH';\n","import * as actionTypes from './actionTypes';\n\nexport const showSideMenu = () => ({\n  type: actionTypes.SHOW_SIDE_MENU,\n});\n\nexport const hideSideMenu = () => ({\n  type: actionTypes.HIDE_SIDE_MENU,\n});\n\nexport const showAccountManager = () => ({\n  type: actionTypes.SHOW_ACCOUNT_MANAGER,\n});\n\nexport const hideAccountManager = () => ({\n  type: actionTypes.HIDE_ACCOUNT_MANAGER,\n});\n\n/**\n *\n * @param {{\n *  title: string;\n *  message?: string;\n *  type: 'warn' | 'error' | 'success';\n *  key: string;\n * }} info\n */\nexport const addOneNitification = (info) => ({\n  type: actionTypes.ADD_ONE_NOTIFICATION,\n  payload: info,\n});\n\nexport const removeTheTopNitification = () => ({\n  type: actionTypes.REMOVE_THE_TOP_NOTIFICATION,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","/* eslint-disable operator-linebreak */\nexport const CHANGE_CURRENT_TASK = 'editingTask/CHANGE_CURRENT_TASK';\n\nexport const ADD_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/ADD_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const REMOVE_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/REMOVE_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const SNAPSHOT_CURRENT_TASK = 'editingTask/SNAPSHOT_CURRENT_TASK';\n\nexport const UNDO_CURRENT_TASK = 'editingTask/UNDO_CURRENT_TASK';\n\nexport const REDO_CURRENT_TASK = 'editingTask/REDO_CURRENT_TASK';\n\nexport const CLEAR_FUTURE_TASKS = 'editingTask/CLEAR_FUTURE_TASKS';\n\nexport const CLEAR_EDITNG_HISTORY = 'editingTask/CLEAR_EDITNG_HISTORY';\n\n// effect\n\nexport const EFFECT_UPDATE_TASK = 'editingtask/EFFECT_UPDATE_TASK';\n\nexport const EFFECT_GET_TASK = 'editingTask/EFFECT_GET_TASK';\n","/* eslint-disable arrow-parens */\nimport * as actionTypes from './actionTypes';\n\nexport const changeCurrentTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TASK,\n  payload: $task,\n});\n\nexport const addTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const removeTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const undoCurrentTask = () => ({\n  type: actionTypes.UNDO_CURRENT_TASK,\n});\n\nexport const redoCurrentTask = () => ({\n  type: actionTypes.REDO_CURRENT_TASK,\n});\n\nexport const snapshotCurrentTask = () => ({\n  type: actionTypes.SNAPSHOT_CURRENT_TASK,\n});\n\nexport const clearFutureTasks = () => ({\n  type: actionTypes.CLEAR_FUTURE_TASKS,\n});\n\nexport const clearAllEdtingHistory = () => ({\n  type: actionTypes.CLEAR_EDITNG_HISTORY,\n});\n\n// effect\n\nexport const effectUpdateTask = ($task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: $task,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n","export const EFFECT_CREATE_TASK = 'EFFECT_CREATE_TASK';\n\nexport const EFFECT_UPDATE_TASK = 'EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\nexport const createTask = (task) => ({\n  type: actionTypes.EFFECT_CREATE_TASK,\n  payload: task,\n});\n\nexport const updateTask = (task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: task,\n});\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n// effect\n\nexport const EFFECT_GET_USERINFO = 'EFFECT_GET_USERINFO';\n\nexport const EFFECT_LOGIN = 'EFFECT_LOGIN';\n\nexport const EFFECT_REGISTER = 'EFFECT_REGISTER';\n","import * as actionTypes from './actionTypes';\n\nexport const loginSuccess = ($loginInfo) => ({\n  type: actionTypes.LOGIN_SUCCESS,\n  payload: $loginInfo,\n});\n\nexport const loginFail = (err) => ({\n  type: actionTypes.LOGIN_FAIL,\n  payload: err,\n});\n\nexport const logout = () => ({\n  type: actionTypes.LOGOUT,\n});\n\nexport const registerSuccess = ($registerInfo) => ({\n  type: actionTypes.REGISTER_SUCCESS,\n  payload: $registerInfo,\n});\n\nexport const registerFail = (err) => ({\n  type: actionTypes.REGISTER_FAIL,\n  payload: err,\n});\n\n// effect\n\nexport const effectGetUserInfo = () => ({\n  type: actionTypes.EFFECT_GET_USERINFO,\n});\n\nexport const effectLogin = (userInfo) => ({\n  type: actionTypes.EFFECT_LOGIN,\n  payload: userInfo,\n});\n\nexport const effectRegister = (userInfo) => ({\n  type: actionTypes.EFFECT_REGISTER,\n  payload: userInfo,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","export const COLOR_BLUE = '#2196f3';\n\nexport const COLOR_GREEN = '#43a047';\n\nexport const COLOR_YELLOW = '#fdd835';\n\nexport const COLOR_GREY = '#9e9e9e';\n\nexport const COLOR_ORANGE = '#ff5722';\n\nexport const COLOR_RED = '#f44336';\n\nexport const ROOT_URL = '/monica/';\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { List, Map } from 'immutable';\n\nimport { COLOR_ORANGE, COLOR_GREEN, COLOR_RED } from '../utils/constants';\nimport { taskActions } from '../store/actions';\n\nconst CompleteTaskButton = (props) => {\n  const {\n    $task,\n    $tasksItemsEntity,\n    $tasksItemsRefs,\n    dispatch,\n    history,\n  } = props;\n\n  const $unchckedTaskItems = useMemo(\n    () =>\n      $tasksItemsRefs\n        .filter((taskId) => !$tasksItemsEntity.getIn([taskId, 'checked']))\n        .map((taskId) => $tasksItemsEntity.get(taskId)),\n    [$tasksItemsEntity, $tasksItemsRefs],\n  );\n  const numOfAllTaskItem = $tasksItemsRefs.size;\n  const numOfUncheckedItem = $unchckedTaskItems.size;\n  const numOfCheckedItem = numOfAllTaskItem - numOfUncheckedItem;\n  const isAllComleted = numOfAllTaskItem === numOfCheckedItem;\n  const hasZeroTaskItem = numOfAllTaskItem === 0;\n  const onClickCompleteButton = useCallback(() => {\n    if (hasZeroTaskItem) {\n      // 零个可完成任务项，提供跳转到编辑页面的快速方式\n      history.push(`/edit/${$task.get('id')}`);\n    } else if (isAllComleted) {\n      /* 所有任务项全部完成，跳转到APP主页 */\n      history.push('/');\n    } else {\n      dispatch(\n        taskActions.checkTaskItemInTaskItemsByTaskId(\n          $unchckedTaskItems.getIn(['0', 'id']),\n        ),\n      );\n    }\n  }, [\n    $task,\n    hasZeroTaskItem,\n    isAllComleted,\n    $unchckedTaskItems,\n    history,\n    dispatch,\n  ]);\n\n  let buttonText;\n  let buttonColor;\n  if (hasZeroTaskItem) {\n    buttonText = '添加任务项';\n    buttonColor = COLOR_RED;\n  } else if (isAllComleted) {\n    buttonText = `全部完成(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_GREEN;\n  } else {\n    buttonText = `完成一个任务项(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_ORANGE;\n  }\n\n  return (\n    <Button\n      style={{\n        backgroundColor: buttonColor,\n        color: '#fff',\n        transition: 'background-color 300ms',\n      }}\n      size=\"medium\"\n      fullWidth\n      aria-label=\"add\"\n      onClick={onClickCompleteButton}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nCompleteTaskButton.propTypes = {\n  $tasksItemsEntity: Proptypes.instanceOf(Map),\n  $tasksItemsRefs: Proptypes.instanceOf(List),\n  $task: Proptypes.instanceOf(Map),\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n};\n\nCompleteTaskButton.defaultProps = {\n  $tasksItemsRefs: new List(),\n  $tasksItemsEntity: new Map(),\n  $task: null,\n};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $tasksItemsEntity: $task.getIn(['currentTodoTask', 'items', 'entity']),\n    $tasksItemsRefs: $task.getIn(['currentTodoTask', 'items', 'refs']),\n    $task: $task.get('currentTodoTask'),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(CompleteTaskButton);\n","import React, { useCallback } from 'react';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router-dom';\nimport { List } from 'immutable';\nimport { editingTaskActions } from '../store/actions';\n\nconst EdtingTaskButtonContainer = (props) => {\n  const { $futureTasks, $oldTasks, dispatch } = props;\n  const isUndoBtnDisabled = $oldTasks.size === 0;\n  const isRedoBtnDisabled = $futureTasks.size === 0;\n\n  const undoEditing = useCallback(() => {\n    dispatch(editingTaskActions.undoCurrentTask());\n  }, [dispatch]);\n\n  const redoEditing = useCallback(() => {\n    dispatch(editingTaskActions.redoCurrentTask());\n  }, [dispatch]);\n\n  return (\n    <ButtonGroup fullWidth variant=\"outlined\">\n      <Button onClick={undoEditing} disabled={isUndoBtnDisabled}>\n        Undo\n      </Button>\n      <Button onClick={redoEditing} disabled={isRedoBtnDisabled}>\n        Redo\n      </Button>\n    </ButtonGroup>\n  );\n};\nEdtingTaskButtonContainer.propTypes = {\n  $futureTasks: Proptypes.instanceOf(List).isRequired,\n  $oldTasks: Proptypes.instanceOf(List).isRequired,\n  dispatch: Proptypes.func.isRequired,\n  // isEditingTaskEdited: Proptypes.bool.isRequired,\n};\n\nconst mapState = ($state) => {\n  const $editingTask = $state.get('editingTask');\n  return {\n    $futureTasks: $editingTask.get('futureTasks'),\n    $oldTasks: $editingTask.get('oldTasks'),\n  };\n};\nexport default connect(\n  mapState,\n  null,\n)(withRouter(EdtingTaskButtonContainer));\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  showSideMenu: false,\n  showAccountManager: false,\n  notifications: [], // 存储原生js的对象，非immutable\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst globalReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  // const { type = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.SHOW_SIDE_MENU: {\n      return state.set('showSideMenu', true);\n    }\n    case actionTypes.HIDE_SIDE_MENU: {\n      return state.set('showSideMenu', false);\n    }\n    case actionTypes.SHOW_ACCOUNT_MANAGER: {\n      return state.set('showAccountManager', true);\n    }\n    case actionTypes.HIDE_ACCOUNT_MANAGER: {\n      return state.set('showAccountManager', false);\n    }\n    case actionTypes.ADD_ONE_NOTIFICATION: {\n      const rawInfo = payload;\n      return state.set('notifications', state.get('notifications').push(rawInfo));\n    }\n    case actionTypes.REMOVE_THE_TOP_NOTIFICATION: {\n      return state.set('notifications', state.get('notifications').shift());\n    }\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","// import { isDev } from '../env';\n\nexport const uniqueId = (function saveNextId() {\n  let count = -1;\n  const timestamp = Date.now().toString();\n  return function generatorOfUniqueId(prefix = '') {\n    count += 1;\n    const ramdomNumsStr = `${String(Math.round(Math.random() * 100000000))}-${String(Math.round(Math.random() * 100000000))}`;\n    const id = `${ramdomNumsStr}-${timestamp}-${count}`;\n    if (prefix.length === 0) return id;\n    return `${prefix}-${id}`;\n  };\n}());\n\n// export function deepCopy(obj) {\n//   return JSON.parse(JSON.stringify(obj));\n// }\n\nexport function withStopEventtPropagation(func) {\n  return (evt, ...args) => {\n    evt.stopPropagation();\n    return func(...args);\n  };\n}\n\nexport function stopEventPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n *\n * @param {Array} arr\n * @param {String} name\n * @param {String} key\n */\nexport function normalize(arr, name = 'entity', key = 'id') {\n  const result = {};\n  const entity = {};\n  const refs = [];\n  const refsName = 'refs';\n  result[name] = entity;\n  result[refsName] = refs;\n  arr.forEach((oriObj) => {\n    const identityKey = oriObj[key];\n    refs.push(identityKey);\n    entity[identityKey] = oriObj;\n  });\n  return result;\n}\n\nexport function denormalize(obj, entityName = 'entity', refsName = 'refs') {\n  const result = obj[refsName].map((ref) => obj[entityName][ref]);\n  return result;\n}\n\nexport function getLocalJWT() {\n  return localStorage.getItem('__jwt') || '';\n}\n\nexport function setLocalJWT(jwt) {\n  localStorage.setItem('__jwt', jwt);\n}\n// window.getLocalJWT = getLocalJWT;\n// window.setLocalJWT = setLocalJWT;\n","/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { normalize } from '../../utils';\nimport { userActionTypes } from '../actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  tasks: normalize([]),\n  currentTodoTask: null,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst TasksReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n  // 快捷访问方式\n  /** @type Map<String, any> */\n  const tasks = state.get('tasks');\n  /** @type Map<String, any> */\n  const tasksEntity = state.getIn(['tasks', 'entity']);\n  /** @type List<String> */\n  const tasksRefs = state.getIn(['tasks', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_TASKS: {\n      const tasksTobeChangedTo = payload;\n      return state.set('tasks', tasksTobeChangedTo);\n    }\n    case actionTypes.ADD_TASK_TO_TASKS: {\n      const { payload: newTask } = action;\n      const id = newTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.set(id, newTask),\n          refs: tasksRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_IN_TASKS: {\n      const targetTask = payload;\n      const targetId = targetTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.delete(targetId),\n          refs: tasksRefs.filter((id) => id !== targetId),\n        }),\n      );\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK: {\n      const todoTask = payload;\n      return state.set('currentTodoTask', todoTask);\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID: {\n      const id = payload;\n      return state.set('currentTodoTask', state.getIn(['tasks', 'entity', id]));\n    }\n\n    // editing task item\n\n    case actionTypes.TOGGLE_TASK_ITEM_CHECKED: {\n      const taskItem = payload;\n      const propPath = [\n        'currentTodoTask',\n        'items',\n        'entity',\n        taskItem.get('id'),\n        'checked',\n      ];\n      return state.setIn(propPath, !state.getIn(propPath));\n    }\n\n    // case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX: {\n    //   const taskItemIndex = payload;\n    //   const targetTaskItemId = state.getIn([\n    //     'currentTodoTask',\n    //     'items',\n    //     'refs',\n    //     taskItemIndex,\n    //   ]);\n    //   return state.setIn(\n    //     ['currentTodoTask', 'items', 'entity', targetTaskItemId, 'checked'],\n    //     true,\n    //   );\n    // }\n\n    case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID: {\n      const taskId = payload;\n      return state.setIn(\n        ['currentTodoTask', 'items', 'entity', taskId, 'checked'],\n        true,\n      );\n    }\n\n    // case actionTypes.UPDARE_TASK_FROM_EDTING: {\n    //   const task = payload;\n    //   const id = task.get('id');\n    //   return state.setIn(['tasks', 'entity', id], task);\n    // }\n    case actionTypes.UPDATE_TASK_IN_TASKS: {\n      const task = payload;\n      const id = task.get('id');\n      return state.setIn(['tasks', 'entity', id], task);\n    }\n\n    // user\n\n    case userActionTypes.LOGOUT: {\n      return state.set('tasks', state.get('tasks').merge({\n        entity: tasksEntity.clear(),\n        refs: tasksRefs.clear(),\n      }));\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default TasksReducer;\n","/**\n * @param {String} host\n */\nconst createIsDev = host => () => {\n  const hosts = ['localhost', '127.0.0.1'];\n  return hosts.some(hs => host.includes(hs));\n};\n\n// eslint-disable-next-line no-restricted-globals\nexport const isDev = createIsDev(location.host);\n// export const isDev = () => false;\nexport const foo = 'nothing';\n","/* eslint-disable arrow-parens */\n/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  currentTask: null,\n  futureTasks: [],\n  oldTasks: [],\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst editingTaskReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n\n  const taskItems = state.getIn(['currentTask', 'items']);\n  const taskItemsEntity = state.getIn(['currentTask', 'items', 'entity']);\n  const taskItemsRefs = state.getIn(['currentTask', 'items', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_CURRENT_TASK: {\n      const task = payload;\n      return state.set('currentTask', task);\n    }\n    case actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.set(id, $taskItem),\n          refs: taskItemsRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.delete(id),\n          refs: taskItemsRefs.filter((tid) => tid !== id),\n        }),\n      );\n    }\n    case actionTypes.UNDO_CURRENT_TASK: {\n      const oldTasks = state.get('oldTasks');\n      if (oldTasks.length !== 0) {\n        const futureTasks = state.get('futureTasks');\n        const currentTask = state.get('currentTask');\n        const oldTask = oldTasks.last();\n        return state.merge({\n          currentTask: oldTask,\n          futureTasks: futureTasks.push(currentTask),\n          oldTasks: oldTasks.pop(),\n        });\n      }\n      return state;\n    }\n    case actionTypes.REDO_CURRENT_TASK: {\n      const futureTasks = state.get('futureTasks');\n      if (futureTasks.length !== 0) {\n        const oldTasks = state.get('oldTasks');\n        const currentTask = state.get('currentTask');\n        const futureTask = futureTasks.last();\n        return state.merge({\n          currentTask: futureTask,\n          futureTasks: futureTasks.pop(),\n          oldTasks: oldTasks.push(currentTask),\n        });\n      }\n      return state;\n    }\n    case actionTypes.SNAPSHOT_CURRENT_TASK: {\n      const currentTask = state.get('currentTask');\n      if (currentTask != null) {\n        const oldTasks = state.get('oldTasks');\n        return state.set('oldTasks', oldTasks.push(currentTask));\n      }\n      return state;\n    }\n    case actionTypes.CLEAR_FUTURE_TASKS: {\n      return state.set('futureTasks', state.get('futureTasks').clear());\n    }\n    case actionTypes.CLEAR_EDITNG_HISTORY: {\n      return state.merge({\n        futureTasks: state.get('futureTasks').clear(),\n        oldTasks: state.get('oldTasks').clear(),\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default editingTaskReducer;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { setLocalJWT } from '../../utils';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  hasLogin: false,\n  userInfo: null,\n  isLogining: false,\n  isRegistering: false,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst userReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.EFFECT_LOGIN: {\n      return state.set('isLogining', true);\n    }\n    case actionTypes.EFFECT_REGISTER: {\n      return state.set('isRegistering', true);\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isLogining: false }, loginInfo);\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return state.set('isLogining', false);\n    }\n    case actionTypes.LOGOUT: {\n      setLocalJWT(''); // 清空本地jwt\n      return state.merge({\n        hasLogin: false,\n        userInfo: null,\n        isLogining: false,\n        isRegistering: false,\n      });\n    }\n    case actionTypes.REGISTER_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isRegistering: false }, loginInfo);\n    }\n    case actionTypes.REGISTER_FAIL: {\n      return state.set('isRegistering', false);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux-immutable';\n\nimport globalReducer from './global/reducer';\nimport tasksReducer from './tasks/reducer';\nimport editingTaskReducer from './editingTask/reducer';\nimport userReducer from './user/reducer';\n\n\nconst reducers = combineReducers({\n  global: globalReducer,\n  task: tasksReducer,\n  editingTask: editingTaskReducer,\n  user: userReducer,\n});\n\n/* eslint-disable */\n\nexport default reducers;\n","import Axios from 'axios';\nimport { getRemoteHostUrl } from '../config';\nimport { getLocalJWT, uniqueId } from '.';\n\nexport const request = Axios.create({\n  baseURL: getRemoteHostUrl(),\n  timeout: 1000,\n});\n\nexport const foo = ';';\n\nrequest.interceptors.request.use(\n  (config) => {\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return config;\n    const changedConfig = config;\n    changedConfig.headers.Authorization = `Bearer ${jwt}`;\n    return changedConfig;\n  },\n  (err) => Promise.reject(err),\n);\n\nrequest.interceptors.response.use(\n  (config) => config,\n  (err) => {\n    const { data: errorResp } = err.response;\n    errorResp.type = 'error';\n    errorResp.key = uniqueId('error');\n    return Promise.reject(errorResp);\n  },\n);\n","import { isDev } from \"./env\";\n\nexport function getRemoteHostUrl() {\n  if (isDev()) return 'http://localhost:3031/';\n  return 'http://101.37.174.138/';\n}\n","import {\n  call, put, takeEvery, takeLatest,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { userActionTypes } from '../actionTypes';\nimport { request } from '../../utils/request';\nimport { setLocalJWT, uniqueId } from '../../utils';\nimport { userActions, globalActions } from '../actions';\n\nfunction* getUserInfo() {\n  try {\n    const { data: userInfo } = yield call(request.get, '/users');\n    yield put(userActions.loginSuccess({\n      userInfo: fromJS(userInfo),\n    }));\n  } catch (err) {\n    console.error(err);\n    setLocalJWT('');\n  }\n}\n\nfunction* login(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: loginResp } = yield call(\n      request.post,\n      '/users/login',\n      userInfo,\n    );\n    const { user: userInfoResp = null, token, ...rest } = loginResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.loginSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '登陆成功',\n      key: uniqueId('notifi'),\n    }));\n  } catch (errResp) {\n    yield put(userActions.loginFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* register(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: registerResp } = yield call(request.post, '/users', userInfo);\n    const { user: userInfoResp = null, token, ...rest } = registerResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.registerSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '注册成功',\n      message: '已经为您自动登录应用',\n    }));\n  } catch (errResp) {\n    yield put(userActions.registerFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nexport default [\n  takeEvery(userActionTypes.EFFECT_GET_USERINFO, getUserInfo),\n  takeLatest(userActionTypes.EFFECT_REGISTER, register),\n  takeLatest(userActionTypes.EFFECT_LOGIN, login),\n];\n","// 在这里抽离出公共的saga函数\nimport { fromJS } from 'immutable';\n\nimport { call, put } from 'redux-saga/effects';\nimport { request } from '../../utils/request';\n\nimport { normalize, denormalize } from '../../utils';\nimport { globalActions } from '../actions';\n\nexport function* get$TaskById(taskId) {\n  try {\n    const { data: rawTask } = yield call(request.get, `/tasks/${taskId}`);\n    const { items, ...rest } = rawTask;\n    const $task = fromJS({\n      ...rest,\n      items: normalize(items),\n    });\n    return $task;\n  } catch (errResp) {\n    yield put(globalActions.addOneNitification(errResp));\n    return null;\n  }\n}\n\nexport function* updateTaskBy$task($task) {\n  try {\n    const { items, ...rest } = $task.toJS();\n    const task = {\n      ...rest,\n      items: denormalize(items),\n      timestamp: Date.now(),\n    };\n    const { data: updatedTask } = yield call(\n      request.put,\n      `/tasks/${task.id}`,\n      task,\n    );\n    const { items: updatedItems, ...updatedRest } = updatedTask;\n    const $updatedTask = fromJS({\n      ...updatedRest,\n      items: normalize(updatedItems),\n    });\n\n    return $updatedTask;\n  } catch (errResp) {\n    const { data: errorInfo } = errResp;\n    errorInfo.type = 'error';\n    errorInfo.title = '编辑任务失败';\n    yield put(globalActions.addOneNitification(errorInfo));\n    return null;\n  }\n}\n\nexport const foo = ' foo';\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { request } from '../../utils/request';\nimport { normalize } from '../../utils';\nimport { taskActions } from '../actions';\nimport { taskActionTypes } from '../actionTypes';\nimport { get$TaskById } from '../effect/sagas';\n\nfunction* getTaskList() {\n  try {\n    const { data: rowTaskList } = yield call(request.get, '/tasks');\n    const $tasks = fromJS(\n      normalize(\n        rowTaskList.map(({ items, ...rest }) => ({\n          ...rest,\n          items: fromJS(normalize(items)),\n        })),\n      ),\n    );\n    yield put(taskActions.changeTasks($tasks));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* deleteTaskById({ payload: taskId }) {\n  try {\n    yield call(request.delete, `/tasks/${taskId}`);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* get$TaskThenChangeAndUpdate({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(taskActions.changeCurrentTodoTask($task));\n  yield put(taskActions.updateTaskInTasks($task));\n}\n\n\nexport default [\n  takeEvery(taskActionTypes.EFFECT_GET_TASK_LIST, getTaskList),\n  takeEvery(taskActionTypes.EFFECT_DELETE_TASK, deleteTaskById),\n  takeEvery(taskActionTypes.EFFECT_GET_TASK, get$TaskThenChangeAndUpdate),\n];\n","import { call, takeEvery, put } from 'redux-saga/effects';\n\nimport { editingTaskActionTypes } from '../actionTypes';\nimport { taskActions, editingTaskActions } from '../actions';\nimport { get$TaskById, updateTaskBy$task } from '../effect/sagas';\n\nfunction* updateTaskThenSyncInTasks({ payload: $task }) {\n  const $updatedTask = yield call(updateTaskBy$task, $task);\n  if ($updatedTask == null) return;\n  yield put(taskActions.updateTaskInTasks($updatedTask));\n}\n\nfunction* get$TaskThenChange({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(editingTaskActions.changeCurrentTask($task));\n}\n\nexport default [\n  takeEvery(editingTaskActionTypes.EFFECT_UPDATE_TASK, updateTaskThenSyncInTasks),\n  takeEvery(editingTaskActionTypes.EFFECT_GET_TASK, get$TaskThenChange),\n];\n","import {\n  call, put, takeEvery,\n} from 'redux-saga/effects';\nimport { globalActionTypes } from '../actionTypes';\nimport { globalActions } from '../actions';\n\nconst timeout = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction* removeTheTopNotificationAfterWhile() {\n  yield call(timeout, 3000);\n  yield put(globalActions.removeTheTopNitification());\n}\n\nexport default [\n  takeEvery(\n    globalActionTypes.ADD_ONE_NOTIFICATION,\n    removeTheTopNotificationAfterWhile,\n  ),\n];\n","import {\n  call, put, takeEvery, all,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport { effectActionTypes } from './actionTypes';\nimport { request } from '../utils/request';\nimport { taskActions, globalActions } from './actions';\nimport { normalize } from '../utils';\n\nimport userSagas from './user/saga';\nimport taskSagas from './tasks/saga';\nimport editingTaskSagas from './editingTask/saga';\nimport globalSagas from './global/sagas';\n\n\n// function* login(action) {\n//   try {\n//     const { payload: userInfo } = action;\n//     const { data: loginResp } = yield call(\n//       request.post,\n//       '/users/login',\n//       userInfo,\n//     );\n//     const { user: userInfoResp = null, token, ...rest } = loginResp;\n//     setLocalJWT(token);\n//     yield put(\n//       userActions.loginSuccess(\n//         fromJS({\n//           token,\n//           userInfo: userInfoResp,\n//           ...rest,\n//         }),\n//       ),\n//     );\n//   } catch (e) {\n//     yield put(userActions.loginFail(e));\n//   }\n// }\n\n// function* register(action) {\n//   try {\n//     const { payload: userInfo } = action;\n//     const { data: registerResp } = yield call(request.post, '/users', userInfo);\n//     const { user: userInfoResp = null, token, ...rest } = registerResp;\n//     setLocalJWT(token);\n//     yield put(\n//       userActions.registerSuccess(\n//         fromJS({\n//           token,\n//           userInfo: userInfoResp,\n//           ...rest,\n//         }),\n//       ),\n//     );\n//   } catch (errResp) {\n//     yield put(userActions.registerFail());\n//   }\n// }\n\nfunction* createTask(action) {\n  try {\n    const { payload: task } = action;\n    const { data: taskResp } = yield call(request.post, '/tasks', task);\n    const { items } = taskResp;\n    yield put(\n      taskActions.addTaskToTasks(\n        fromJS({\n          ...taskResp,\n          items: normalize(items),\n        }),\n      ),\n    );\n  } catch (errResp) {\n    // eslint-disable-next-line no-console\n    console.error('createTask', errResp);\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* mySaga() {\n  // yield takeLatest(effectActionTypes.EFFECT_REGISTER, register);\n  // yield takeLatest(effectActionTypes.EFFECT_LOGIN, login);\n\n  // tasks\n\n  yield takeEvery(effectActionTypes.EFFECT_CREATE_TASK, createTask);\n\n  yield all([\n    ...userSagas,\n    ...taskSagas,\n    ...editingTaskSagas,\n    ...globalSagas,\n  ]);\n}\n\nexport default mySaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\n\nimport * as constants from './actionTypes';\nimport * as actions from './actions';\nimport reducers from './reducer';\n\nimport rootSaga from './rootSaga';\n\nimport { isDev } from '../env';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n// eslint-disable-next-line import/no-mutable-exports\nlet store;\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (isDev()) {\n  // eslint-disable-next-line no-console\n  console.log('正处于develoment模式');\n  store = createStore(\n    reducers,\n    /* eslint-disable */\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n} else {\n  store = createStore(reducers, applyMiddleware(...middlewares));\n}\n\nsagaMiddleware.run(rootSaga)\n\n// const store = createStore(persistedReducer);\n\nexport { store, constants, actions };\n","import { useState, useEffect } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Store } from 'redux';\nimport { is } from 'immutable';\n\n/**\n *\n * @param {Store} store\n */\nexport function createUseStore(store) {\n  return function useStore(\n    stateFilter = (state) => state,\n    // mapDispatchToProps = null,\n  ) {\n    const [filtedState, setFiltedState] = useState(\n      stateFilter(store.getState()),\n    );\n    useEffect(() => {\n      const unsub = store.subscribe(() => {\n        const changedState = stateFilter(store.getState());\n        setFiltedState((prevState) => {\n          // setState的值与先前state的值不一样时，react才会触发充渲染，注意react的前后state的比较仅仅是引用比较\n          // 因此这里实现的比较，可以根据的自己的需求，可以任何时候直接返回新state，或者浅比较再选择性返回，由于我\n          // 整个state tree都是immutable的，所以直接使用immutable提供的比较is函数，当状态没变时，返回先前的state的\n          // 由于引用相等，不会重渲染，而当改变时，返回新的state，引用改变，触发重渲染，结合immutable的特性和容器型组件的特点，有以下几个好处\n          // - 容器型组件仅仅从redux接受状态，在使用useStore的情况下，相当于隐式实现了memo功能\n          // - 结合整个state tree 都是 immutable 的特点，这里is比较函数，是相当高效率的，远高于浅比较。\n          if (!is(prevState, changedState)) {\n            return changedState;\n          }\n          return prevState;\n        });\n      });\n      return () => {\n        unsub();\n      };\n    }, [setFiltedState, stateFilter]);\n\n    return {\n      ...filtedState,\n      dispatch: store.dispatch, // 语法糖，方便使用dispatch，不用单独写个useDispatch方法了\n    };\n  };\n}\n\nexport const foo = 'foo';\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { store } from '../store';\nimport { createUseStore } from './helper';\n\nexport const useStore = createUseStore(store);\n\nexport function useIsOnline() {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const onlineListener = useCallback(() => {\n    setIsOnline(true);\n  }, []);\n  const offlineListener = useCallback(() => {\n    setIsOnline(false);\n  }, [setIsOnline]);\n  useEffect(() => {\n    window.addEventListener('online', onlineListener);\n    window.addEventListener('offline', offlineListener);\n    return () => {\n      window.removeEventListener('online', onlineListener);\n      window.removeEventListener('offline', offlineListener);\n    };\n  }, [setIsOnline, onlineListener, offlineListener]);\n  return isOnline;\n}\n\nexport function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, [setIsMounted]);\n\n  return isMounted;\n}\n\nexport function useForceUpdate() {\n  const [, setUpdateCount] = useState(0);\n  const forceUpdate = useCallback(() => {\n    setUpdateCount(prevCount => prevCount + 1);\n  }, [setUpdateCount]);\n  return forceUpdate;\n}\n\nexport const foo = 'oo';\n","/* eslint-disable no-lone-blocks */\nimport React, { useCallback, useRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Proptypes from 'prop-types';\n\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useForceUpdate } from '../hooks';\n\n\nfunction HomeButton(props) {\n  const {\n    onClick,\n    needDoubleClick,\n    timeout,\n  } = props;\n\n  const forceUpdate = useForceUpdate();\n  const clickCountRef = useRef(null);\n  const timerIdRef = useRef(null);\n\n  const doOnClick = useCallback((...args) => {\n    if (!needDoubleClick) {\n      onClick(...args);\n      return;\n    }\n\n    // 以下是开启了needDoubleClick模式的逻辑\n    clickCountRef.current += 1;\n    const clickCountSoFar = clickCountRef.current;\n    if (clickCountSoFar === 1) {\n      if (timerIdRef.current != null) clearTimeout(timerIdRef.current); // 防御性判断\n\n      timerIdRef.current = setTimeout(() => {\n        clickCountRef.current = 0;\n        timerIdRef.current = null;\n        forceUpdate();\n      }, timeout);\n    } else if (clickCountSoFar === 2) {\n      if (timerIdRef.current != null) clearTimeout(timerIdRef.current);\n\n      clickCountRef.current = 0;\n      onClick(...args);\n    }\n    forceUpdate();\n  }, [onClick, needDoubleClick, forceUpdate, timeout]);\n\n  const backgroundColor = clickCountRef.current === 1\n    ? 'rgba(0, 0, 0, 0.25)'\n    : '';\n\n  return (\n    <IconButton\n      style={{\n        backgroundColor,\n        transition: 'background-color 300ms linear',\n      }}\n      onClick={doOnClick}\n      edge=\"end\"\n    >\n      <HomeIcon />\n    </IconButton>\n  );\n}\n\nHomeButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n  needDoubleClick: Proptypes.bool,\n  timeout: Proptypes.number,\n};\n\nHomeButton.defaultProps = {\n  needDoubleClick: false,\n  timeout: 1000,\n};\n\nexport default HomeButton;\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\n// import MoreIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n\nimport { showSideMenu } from '../../store/actions';\nimport { COLOR_BLUE } from '../../utils/constants';\nimport CompleteTaskButtonContainer from '../CompleteTaskButtonContainer';\n\nimport EdtingTaskButtonContainer from '../EdtingTaskButtonContainer';\nimport HomeButton from '../../components/HomeButton';\n\nconst StartOneTaskButton = (props) => {\n  const { onClick } = props;\n  return (\n    <Button\n      style={{ backgroundColor: COLOR_BLUE, color: '#fff' }}\n      size=\"medium\"\n      fullWidth\n      // variant=\"outlined\"\n      color=\"primary\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'开始一项任务'}\n    </Button>\n  );\n};\n\nStartOneTaskButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n};\n\nfunction AppBarContainer(props) {\n  const { dispatch, history } = props;\n  const onClickMenuButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickStartOneTaskButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickHomeButton = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n        flex: '0 0 60px',\n      }}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <div\n          className=\"appbar-button\"\n          style={{\n            flex: '1',\n            padding: '0 5px',\n          }}\n        >\n          <Switch>\n            <Route path=\"/edit/:id\" component={EdtingTaskButtonContainer} />\n            <Route path=\"/todo\" component={CompleteTaskButtonContainer} />\n            <Route\n              render={() => (\n                <StartOneTaskButton onClick={onClickStartOneTaskButton} />\n              )}\n            />\n          </Switch>\n        </div>\n        <HomeButton needDoubleClick onClick={onClickHomeButton} />\n      </Toolbar>\n    </AppBar>\n  );\n}\nAppBarContainer.propTypes = {\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n  // $currentTaskItems: Proptypes.instanceOf(List),\n};\n\nAppBarContainer.defaultProps = {\n  // $currentTaskItems: new List(),\n};\n\nconst mapState = ($state) => ({\n  $currentTaskItems: $state.getIn(['global', '$currentTask', '$items']),\n});\nexport default connect(\n  mapState,\n  null,\n)(withRouter(AppBarContainer));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PropTypes from 'prop-types';\n\nfunction ListWrapper(props) {\n  const { title, children } = props;\n\n  const subsubheader = title === '' ? null : (\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n      {title}\n    </ListSubheader>\n  );\n\n  return (\n    <div>\n      <List\n        style={{\n          width: '100%',\n        }}\n        component=\"nav\"\n        // aria-label=\"secondary mailbox folders\"\n        subheader={subsubheader}\n      >\n        {children}\n      </List>\n    </div>\n  );\n}\n\nListWrapper.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nListWrapper.defaultProps = {\n  title: '',\n  children: <div>default props</div>,\n};\n\nexport default ListWrapper;\n","import React, { useCallback } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch as SwitchButton,\n  Typography,\n} from '@material-ui/core';\nimport { Fade, TransitionGroup } from 'react-dump-transition';\n\nimport List from './List';\n\n\n/* eslint-disable */\nconst renderTask = ({\n  $task,\n  onClickTask,\n  onClickEditTaskButton,\n  onClickRemoveTaskButton,\n  isEditable,\n}) => (\n  <Fade timeout={300} key={$task.get('id')}>\n    <ListItem\n      style={{ height: '48px' }}\n      onClick={() => onClickTask($task)}\n      button={!isEditable}\n    >\n      <ListItemText primary={$task.get('title')} />\n      {isEditable ? (\n        <React.Fragment>\n          <IconButton onClick={(evt) => onClickEditTaskButton(evt, $task)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton onClick={(evt) => onClickRemoveTaskButton(evt, $task)}>\n            <DeleteIcon />\n          </IconButton>\n        </React.Fragment>\n      ) : null}\n    </ListItem>\n  </Fade>\n);\n/* eslint-enable */\n\nfunction TaskList(props) {\n  const {\n    onClickTask,\n    onClickEditTaskButton,\n    onClickRemoveTaskButton,\n    $tasks,\n    isEditable,\n    onClickSwitchButton,\n  } = props;\n\n  const withStopEvtPropagation = useCallback(\n    (callback) => (evt, ...args) => {\n      evt.stopPropagation();\n      callback(...args);\n    },\n    [],\n  );\n\n  const subHeader = (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"left\">\n        <Typography>任务列表</Typography>\n      </div>\n      <div className=\"right\">\n        <Typography>\n          {'编辑'}\n          <SwitchButton\n            onClick={onClickSwitchButton}\n            checked={isEditable}\n            color=\"primary\"\n          />\n        </Typography>\n      </div>\n    </div>\n  );\n\n  return (\n    <List title={subHeader}>\n      <Divider />\n      <TransitionGroup>\n        {$tasks.map(($task) =>\n          renderTask({\n            $task,\n            isEditable,\n            onClickTask,\n            onClickRemoveTaskButton: withStopEvtPropagation(\n              onClickRemoveTaskButton,\n            ),\n            onClickEditTaskButton: withStopEvtPropagation(\n              onClickEditTaskButton,\n            ),\n          }))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickTask: PropTypes.func,\n  onClickRemoveTaskButton: PropTypes.func,\n  onClickEditTaskButton: PropTypes.func,\n  onClickSwitchButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  // children: PropTypes.element\n};\n\nTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickRemoveTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickRemoveTaskButton');\n  },\n  onClickEditTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickEditTaskButton');\n  },\n  onClickSwitchButton: () => {\n    /*eslint-disable*/\n    console.log('onClickSwitchButton');\n  },\n  isEditable: false,\n  // children: <div>default menu content</div>\n};\n\nexport default TaskList;\n","import React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { taskActions, globalActions } from '../store/actions';\n\nimport TaskList from '../components/TaskList';\nimport { useIsOnline } from '../hooks';\n\nfunction TaskListContainer(props) {\n  const {\n    $tasks, dispatch, history, hasLogin,\n  } = props;\n  const $tasksEntity = $tasks.get('entity');\n  const $tasksRefs = $tasks.get('refs');\n  const $taskList = useMemo(\n    () => $tasksRefs.map((taskId) => $tasksEntity.get(taskId)),\n    [$tasksEntity, $tasksRefs],\n  );\n\n  const isOnline = useIsOnline();\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const toggleIsEditable = useCallback(() => {\n    if (isOnline) {\n      setIsEditable((prevFlag) => !prevFlag);\n    }\n    // setIsEditable(!isEditable);\n  }, [setIsEditable, isOnline]);\n\n  const onClickEditTaskButton = useCallback(\n    ($task) => {\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/edit/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  const onClickRemoveTaskButton = useCallback(\n    ($task) => {\n      dispatch(taskActions.effectDeleteTask($task.get('id')));\n      dispatch(taskActions.removeTaskInTasks($task));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      // 防止编辑模式点击，然后进入到任务模式，只能在非编辑模式下进入任务\n      if (isEditable) return;\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history, isEditable],\n  );\n    // console.log('isOnline && hasLogin && isEditable', isOnline && hasLogin && isEditable);\n  return (\n    <TaskList\n      onClickEditTaskButton={onClickEditTaskButton}\n      onClickRemoveTaskButton={onClickRemoveTaskButton}\n      onClickTask={onClickTask}\n      isEditable={isOnline && hasLogin && isEditable}\n      onClickSwitchButton={toggleIsEditable}\n      $tasks={$taskList}\n    />\n  );\n}\n\nTaskListContainer.propTypes = {\n  $tasks: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasks: $task.get('tasks'),\n    hasLogin: $state.getIn(['user', 'hasLogin']),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TaskListContainer),\n);\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport PropTypes from 'prop-types';\n\nimport List from './List';\n\nfunction MenuList(props) {\n  const { children } = props;\n  return (\n    <List title=\"菜单项\">\n      <Divider />\n      {React.Children.map(children, (node, index) => (\n        <ListItem key={index}>{node}</ListItem>\n      ))}\n    </List>\n  );\n}\n\nMenuList.propTypes = {\n  children: PropTypes.node,\n};\n\nMenuList.defaultProps = {\n  children: null,\n};\n\nexport default MenuList;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nfunction InputOnEnter(props) {\n  const { onEnter, ...rest } = props;\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER) {\n        onEnter(evt);\n      }\n    },\n    [onEnter],\n  );\n\n  return <TextField onKeyUp={onKeyEnterUp} {...rest} />;\n}\n\nInputOnEnter.propTypes = {\n  onEnter: PropTypes.func.isRequired,\n};\n\nInputOnEnter.defaultProps = {};\n\nexport default InputOnEnter;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport MenuList from '../../components/MenuList';\nimport { uniqueId } from '../../utils';\nimport { globalActions, effectActions } from '../../store/actions';\nimport InputOnEnter from '../../components/InputOnEnter';\nimport { COLOR_GREEN, COLOR_ORANGE } from '../../utils/constants';\n\nfunction MenuListContainer(props) {\n  const { dispatch, hasLogin } = props;\n\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const handleCreateTaskInputChange = useCallback(\n    (evt) => setNewTaskTitle(evt.target.value),\n    [setNewTaskTitle],\n  );\n\n  const handleEnterUp = useCallback(\n    function createNewTaskByTitle(evt) {\n      const title = evt.target.value.trim();\n      if (title !== '') {\n        const task = {\n          title,\n          id: uniqueId(),\n          items: [],\n          timestamp: Date.now(),\n        };\n        dispatch(effectActions.createTask(task));\n\n        setNewTaskTitle('');\n      }\n    },\n    [dispatch, setNewTaskTitle],\n  );\n\n  const handleClickLoginBtn = useCallback(\n    function showLoginAndRegisterModel() {\n      dispatch(globalActions.hideSideMenu());\n      dispatch(globalActions.showAccountManager());\n    },\n    [dispatch],\n  );\n\n  return (\n    <MenuList>\n      <InputOnEnter\n        label={hasLogin ? '创建新任务' : '请先登录'}\n        disabled={!hasLogin}\n        onEnter={handleEnterUp}\n        onChange={handleCreateTaskInputChange}\n        type=\"text\"\n        value={newTaskTitle}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n      />\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        style={{\n          backgroundColor: hasLogin ? COLOR_GREEN : COLOR_ORANGE,\n          color: '#fff',\n        }}\n        onClick={handleClickLoginBtn}\n      >\n        {hasLogin ? '已登录' : '登录|云同步'}\n      </Button>\n    </MenuList>\n  );\n}\n\nMenuListContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(MenuListContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from 'react-dump-transition';\n\nfunction Drawer(props) {\n  const { show, children } = props;\n\n  return (\n    <Slide show={show} direction=\"right\">\n      <div\n        style={{\n          position: 'absolute',\n          width: '65%',\n          maxWidth: '375px',\n          height: '100vh',\n          backgroundColor: '#fff',\n          overflowY: 'scroll', //* 防止子margin-top影响父margin-top *\n          overflowX: 'hidden',\n          opacity: '1',\n          zIndex: '3000',\n        }}\n        className=\"transition-slide-right-self\"\n      >\n        {children}\n      </div>\n    </Slide>\n  );\n}\n\nDrawer.propTypes = {\n  show: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDrawer.defaultProps = {\n  show: true,\n  children: '',\n};\n\nexport default Drawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'react-dump-transition';\n\nfunction Mask(props) {\n  const { show, onClick } = props;\n\n  return (\n    <Fade show={show}>\n      <div\n        onClick={onClick}\n        role=\"button\"\n        style={{\n          // display: show ? 'block' : 'none',\n          position: 'absolute',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n          top: '0',\n          left: '0',\n          height: '100vh',\n          width: '100%',\n          zIndex: '2000',\n        }}\n        className=\"transition-fade-self\"\n      />\n    </Fade>\n  );\n}\n\nMask.propTypes = {\n  onClick: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n};\n\nMask.defaultProps = {\n  onClick: () => {\n    /*eslint-disable*/\n    console.log('Mask:onClick');\n  },\n};\n\nexport default Mask;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { hideSideMenu } from '../../store/actions';\n\nimport TaskListContainer from '../TaskListContainer';\nimport MenuListContainer from '../MenuListContainer';\nimport Drawer from '../../components/Drawer';\nimport Mask from '../../components/mask';\n\nfunction SideMenuContainer(props) {\n  const { dispatch, showSideMenu } = props;\n  const onClickSideMenuMask = useCallback(() => {\n    dispatch(hideSideMenu());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Mask show={showSideMenu} onClick={onClickSideMenuMask} />\n      <Drawer show={showSideMenu}>\n        <TaskListContainer />\n        <MenuListContainer />\n      </Drawer>\n    </>\n  );\n}\n\nSideMenuContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showSideMenu: PropTypes.bool.isRequired,\n};\n\n// SideMenuContainer.defaultProps = {\n//   showSideMenu: true,\n// };\n\nconst mapState = ($state) => ({\n  showSideMenu: $state.getIn(['global', 'showSideMenu']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(SideMenuContainer);\n","/* eslint-disable arrow-parens */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction NotFound(props) {\n  const { message, time } = props;\n  const [isTimeout, setIsTimeout] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsTimeout(true);\n    }, time);\n\n    const intervalId = setInterval(() => {\n      setSeconds((prev) => prev + 1);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [time, setIsTimeout, setSeconds]);\n\n  return isTimeout ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div\n      style={{\n        padding: '20px',\n      }}\n    >\n      <h1>{message}</h1>\n      <h2>\n        {Math.round(time / 1000) - seconds}\n        秒后回到主页\n      </h2>\n    </div>\n  );\n}\n\nNotFound.propTypes = {\n  message: PropTypes.string,\n  time: PropTypes.number,\n};\n\nNotFound.defaultProps = {\n  message: '404 Not Found',\n  time: 3000,\n};\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialCheckbox from '@material-ui/core/Checkbox';\n\nfunction Checkbox(props) {\n  return <MaterialCheckbox {...props} />;\n}\n\nCheckbox.propTypes = {\n  onClick: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nCheckbox.defaultProps = {\n  onClick: null,\n  checked: false,\n  disabled: false,\n};\n\nexport default Checkbox;\n","import React, { useCallback, useEffect, useMemo } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport {\n  List, ListItemText, IconButton, ListItem, Divider, Typography,\n} from '@material-ui/core';\n\nimport { TransitionGroup, Slide } from 'react-dump-transition';\nimport NotFound from '../../components/NotFound';\nimport { taskActions } from '../../store/actions';\nimport Checkbox from '../../components/Checkbox';\n\nfunction ListItemOfTaskItemWithCheckbox(props) {\n  const { $taskItem, onClick: rawOnClick, style } = props;\n\n  const onClick = useCallback(() => rawOnClick($taskItem), [$taskItem, rawOnClick]);\n\n  return (\n    <ListItem style={style} button onClick={onClick}>\n      <Checkbox edge=\"start\" checked={$taskItem.get('checked')} />\n      <ListItemText primary={$taskItem.get('title')} />\n    </ListItem>\n  );\n}\n\nListItemOfTaskItemWithCheckbox.propTypes = {\n  $taskItem: PropTypes.instanceOf(Map).isRequired,\n  onClick: PropTypes.func.isRequired,\n  style: PropTypes.objectOf(PropTypes.string),\n};\n\nListItemOfTaskItemWithCheckbox.defaultProps = {\n  style: null,\n};\n\nfunction TodoListContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    history,\n    $currentTodoTask,\n    dispatch,\n  } = props;\n\n  useEffect(() => {\n    dispatch(taskActions.effectGetTask(taskId));\n    return () => {\n      // 离开当前任务页面时，重置状态树中的currentTodoTask为null，保持状态树整洁\n      dispatch(taskActions.changeCurrentTodoTask(null));\n    };\n  }, [dispatch, taskId]);\n\n  const [\n    unfinishedTaskItemRefs,\n    finishedTaskItemRefs,\n  ] = useMemo(() => {\n    const unfinished = [];\n    const finished = [];\n    if ($currentTodoTask != null) {\n      const $itemRefs = $currentTodoTask.getIn(['items', 'refs']);\n      $itemRefs.forEach(taskItemId => {\n        const $item = $currentTodoTask.getIn(['items', 'entity', taskItemId]);\n        if ($item.get('checked')) finished.push(taskItemId);\n        else unfinished.push(taskItemId);\n      });\n    }\n\n    return [unfinished, finished];\n  }, [$currentTodoTask]);\n\n  const toggleTaskItemPropChecked = useCallback(\n    ($taskItem) => {\n      dispatch(taskActions.toggleTaskItemPropChecked($taskItem));\n    },\n    [dispatch],\n  );\n\n  const jumpToEditingPage = useCallback(\n    () => {\n      // history.push(`/edit/${taskIdWillJump}`);\n      history.push(`/edit/${$currentTodoTask.get('id')}`);\n    },\n    [history, $currentTodoTask],\n  );\n\n  if ($currentTodoTask == null) return <NotFound message=\"Loding...\" time={5000} />;\n\n  return (\n    <>\n      <List>\n        <ListItem dense>\n          <Typography variant=\"h4\" gutterBottom>\n            {$currentTodoTask.get('title')}\n          </Typography>\n          <IconButton onClick={jumpToEditingPage}>\n            <EditIcon />\n          </IconButton>\n        </ListItem>\n      </List>\n      <Divider variant=\"fullWidth\" />\n      <List>\n        {unfinishedTaskItemRefs.length === 0 ? null : (\n          <ListItem dense>\n            <Typography variant=\"subtitle1\" gutterBottom>\n            待完成\n            </Typography>\n          </ListItem>\n        )}\n        <TransitionGroup>\n          {unfinishedTaskItemRefs.length === 0 ? null : unfinishedTaskItemRefs.map((taskItemId) => {\n            const $item = $currentTodoTask.getIn(['items', 'entity', taskItemId]);\n            return (\n              <Slide timeout={500} direction=\"right\" key={$item.get('id')}>\n                <div>\n                  <ListItemOfTaskItemWithCheckbox\n                    onClick={toggleTaskItemPropChecked}\n                    $taskItem={$item}\n                  />\n                  <Divider variant=\"middle\" />\n                </div>\n              </Slide>\n            );\n          })}\n        </TransitionGroup>\n      </List>\n      <List>\n        {finishedTaskItemRefs.length === 0 ? null : (\n          <ListItem dense>\n            <Typography variant=\"subtitle1\" gutterBottom>\n            已完成\n            </Typography>\n          </ListItem>\n        )}\n        <TransitionGroup>\n          {finishedTaskItemRefs.map((taskItemId) => {\n            const $item = $currentTodoTask.getIn(['items', 'entity', taskItemId]);\n            return (\n              <Slide timeout={500} direction=\"right\" key={$item.get('id')}>\n                <div>\n                  <ListItemOfTaskItemWithCheckbox\n                    style={{\n                      opacity: '0.5',\n                    }}\n                    onClick={toggleTaskItemPropChecked}\n                    $taskItem={$item}\n                  />\n                  <Divider variant=\"middle\" />\n                </div>\n              </Slide>\n            );\n          })}\n        </TransitionGroup>\n      </List>\n    </>\n  );\n}\n\n\nTodoListContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n      action: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $currentTodoTask: PropTypes.instanceOf(Map),\n  dispatch: PropTypes.func.isRequired,\n};\n\nTodoListContainer.defaultProps = {\n  $currentTodoTask: null,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentTodoTask: $task.get('currentTodoTask'),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TodoListContainer),\n);\n\n// export default TodoListContainer;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport { Fade, TransitionGroup } from 'react-dump-transition';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\n\nfunction PinnedTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"置顶任务\">\n      <Divider />\n      <TransitionGroup>\n        {$tasks.map($task => (\n          <Fade show key={$task.get('id')} timeout={300}>\n            <div>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                <IconButton onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                  <StarIcon />\n                </IconButton>\n              </ListItem>\n            </div>\n          </Fade>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nPinnedTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nPinnedTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default PinnedTaskList;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\nfunction RecentTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"最近任务\">\n      <Divider />\n      {$tasks.map(($task) => (\n        <React.Fragment key={$task.get('id')}>\n          <ListItem onClick={() => onClickTask($task)} button>\n            <ListItemText primary={$task.get('title')} />\n            {$task.get('isPinned') ? null : (\n              <IconButton onClick={(evt) => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                <StarBorderIcon />\n              </IconButton>\n            )}\n          </ListItem>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n\nRecentTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nRecentTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  }\n};\n\nexport default RecentTaskList;\n","/* eslint-disable function-paren-newline */\nimport React, { useCallback, useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Map, List } from 'immutable';\nimport { connect } from 'react-redux';\n\nimport PinnedTaskList from '../components/PinnedTaskList';\n\nimport { editingTaskActions } from '../store/actions';\nimport RecentTaskList from '../components/RecentTaskList';\n\nfunction HomeContainer(props) {\n  const {\n    $tasksRefs,\n    dispatch,\n    history,\n    $tasksEntity,\n  } = props;\n\n  const $recentTasks = useMemo(\n    () =>\n      $tasksRefs.map(ref => $tasksEntity.get(ref)).sort(($taskA, $taskB) => {\n        const taskATime = $taskA.get('lastVisitTime') || 0;\n        const taskBTime = $taskB.get('lastVisitTime') || 0;\n        return taskBTime - taskATime;\n      }),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const $pinnedTasks = useMemo(\n    () => $tasksRefs.map(ref => $tasksEntity.get(ref)).filter($task => $task.get('isPinned')),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const pinOneTask = useCallback(\n    ($task) => {\n      const $pinndTask = $task.set('isPinned', true);\n      dispatch(editingTaskActions.effectUpdateTask($pinndTask));\n    },\n    [dispatch],\n  );\n\n  const unpinOneTask = useCallback(\n    ($task) => {\n      const $unpinndTask = $task.set('isPinned', false);\n      dispatch(editingTaskActions.effectUpdateTask($unpinndTask));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [history],\n  );\n\n  return (\n    <React.Fragment>\n      <PinnedTaskList\n        onClickIconButton={unpinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$pinnedTasks}\n      />\n      <RecentTaskList\n        onClickIconButton={pinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$recentTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nHomeContainer.propTypes = {\n  // $recentTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  // $pinnedTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $tasksRefs: PropTypes.instanceOf(List).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nHomeContainer.defaultProps = {};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $recentTaskIds: $task.get('recentTaskIds'),\n    $pinnedTaskIds: $task.get('pinnedTaskIds'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $tasksRefs: $task.getIn(['tasks', 'refs']),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(HomeContainer);\n","import React, { useState, useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport Input from '@material-ui/core/Input';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport EditIcon from '@material-ui/icons/BorderColor';\n\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\nimport { Fade, TransitionGroup } from 'react-dump-transition';\n\nimport Checkbox from './Checkbox';\nimport { uniqueId } from '../utils';\n\nfunction TaskItemList(props) {\n  const {\n    $task,\n    onCreateNewTaskItem,\n    onClickRemoveButton,\n    isEditable,\n    onClickEditButton,\n  } = props;\n  const [newTaskItemTitle, setNewTaskItemTitle] = useState('');\n\n  const onInputNewTaskItem = useCallback((evt) => {\n    setNewTaskItemTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      const taksItemTitle = evt.target.value;\n      if (taksItemTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateNewTaskItem(\n          Map({\n            id: uniqueId(),\n            title: taksItemTitle,\n            checked: false,\n          }),\n        );\n        setNewTaskItemTitle('');\n      }\n    },\n    [setNewTaskItemTitle, onCreateNewTaskItem],\n  );\n\n  const emitTaskId = useCallback(() => {\n    onClickEditButton($task.get('id'));\n  }, [$task, onClickEditButton]);\n\n  return (\n    <List>\n      <ListItem dense>\n        <Typography variant=\"h4\" gutterBottom>\n          {$task.get('title')}\n        </Typography>\n        {isEditable ? null : (\n          <IconButton onClick={emitTaskId}>\n            <EditIcon />\n          </IconButton>\n        )}\n      </ListItem>\n      <TransitionGroup>\n        {$task.getIn(['items', 'refs']).map((taskItemId) => {\n          const $item = $task.getIn(['items', 'entity', taskItemId]);\n          return (\n            <Fade key={$item.get('id')} timeout={600}>\n              <div>\n                <ListItem>\n                  <Checkbox disabled={isEditable} edge=\"start\" checked={$item.get('checked')} />\n                  <ListItemText primary={$item.get('title')} />\n                  {isEditable ? (\n                    <IconButton onClick={() => onClickRemoveButton($item)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  ) : null}\n                </ListItem>\n                <Divider variant=\"middle\" />\n              </div>\n            </Fade>\n          );\n        })}\n      </TransitionGroup>\n      {isEditable ? (\n        <ListItem>\n          <Input\n            value={newTaskItemTitle}\n            onKeyUp={onKeyEnterUp}\n            onChange={onInputNewTaskItem}\n            placeholder=\"新增待做事项\"\n            fullWidth\n          />\n        </ListItem>\n      ) : null}\n    </List>\n  );\n}\n\nTaskItemList.propTypes = {\n  $task: PropTypes.instanceOf(Map).isRequired,\n  onCreateNewTaskItem: PropTypes.func,\n  onClickRemoveButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  onClickEditButton: PropTypes.func,\n};\n\nTaskItemList.defaultProps = {\n  onCreateNewTaskItem: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickRemoveButton: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickCheckbox: () => {\n    /* eslint-disable */\n    console.log('onClickCheckbox');\n  },\n  onClickEditButton: () => {\n    /* eslint-disable */\n    console.log('onClickEditButton');\n  },\n  isEditable: false\n};\n\nexport default TaskItemList;\n\n// export default TaskItemList;\n","/* eslint-disable nonblock-statement-body-position */\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport TaskItemList from '../components/TaskItemList';\nimport { taskActions, editingTaskActions } from '../store/actions';\nimport NotFound from '../components/NotFound';\n// import { uniqueId } from '../utils';\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  const $editingTask = $state.get('editingTask');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentEditingTask: $editingTask.get('currentTask'),\n  };\n};\n\nfunction EditingTaskPageContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    dispatch,\n    // $tasksEntity,\n    $currentEditingTask,\n  } = props;\n\n  const [isTaskLoaded, setIsTaskLoaded] = useState(false);\n  const [isTaskTaskChanged, setIsTaskTaskChanged] = useState(false);\n\n  useEffect(() => {\n    // 根据taskid加载对应的将要被编辑的任务\n    if (!isTaskLoaded) {\n      // const $target = $tasksEntity.get(taskId) || null;\n      dispatch(editingTaskActions.effectGetTask(taskId));\n      if ($currentEditingTask != null) setIsTaskLoaded(true);\n    }\n  }, [dispatch, taskId, isTaskLoaded, setIsTaskLoaded, $currentEditingTask]);\n\n  useEffect(\n    () => () => {\n      // 因为根据taskId加载任务，所以taskId变化，即任务变化，所以每次切换任务，就要重置编辑历史，重置redo，undo按钮状态\n      // 即使退出也要重置状态，保持状态树的干净\n      dispatch(editingTaskActions.clearAllEdtingHistory());\n      // 退出任务, 重置为null，\n      dispatch(editingTaskActions.changeCurrentTask(null));\n    },\n    [taskId, dispatch],\n  );\n\n  useEffect(() => {\n    if (isTaskLoaded && isTaskTaskChanged) {\n      // 同步到云端 // 乐观更新\n      dispatch(editingTaskActions.effectUpdateTask($currentEditingTask));\n      // 将编辑后的任务保存到原任务上\n      dispatch(taskActions.updateTaskInTasks($currentEditingTask));\n    }\n  }, [isTaskLoaded, isTaskTaskChanged, dispatch, $currentEditingTask]);\n\n  const onCreateNewTaskItem = useCallback(\n    ($newTaskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.addTaskItemInCurrentTask($newTaskItem));\n      // 因为添加了新任务，所以清空重做任务列表，重置 重做 按钮状态，为了避免编辑状态混乱\n      dispatch(editingTaskActions.clearFutureTasks());\n      // dispatch(globalActions.addOneNitification({\n      //   title: '添加任务项成功',\n      //   type: 'success',\n      //   key: uniqueId('nortgfy'),\n      // }));\n      setIsTaskTaskChanged(true);\n    },\n    [dispatch],\n  );\n\n  const onClickRemoveButton = useCallback(\n    ($taskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.removeTaskItemInCurrentTask($taskItem));\n      setIsTaskTaskChanged(true);\n    },\n    [dispatch],\n  );\n\n  if ($currentEditingTask == null) return <NotFound message=\"Loding...\" />;\n\n  return (\n    <TaskItemList\n      onCreateNewTaskItem={onCreateNewTaskItem}\n      onClickRemoveButton={onClickRemoveButton}\n      $task={$currentEditingTask}\n      isEditable\n    />\n  );\n}\n\nEditingTaskPageContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  $currentEditingTask: PropTypes.instanceOf(Map),\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nEditingTaskPageContainer.defaultProps = {\n  $currentEditingTask: null,\n};\n\nexport default connect(\n  mapState,\n  null,\n)(EditingTaskPageContainer);\n\n// export default EditingTaskPageContainer;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport InputOnEnter from './InputOnEnter';\n\n\nfunction LoginArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onLogin, disabled } = props;\n\n  const isLogining = disabled;\n\n  const tryLogin = useCallback(() => {\n    // handleClickButton\n    onLogin({\n      username,\n      password,\n    });\n  }, [username, password, onLogin]);\n\n  const isDisabled = isLogining || username.trim() === '' || password.trim() === '';\n\n  const buttonText = isLogining ? '登录中...' : '登录';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <InputOnEnter onEnter={tryLogin} value={password} onChange={handleInputPassword} type=\"password\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={tryLogin} fullWidth>\n          {buttonText}\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nLoginArea.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLoginArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default LoginArea;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport InputOnEnter from './InputOnEnter';\n\n\nfunction RegisterArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onRegister, disabled } = props;\n\n  const tryRegister = useCallback(() => {\n    // handle click register button\n    onRegister({\n      username,\n      password,\n    });\n  }, [username, password, onRegister]);\n\n  const isDisabled = disabled || username.trim() === '' || password.trim() === '';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField placeholder=\"请输入4到16位字母，数字\" value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        {/* 这里密码输入用type=text是为了用户视觉上可以确认所输入的密码 */}\n        <InputOnEnter onEnter={tryRegister} placeholder=\"请输入4到16位字母，数字\" value={password} onChange={handleInputPassword} type=\"text\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={tryRegister} fullWidth>\n          注册\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nRegisterArea.propTypes = {\n  onRegister: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nRegisterArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default RegisterArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\nimport List from '@material-ui/core/List';\nimport { ListItem } from '@material-ui/core';\n\nfunction UserInfo(props) {\n  const { $userInfo } = props;\n\n  return (\n    <List>\n      <ListItem>\n        已经登录，欢迎您!\n      </ListItem>\n      <ListItem>\n        {`用户名: ${$userInfo.get('username')}`}\n      </ListItem>\n    </List>\n  );\n}\n\nUserInfo.propTypes = {\n  $userInfo: PropTypes.instanceOf(Map).isRequired,\n};\n\nUserInfo.defaultProps = {};\n\nexport default UserInfo;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Map } from 'immutable';\nimport { Fade } from 'react-dump-transition';\n\nimport LoginArea from '../components/LoginArea';\nimport RegisterArea from '../components/RegisterArea';\nimport { globalActions, userActions } from '../store/actions';\nimport { stopEventPropagation, uniqueId } from '../utils';\nimport LoginStatus from '../components/LoginStatus';\n\nconst usernamePattern = /^[a-zA-Z0-9_-]{4,16}$/;\nconst passwordPattern = /^[a-zA-Z0-9_-]{4,16}$/;\n\nfunction AccountManagerContainer(props) {\n  const {\n    dispatch,\n    showAccountManager,\n    hasLogin,\n    $userInfo,\n    isLogining,\n    isRegistering,\n  } = props;\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleClickMask = useCallback(() => {\n    dispatch(globalActions.hideAccountManager());\n  }, [dispatch]);\n\n  const handleTabChange = useCallback((evt, tabIndexChangedTo) => {\n    setTabIndex(tabIndexChangedTo);\n  }, []);\n\n  const handleLogin = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectLogin(userInfo));\n      } else {\n        dispatch(\n          globalActions.addOneNitification({\n            type: 'error',\n            title: '登录失败',\n            detail: '非法用户名或密码，请输入4到16位的字母或数字',\n            key: uniqueId('notify'),\n          }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleRegister = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectRegister(userInfo));\n      } else {\n        dispatch(\n          globalActions.addOneNitification({\n            type: 'error',\n            title: '注册失败',\n            detail: '非法用户名或密码，请输入4到16位的字母或数字',\n            key: uniqueId('notify'),\n          }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleClickLogoutButton = useCallback(() => {\n    dispatch(userActions.logout());\n  }, [dispatch]);\n\n  const loginArea = useMemo(\n    () => <LoginArea disabled={isLogining} onLogin={handleLogin} />,\n    [isLogining, handleLogin],\n  );\n  const registerArea = useMemo(\n    () => <RegisterArea disabled={isRegistering} onRegister={handleRegister} />,\n    [handleRegister, isRegistering],\n  );\n\n  const tabContentItems = [loginArea, registerArea];\n\n  return (\n    <Fade show={showAccountManager}>\n      <div\n        className=\"AccountManager\"\n        onClick={handleClickMask}\n        style={{\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          top: '0',\n          left: '0',\n          height: '100%',\n          width: '100%',\n          zIndex: '3000',\n          boxSizing: 'border-box',\n          padding: '0 50px',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n        }}\n      >\n        <Paper onClick={stopEventPropagation}>\n          {hasLogin ? (\n            <>\n              <LoginStatus $userInfo={$userInfo} />\n              <Button\n                fullWidth\n                variant=\"outlined\"\n                onClick={handleClickLogoutButton}\n              >\n                退出\n              </Button>\n            </>\n          ) : (\n            <>\n              <Tabs\n                value={tabIndex}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleTabChange}\n                centered\n              >\n                <Tab label=\"登录\" />\n                <Tab label=\"注册\" />\n              </Tabs>\n              <div>{tabContentItems[tabIndex]}</div>\n            </>\n          )}\n        </Paper>\n      </div>\n    </Fade>\n  );\n}\n\nAccountManagerContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showAccountManager: PropTypes.bool.isRequired,\n  isLogining: PropTypes.bool.isRequired,\n  isRegistering: PropTypes.bool.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  $userInfo: PropTypes.instanceOf(Map),\n};\n\nAccountManagerContainer.defaultProps = {\n  $userInfo: null,\n};\n\nconst mapState = ($state) => ({\n  showAccountManager: $state.getIn(['global', 'showAccountManager']),\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n  isLogining: $state.getIn(['user', 'isLogining']),\n  isRegistering: $state.getIn(['user', 'isRegistering']),\n  $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(AccountManagerContainer);\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport ErrorIcon from '@material-ui/icons/Clear';\nimport SuccessIcon from '@material-ui/icons/Done';\nimport WarnIcon from '@material-ui/icons/PriorityHigh';\n\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader } from '@material-ui/core';\n\nimport { COLOR_GREEN, COLOR_RED, COLOR_YELLOW } from '../utils/constants';\n\nconst SUCCESS = 'success';\nconst ERROR = 'error';\nconst WARN = 'warn';\n\nconst TYPE_COLOR_MAPPING = {\n  [SUCCESS]: COLOR_GREEN,\n  [ERROR]: COLOR_RED,\n  [WARN]: COLOR_YELLOW,\n};\n\nfunction NotificationCardWithRef(props, ref) {\n  const {\n    type, title, style, subtitle,\n  } = props;\n  const iconStyle = {\n    borderRadius: '50%',\n    overflow: 'hidden',\n    color: '#fff',\n    width: '48px',\n    height: '48px',\n    backgroundColor: TYPE_COLOR_MAPPING[type],\n  };\n  let icon = <WarnIcon style={iconStyle} />;\n  if (type === ERROR) icon = <ErrorIcon style={iconStyle} />;\n  if (type === SUCCESS) icon = <SuccessIcon style={iconStyle} />;\n\n  return (\n    <Card ref={ref} style={style}>\n      <CardHeader\n        avatar={icon}\n        title={title}\n        subheader={subtitle}\n        // subheader=\"status: 401\"\n      />\n    </Card>\n  );\n}\n\nconst NotificationCard = React.forwardRef(NotificationCardWithRef);\n\nNotificationCard.types = {\n  SUCCESS,\n  ERROR,\n  WARN,\n};\n\nNotificationCard.propTypes = {\n  type: PropTypes.oneOf([WARN, ERROR, SUCCESS]),\n  title: PropTypes.node.isRequired,\n  subtitle: PropTypes.node,\n  style: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n};\n\nNotificationCard.defaultProps = {\n  type: 'none',\n  subtitle: null,\n  style: undefined,\n};\n\n\nexport default NotificationCard;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { List } from 'immutable';\n\nimport { Zoom, TransitionGroup } from 'react-dump-transition';\n\nimport NotificationCard from '../components/NotificationCard';\n// import Zoom from '../components/transitions/Zoom';\n// import TransitionGroup from '../components/transitions/TransitionGroup';\n\n\nfunction NotificationsPanelContainer(props) {\n  const { $notifications } = props;\n  return (\n    <>\n      <div\n        className=\"NotificationsPanelContainer\"\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: '100%',\n          zIndex: '4000',\n          boxSizing: 'border-box',\n          padding: '0 20px',\n        }}\n      >\n        <TransitionGroup>\n          {$notifications.map(({\n            title, key, detail = null, type = 'warn',\n          }) => (\n            <Zoom key={key}>\n              <NotificationCard\n                style={{ marginTop: '20px' }}\n                type={type}\n                title={title}\n                subtitle={detail}\n              />\n            </Zoom>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n}\n\nNotificationsPanelContainer.propTypes = {\n  // dispatch: PropTypes.func.isRequired,\n  // showAccountManager: PropTypes.bool.isRequired,\n  // isLogining: PropTypes.bool.isRequired,\n  // isRegistering: PropTypes.bool.isRequired,\n  // hasLogin: PropTypes.bool.isRequired,\n  $notifications: PropTypes.instanceOf(List).isRequired,\n};\n\nNotificationsPanelContainer.defaultProps = {};\n\nconst mapState = ($state) => ({\n  $notifications: $state.getIn(['global', 'notifications']),\n  // hasLogin: $state.getIn(['user', 'hasLogin']),\n  // isLogining: $state.getIn(['user', 'isLogining']),\n  // isRegistering: $state.getIn(['user', 'isRegistering']),\n  // $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(NotificationsPanelContainer);\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBarContainer from '../../containers/AppBarContainer';\n\nimport SideMenuContainer from '../../containers/SideMenuContainer';\nimport TodoListContainer from '../../containers/TodoListContainer';\nimport HomeContainer from '../../containers/HomeContainer';\nimport EditingTaskPageContainer from '../../containers/EditingTaskPageContainer';\nimport AccountManagerContainer from '../../containers/AccountManagerContainer';\nimport NotificationsPanelContainer from '../../containers/NotificationsPanelContainer';\n\nfunction Index() {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: '100vh',\n        display: 'flex',\n        flexFlow: 'column nowrap',\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          flex: '1',\n          overflowY: 'scroll',\n          overflowX: 'hidden',\n        }}\n      >\n        <Switch>\n          <Route path=\"/todo/:id\" component={TodoListContainer} />\n          <Route path=\"/edit/:id\" component={EditingTaskPageContainer} />\n          <Route component={HomeContainer} />\n        </Switch>\n      </div>\n      <NotificationsPanelContainer />\n      <AppBarContainer />\n      <SideMenuContainer />\n      <AccountManagerContainer />\n    </div>\n  );\n}\n\n// Index.propTypes = {\n//   // dispatch: PropTypes.func.isRequired,\n//   // children: PropTypes.node,\n// };\n\n// Index.defaultProps = {\n//   // children: '',\n// };\n\nexport default Index;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLocalJWT } from '../utils';\nimport { userActions, taskActions } from '../store/actions';\n\nfunction InitWrapperContainer(props) {\n  const { children, dispatch, hasLogin } = props;\n  useEffect(() => {\n    // 自动登录\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return;\n    dispatch(userActions.effectGetUserInfo());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (hasLogin) {\n      dispatch(taskActions.effectGetTaskList());\n    }\n  }, [dispatch, hasLogin]);\n\n  return <>{children}</>;\n}\n\nInitWrapperContainer.propTypes = {\n  hasLogin: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(InitWrapperContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Index from './Layout/Index';\n// import TodoListContainer from './containers/TodoListContainer';\n\n// import { isDev } from './env';\n\nimport { store } from './store';\nimport InitWrapperContainer from './containers/InitWrapperContainer';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <InitWrapperContainer>\n        <Router>\n          <Route path=\"/\" component={Index} />\n        </Router>\n      </InitWrapperContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\n// import * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './index.scss';\n// import 'antd/dist/antd.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}