{"version":3,"sources":["../node_modules/@material-ui/core/esm/Switch/Switch.js","containers/TaskListContainer/ui/TaskList.jsx","containers/TaskListContainer/index.jsx","containers/MenuListContainer/ui/MenuList.jsx","containers/MenuListContainer/index.jsx","components/Drawer.jsx","components/Mask.jsx","containers/SideMenuContainer/index.jsx"],"names":["Switch_Switch","react_default","a","forwardRef","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","Object","objectWithoutProperties","icon","createElement","thumb","clsx_m","root","start","edgeStart","end","edgeEnd","small","concat","helpers","SwitchBase","esm_extends","type","checkedIcon","switchBase","input","checked","disabled","track","esm_Switch_Switch","withStyles","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","willChange","&$checked","transform","&$disabled","&$checked + $track","opacity","&$disabled + $track","colorPrimary","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","& $thumb","& $switchBase","boxShadow","shadows","borderRadius","name","renderTask","_ref","$task","onClickTask","onClickEditTaskButton","onClickRemoveTaskButton","isEditable","Fade","timeout","key","get","ListItem","style","onClick","button","ListItemText","Fragment","IconButton","evt","BorderColor_default","DeleteForever_default","TaskList","$tasks","onClickSwitchButton","withStopEvtPropagation","useCallback","callback","stopPropagation","_len","arguments","length","args","Array","_key","apply","List","subheader","ListSubheader","component","justifyContent","alignItems","Typography","Divider","TransitionGroup","map","defaultProps","console","log","connect","$state","$global","showSideMenu","hasLogin","getIn","dispatch","history","useHistory","$tasksEntity","$tasksRefs","$taskList","useMemo","taskId","isOnline","useIsOnline","_useState","useState","_useState2","slicedToArray","setIsEditable","toggleIsEditable","prevFlag","globalActions","hideSideMenu","push","taskActions","effectDeleteTask","removeTaskInTasks","ui_TaskList","MenuList","children","React","Children","node","index","hasLoginSelector","MenuListContainer","useSelector","useDispatch","newTaskTitle","setNewTaskTitle","handleCreateTaskInputChange","target","value","handleEnterUp","title","trim","task","id","uniqueId","items","timestamp","Date","now","effectActions","createTask","handleClickLoginBtn","ui_MenuList","TextFieldOnKeyEnterUp","label","onKeyEnterUp","onChange","margin","variant","fullWidth","Button","COLOR_GREEN","COLOR_ORANGE","Drawer","show","Slide","in","direction","maxWidth","overflowY","overflowX","Mask","role","onClickSideMenuMask","components_Mask","components_Drawer","containers_TaskListContainer","containers_MenuListContainer"],"mappings":"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","file":"static/js/SideMenuContainer.96e6d380.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport { capitalize } from '../utils/helpers';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      willChange: 'left, transform',\n      '&$checked': {\n        left: '100%',\n        transform: 'translateX(-100%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useCallback } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch as SwitchButton,\n  Typography,\n} from '@material-ui/core';\nimport Fade from '@material-ui/core/Fade';\nimport { TransitionGroup } from 'react-transition-group';\n\n\n/* eslint-disable */\nconst renderTask = ({\n  $task,\n  onClickTask,\n  onClickEditTaskButton,\n  onClickRemoveTaskButton,\n  isEditable,\n}) => (\n  <Fade timeout={300} key={$task.get('id')}>\n    <ListItem\n      style={{ height: '48px' }}\n      onClick={() => onClickTask($task)}\n      button={!isEditable}\n    >\n      <ListItemText primary={$task.get('title')} />\n      {isEditable ? (\n        <React.Fragment>\n          <IconButton onClick={(evt) => onClickEditTaskButton(evt, $task)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton onClick={(evt) => onClickRemoveTaskButton(evt, $task)}>\n            <DeleteIcon />\n          </IconButton>\n        </React.Fragment>\n      ) : null}\n    </ListItem>\n  </Fade>\n);\n/* eslint-enable */\n\nfunction TaskList(props) {\n  const {\n    onClickTask,\n    onClickEditTaskButton,\n    onClickRemoveTaskButton,\n    $tasks,\n    isEditable,\n    onClickSwitchButton,\n  } = props;\n\n  const withStopEvtPropagation = useCallback(\n    (callback) => (evt, ...args) => {\n      evt.stopPropagation();\n      callback(...args);\n    },\n    [],\n  );\n\n  return (\n    <List\n      subheader={(\n        <ListSubheader\n          component=\"div\"\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <div className=\"left\">\n            <Typography>任务列表</Typography>\n          </div>\n          <div className=\"right\">\n            <Typography>\n              {'编辑'}\n              <SwitchButton\n                onClick={onClickSwitchButton}\n                checked={isEditable}\n                color=\"primary\"\n              />\n            </Typography>\n          </div>\n        </ListSubheader>\n      )}\n    >\n      <Divider />\n      <TransitionGroup>\n        {$tasks.map(($task) =>\n          renderTask({\n            $task,\n            isEditable,\n            onClickTask,\n            onClickRemoveTaskButton: withStopEvtPropagation(\n              onClickRemoveTaskButton,\n            ),\n            onClickEditTaskButton: withStopEvtPropagation(\n              onClickEditTaskButton,\n            ),\n          }))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickTask: PropTypes.func,\n  onClickRemoveTaskButton: PropTypes.func,\n  onClickEditTaskButton: PropTypes.func,\n  onClickSwitchButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  // children: PropTypes.element\n};\n\nTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickRemoveTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickRemoveTaskButton');\n  },\n  onClickEditTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickEditTaskButton');\n  },\n  onClickSwitchButton: () => {\n    /*eslint-disable*/\n    console.log('onClickSwitchButton');\n  },\n  isEditable: false,\n  // children: <div>default menu content</div>\n};\n\nexport default TaskList;\n","import React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { taskActions, globalActions } from '../../store/actions';\n\nimport TaskList from './ui/TaskList';\nimport { useIsOnline } from '../../hooks';\n\nfunction TaskListContainer(props) {\n  const {\n    $tasks, dispatch, hasLogin,\n  } = props;\n  const history = useHistory();\n  const $tasksEntity = $tasks.get('entity');\n  const $tasksRefs = $tasks.get('refs');\n  const $taskList = useMemo(\n    () => $tasksRefs.map((taskId) => $tasksEntity.get(taskId)),\n    [$tasksEntity, $tasksRefs],\n  );\n\n  const isOnline = useIsOnline();\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const toggleIsEditable = useCallback(() => {\n    if (isOnline) {\n      setIsEditable((prevFlag) => !prevFlag);\n    }\n    // setIsEditable(!isEditable);\n  }, [setIsEditable, isOnline]);\n\n  const onClickEditTaskButton = useCallback(\n    ($task) => {\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/edit/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  const onClickRemoveTaskButton = useCallback(\n    ($task) => {\n      dispatch(taskActions.effectDeleteTask($task.get('id')));\n      dispatch(taskActions.removeTaskInTasks($task));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      // 防止编辑模式点击，然后进入到任务模式，只能在非编辑模式下进入任务\n      if (isEditable) return;\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history, isEditable],\n  );\n    // console.log('isOnline && hasLogin && isEditable', isOnline && hasLogin && isEditable);\n  return (\n    <TaskList\n      onClickEditTaskButton={onClickEditTaskButton}\n      onClickRemoveTaskButton={onClickRemoveTaskButton}\n      onClickTask={onClickTask}\n      isEditable={isOnline && hasLogin && isEditable}\n      onClickSwitchButton={toggleIsEditable}\n      $tasks={$taskList}\n    />\n  );\n}\n\nTaskListContainer.propTypes = {\n  $tasks: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasks: $task.get('tasks'),\n    hasLogin: $state.getIn(['user', 'hasLogin']),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(TaskListContainer);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\n\nimport PropTypes from 'prop-types';\n\n\nfunction MenuList(props) {\n  const { children } = props;\n  return (\n    <List\n      subheader={(\n        <ListSubheader component=\"div\">\n          菜单项\n        </ListSubheader>\n      )}\n    >\n      <Divider />\n      {React.Children.map(children, (node, index) => (\n        <ListItem key={index}>{node}</ListItem>\n      ))}\n    </List>\n  );\n}\n\nMenuList.propTypes = {\n  children: PropTypes.node,\n};\n\nMenuList.defaultProps = {\n  children: null,\n};\n\nexport default MenuList;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport MenuList from './ui/MenuList';\nimport TextFieldOnKeyEnterUp from '../../components/TextFieldOnKeyEnterUp';\n\nimport { uniqueId } from '../../utils';\nimport { globalActions, effectActions } from '../../store/actions';\nimport { COLOR_GREEN, COLOR_ORANGE } from '../../utils/constants';\n\nconst hasLoginSelector = $state => $state.getIn(['user', 'hasLogin']);\n\nfunction MenuListContainer() {\n  const hasLogin = useSelector(hasLoginSelector);\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const handleCreateTaskInputChange = useCallback(\n    (evt) => setNewTaskTitle(evt.target.value),\n    [setNewTaskTitle],\n  );\n\n  const handleEnterUp = useCallback(\n    function createNewTaskByTitle(evt) {\n      const title = evt.target.value.trim();\n      if (title !== '') {\n        const task = {\n          title,\n          id: uniqueId(),\n          items: [],\n          timestamp: Date.now(),\n        };\n        dispatch(effectActions.createTask(task));\n\n        setNewTaskTitle('');\n      }\n    },\n    [dispatch, setNewTaskTitle],\n  );\n\n  const handleClickLoginBtn = useCallback(\n    function showLoginAndRegisterModel() {\n      dispatch(globalActions.hideSideMenu());\n      history.push('/account');\n    },\n    [dispatch],\n  );\n\n  return (\n    <MenuList>\n      <TextFieldOnKeyEnterUp\n        label={hasLogin ? '创建新任务' : '请先登录'}\n        disabled={!hasLogin}\n        onKeyEnterUp={handleEnterUp}\n        onChange={handleCreateTaskInputChange}\n        type=\"text\"\n        value={newTaskTitle}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n      />\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        style={{\n          backgroundColor: hasLogin ? COLOR_GREEN : COLOR_ORANGE,\n          color: '#fff',\n        }}\n        onClick={handleClickLoginBtn}\n      >\n        {hasLogin ? '已登录' : '登录|云同步'}\n      </Button>\n    </MenuList>\n  );\n}\n\nMenuListContainer.propTypes = {\n  // dispatch: PropTypes.func.isRequired,\n  // hasLogin: PropTypes.bool.isRequired,\n};\n\n\nexport default MenuListContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Drawer(props) {\n  const { show, children } = props;\n\n  return (\n    <Slide in={show} direction=\"right\">\n      <div\n        style={{\n          position: 'absolute',\n          width: '65%',\n          maxWidth: '375px',\n          height: '100vh',\n          backgroundColor: '#fff',\n          overflowY: 'scroll', //* 防止子margin-top影响父margin-top *\n          overflowX: 'hidden',\n          opacity: '1',\n          zIndex: '3000',\n        }}\n        className=\"transition-slide-right-self\"\n      >\n        {children}\n      </div>\n    </Slide>\n  );\n}\n\nDrawer.propTypes = {\n  show: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDrawer.defaultProps = {\n  show: true,\n  children: '',\n};\n\nexport default Drawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Fade from '@material-ui/core/Fade';\n\nfunction Mask(props) {\n  const { show, onClick } = props;\n\n  return (\n    <Fade in={show}>\n      <div\n        onClick={onClick}\n        role=\"button\"\n        style={{\n          // display: show ? 'block' : 'none',\n          position: 'absolute',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n          top: '0',\n          left: '0',\n          height: '100vh',\n          width: '100%',\n          zIndex: '2000',\n        }}\n        className=\"transition-fade-self\"\n      />\n    </Fade>\n  );\n}\n\nMask.propTypes = {\n  onClick: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n};\n\nMask.defaultProps = {\n  onClick: () => {\n    /*eslint-disable*/\n    console.log('Mask:onClick');\n  },\n};\n\nexport default Mask;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { hideSideMenu } from '../../store/actions';\n\nimport TaskListContainer from '../TaskListContainer';\nimport MenuListContainer from '../MenuListContainer';\nimport Drawer from '../../components/Drawer';\nimport Mask from '../../components/Mask';\n\nfunction SideMenuContainer(props) {\n  const { dispatch, showSideMenu } = props;\n  const onClickSideMenuMask = useCallback(() => {\n    dispatch(hideSideMenu());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Mask show={showSideMenu} onClick={onClickSideMenuMask} />\n      <Drawer show={showSideMenu}>\n        <TaskListContainer />\n        <MenuListContainer />\n      </Drawer>\n    </>\n  );\n}\n\nSideMenuContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showSideMenu: PropTypes.bool.isRequired,\n};\n\n// SideMenuContainer.defaultProps = {\n//   showSideMenu: true,\n// };\n\nconst mapState = ($state) => ({\n  showSideMenu: $state.getIn(['global', 'showSideMenu']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(SideMenuContainer);\n"],"sourceRoot":""}