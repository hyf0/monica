{"version":3,"sources":["store/user/actionTypes.ts","store/global/actionTypes.ts","store/project/actionTypes.ts","store/user/reducer.ts","store/global/reducer.ts","store/project/reducer.ts","store/reducers.ts","store/index.ts","store/user/actions.ts","store/global/actions.ts","store/project/actions.ts","util/helper.ts","util/constants.ts","util/request.ts","store/user/effects.ts","API/project.ts","API/index.ts","store/project/effects.ts","store/global/effects.ts","component/Notifications/ui/NotificationCard.tsx","util/hooks.ts","component/Notifications/index.tsx","layout/BasicLayout/index.tsx","component/HomeButton.tsx","component/NavBar/DefaultButton.tsx","component/NavBar/TodoProjectButton.tsx","component/NavBar/TaskEditorButton.tsx","component/NavBar/index.tsx","ui/FullScreenLoading.tsx","component/ProjectList.tsx","hook/index.ts","ui/FullScreenLoginTip.tsx","component/AsideMenu/index.tsx","component/TodoProject/index.tsx","component/Header/index.tsx","component/ProjectEditor/index.tsx","component/PinnedProjectList.tsx","component/AccountPage/index.tsx","route/routes.ts","component/LoginPage/index.tsx","component/RegisterPage/index.tsx","layout/DefaultLayout/index.tsx","route/index.tsx","App.tsx","index.ts"],"names":["SET_IS_LOGINING","SET_USER","LOGOUT","SET_IS_SHOW_ASIDE_MENU","PUSH_NOTIFICATION","SHIFT_NOTIFICATION","SET_PROJECTS","SET_TODO_PROJECT","CLEAR_TODO_PROJECT","SET_IS_FETCHING_TODO_PROJECT","ADD_PROJECT","DEL_PROJECT_BY_ID","TOGGLE_CHECK_TASK_IN_TODO_PROJECT_BY_ID","SET_EDITING_PROJECT","CLEAR_EDITING_PROJECT","SET_IS_FETCHING_EDITING_PROJECT","ADD_TASK_TO_EDITING_PROJECT","DEL_TASK_IN_EDITING_PROJECT","SET_ONE_PROJECT_IS_PINEED_BY_ID","CHANGE_EDITING_PROJECT_NAME","CHANGE_PROJECT_NAME_BY_ID","SNAPSHOT_EDITINGP_PROJECT","REDO_EDITING_PROJECT","UNDO_EDITING_PROJECT","CLEAR_EDITING_HISTORY","CLEAR_EDITING_PROJECT_FUTURE","defaultState","isLogining","user","isRegistering","isShowAsideMenu","notifications","projects","todoProject","isFetchingTodoProject","isFetchingEditingProject","editingProject","prev","current","currentIndex","future","state","action","produce","draft","type","payload","userActionTypes","global","globalActionTypes","push","shift","project","projectActionTypes","projectId","filter","p","id","tasks","taskId","t","some","checked","isPinned","projectName","target","find","name","currentEditingProject","prevProjects","futuProjects","length","pop","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","reducers","applyMiddleware","ReduxThunk","createSetIsLoginning","status","createSetUser","createLogout","createSetIsShowAsideMenu","createPushNotification","notification","createShiftNotification","createSetProjects","createToggleCheckTaskInTodoProjectById","createSetTodoProject","createSetIsFetchingTodoProject","createClearTodoProject","createAddProject","createDelProjectById","createSetIsFetchingEditingProject","createSetEditingProject","createClearEditingProject","createAddTaskToEditingProject","task","createDelTaskToEditingProject","createSetOneProjectIsPinnedById","createChangeEditingProjectName","createChangeProjectNameById","createSnapshotEditingpProject","createRedoEditingProject","createUndoEditingProject","createClearEditingHistory","createClearEditingProjectFuture","getLocalJWT","localStorage","getItem","setLocalJWT","jwt","setItem","Color","NotificationType","IS_DEV","location","origin","includes","baseURL","reqeust","Axios","create","interceptors","request","use","config","headers","Authorization","err","Promise","reject","reqGQL","reqeustData","post","login","loginStatus","dispatch","getState","a","console","error","userActions","variables","query","gql","data","Error","token","raw","globalEffects","pushNotification","title","SUCCESS","ERROR","logout","register","username","password","getProject","patchProject","patcher","getProjects","log","projectActions","getTodoProject","API","getEditingProject","createProject","addProject","delProjectById","deletedProjectId","delProject","createTask","taskName","addTask","delTask","deletedTaskId","setProjectIsPinned","saveEditingProjectName","redoEditingProject","undoEditingProject","n","timeout","setTimeout","globalActions","TYPE_COLOR_MAPPING","GREEN","RED","YELLOW","NotificationCard","React","forwardRef","props","ref","WARN","style","detail","iconStyle","borderRadius","overflow","color","width","height","backgroundColor","icon","Card","CardHeader","avatar","subheader","useShallowEqualSelector","selector","useSelector","shallowEqual","notificationsSelector","Notifications","className","position","top","left","boxSizing","TransitionGroup","map","index","Zoom","key","zIndex","margin","BasicLayout","children","HomeButton","onClick","needDoubleClick","forceUpdate","useState","setUpdateCount","useCallback","prevCount","useForceUpdate","clickCountRef","useRef","timerIdRef","doOnClick","clickCountSoFar","clearTimeout","IconButton","transition","edge","defaultProps","DefaultButton","useDispatch","showAsideMenu","Button","BLUE","fullWidth","variant","todoProjectButtonSelector","TodoProjectButton","buttonText","buttonColor","checkedTasks","useMemo","unchekcedTasks","isAllFininshed","ORANGE","history","useHistory","finishOneTaskOrJumpToRootPageOrEditorPage","taskEditorSelector","numOfPrevProject","numOfFutuProject","TaskEditorButton","undoProject","projectEffects","redoProject","ButtonGroup","disabled","NavBar","onClickMenuButton","onClickHomeButton","AppBar","Toolbar","Menu","path","component","FullScreenLoading","display","justifyContent","alignItems","CircularProgress","projectSelector","ProjectList","memo","jumpToTodoProjectPageById","jumpToProjectEditorPageById","deleteProject","proejctId","pinOneProject","isEdited","setIsEdited","toggleIsEdited","List","ListSubheader","flex","Switch","onChange","Slide","direction","ListItem","button","ListItemText","evt","stopPropagation","Delete","useIsLogined","useIsLoginSelector","FullScreenLoginTip","commonLayoutSelector","AsideMenu","isLogined","hideAsideMenu","handleClickLoginButton","handleClickRegisterButton","jumpToAccountPage","setProjectName","updateProjectName","value","trim","handleKeyEnterUp","keyCode","Drawer","anchor","onClose","open","Divider","TextField","label","onKeyUp","todoProjectSelector","Header","onBack","Typography","projectEditorSelector","pinnedProjectListSelector","accountSelector","routes","layout","isExiting","setIsExiting","startExitTransition","backToPrevPage","goBack","setUsername","isUsernameError","setIsUsernameError","updatePhoneNumber","setPassword","isPassWordInputError","setIsPassWordInputError","updatePassword","onClickLoginButton","test","usernameValidator","passwordValidator","userEffects","to","Grow","in","onExited","placeholder","registerAccount","jumpToPrevPage","handleLogoutButton","useParams","useEffect","uncheckedTasks","jumpToEditPage","toggleOneTask","undefined","ListItemIcon","Checkbox","changeEditingProjectName","saveEdtingProjectName","setTaskName","updateTaskName","deleteTask","Save","unpinOneProject","pinnedProjects","Fade","AppRoute","generateRoutes","route","Layout","Component","render","App","ReactDOM","createElement","document","getElementById"],"mappings":"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","file":"static/js/main.710eb229.chunk.js","sourcesContent":["export const SET_IS_LOGINING = 'SET_IS_LOGINING';\n\nexport const SET_USER = 'SET_USER';\n\nexport const LOGOUT = 'LOGOUT';\n","export const SET_IS_SHOW_ASIDE_MENU = 'SET_IS_SHOW_ASIDE_MENU';\r\n\r\nexport const PUSH_NOTIFICATION = 'PUSH_NOTIFICATION';\r\n\r\nexport const SHIFT_NOTIFICATION = 'SHIFT_NOTIFICATION';\r\n","export const SET_PROJECTS = 'SET_PROJECTS';\n\n// todo project 相关\nexport const SET_TODO_PROJECT = 'SET_TODO_PROJECT';\nexport const CLEAR_TODO_PROJECT = 'CLEAR_TODO_PROJECT';\nexport const SET_IS_FETCHING_TODO_PROJECT = 'SET_IS_FETCHING_TODO_PROJECT';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const DEL_PROJECT_BY_ID = 'DEL_PROJECT_BY_ID';\nexport const TOGGLE_CHECK_TASK_IN_TODO_PROJECT_BY_ID = 'TOGGLE_CHECK_TASK_IN_TODO_PROJECT_BY_ID';\n\n// editing project 相关\nexport const SET_EDITING_PROJECT = 'SET_EDITING_PROJECT';\nexport const CLEAR_EDITING_PROJECT = 'CLEAR_EDITING_PROJECT';\nexport const SET_IS_FETCHING_EDITING_PROJECT = 'SET_IS_FETCHING_EDITING_PROJECT';\nexport const ADD_TASK_TO_EDITING_PROJECT = 'ADD_TASK_TO_EDITING_PROJECT';\nexport const DEL_TASK_IN_EDITING_PROJECT = 'DEL_TASK_IN_EDITING_PROJECT';\n\n\n// 编辑相关\nexport const SET_ONE_PROJECT_IS_PINEED_BY_ID = 'SET_ONE_PROJECT_IS_PINEED';\nexport const CHANGE_EDITING_PROJECT_NAME = 'CHANGE_EDITING_PROJECT_NAME';\nexport const CHANGE_PROJECT_NAME_BY_ID = 'CHANGE_PROJECT_NAME_BY_ID';\n\n// 时间旅行相关\nexport const SNAPSHOT_EDITINGP_PROJECT = 'SNAPSHOT_EDITINGP_PROJECT';\nexport const REDO_EDITING_PROJECT = 'REDO_EDITING_PROJECT';\nexport const UNDO_EDITING_PROJECT = 'UNDO_EDITING_PROJECT';\nexport const CLEAR_EDITING_HISTORY = 'CLEAR_EDITING_HISTORY';\nexport const CLEAR_EDITING_PROJECT_FUTURE = 'CLEAR_EDITING_PROJECT_FUTURE';\n","import { produce } from 'immer';\nimport { IAction } from '../action';\nimport { userActionTypes } from '../actionTypes';\n\nexport interface IUser {\n  id: string;\n  username: string;\n}\n\nexport interface IReduxUserState {\n  isLogining: boolean;\n  user: null | IUser;\n  isRegistering: boolean;\n}\n\nconst defaultState: IReduxUserState = {\n  isLogining: false,\n  user: null,\n  isRegistering: false,\n};\n\nexport default function userReducer(state = defaultState, action: IAction) {\n  return produce(state, draft => {\n    const { type, payload } = action;\n    switch (type) {\n      case userActionTypes.SET_IS_LOGINING:\n        draft.isLogining = payload as boolean;\n        break;\n      case userActionTypes.SET_USER:\n        draft.user = payload as IUser;\n        break;\n      case userActionTypes.LOGOUT:\n        draft.user = null;\n        break;\n    }\n  });\n}\n","import { produce } from 'immer';\nimport { IAction } from '../action';\nimport { globalActionTypes } from '../actionTypes';\nimport { NotificationType } from '../../util/constants';\n\nexport interface INotification {\n  title: string;\n  detail?: string;\n  type: NotificationType;\n}\n\nexport interface IReduxGlobalState {\n  isShowAsideMenu: boolean;\n  notifications: INotification[];\n}\n\nconst defaultState: IReduxGlobalState = {\n  isShowAsideMenu: false,\n  notifications: [],\n};\n\nexport default function globalReducer(state = defaultState, action: IAction) {\n  return produce(state, draft => {\n    const { type, payload } = action;\n    switch (type) {\n      case globalActionTypes.SET_IS_SHOW_ASIDE_MENU:\n          draft.isShowAsideMenu = payload as boolean;\n        break;\n      case globalActionTypes.PUSH_NOTIFICATION:\n          draft.notifications.push(payload as INotification);\n        break;\n      case globalActionTypes.SHIFT_NOTIFICATION:\n          draft.notifications.shift();\n        break;\n    }\n  });\n}\n","import { produce } from 'immer';\nimport { IAction } from '../action';\nimport { projectActionTypes } from '../actionTypes';\n\nexport interface ITask {\n  id: string;\n  name: string;\n  checked: boolean;\n}\n\nexport interface IProject {\n  id: string;\n  name: string;\n  isPinned: boolean;\n  tasks: ITask[];\n}\n\nexport interface IReduxProjectState {\n  projects: null | IProject[];\n  todoProject: null | IProject; // currentTodoProject\n  isFetchingTodoProject: boolean;\n  isFetchingEditingProject: boolean;\n  editingProject: {\n    prev: IProject[];\n    current: null | IProject;\n    currentIndex: number;\n    future: IProject[];\n  };\n}\n\nconst defaultState: IReduxProjectState = {\n  projects: null,\n  todoProject: null,\n  isFetchingTodoProject: false,\n  isFetchingEditingProject: false,\n  editingProject: {\n    prev: [],\n    current: null,\n    currentIndex: -1,\n    future: [],\n  },\n};\n\nexport default function projectReducer(state = defaultState, action: IAction) {\n  return produce(state, draft => {\n    const { type, payload } = action;\n    switch (type) {\n      case projectActionTypes.SET_PROJECTS:\n        draft.projects = payload as IProject[];\n        break;\n      // todo project 相关\n      case projectActionTypes.SET_TODO_PROJECT:\n        draft.todoProject = payload as IProject;\n        break;\n      case projectActionTypes.CLEAR_TODO_PROJECT:\n        draft.todoProject = null;\n        break;\n      case projectActionTypes.SET_IS_FETCHING_TODO_PROJECT:\n        draft.isFetchingTodoProject = payload as boolean;\n        break;\n      // edting project 相关\n      case projectActionTypes.SET_IS_FETCHING_EDITING_PROJECT:\n        draft.isFetchingEditingProject = payload as boolean;\n        break;\n      case projectActionTypes.SET_EDITING_PROJECT:\n        draft.editingProject.current = payload as IProject;\n        break;\n      case projectActionTypes.CLEAR_EDITING_PROJECT:\n        draft.editingProject.current = null;\n        break;\n      case projectActionTypes.ADD_PROJECT:\n        if (draft.projects != null) draft.projects.push(payload as IProject);\n        break;\n      case projectActionTypes.DEL_PROJECT_BY_ID:\n        {\n          const projectId: string = payload as string;\n          if (draft.projects != null)\n            draft.projects = draft.projects.filter(p => p.id !== projectId);\n        }\n        break;\n      case projectActionTypes.ADD_TASK_TO_EDITING_PROJECT:\n        if (draft.editingProject.current != null)\n          draft.editingProject.current.tasks.push(payload as ITask);\n        break;\n      case projectActionTypes.DEL_TASK_IN_EDITING_PROJECT:\n        {\n          const taskId: string = payload as string;\n          if (draft.editingProject.current != null)\n            draft.editingProject.current.tasks = draft.editingProject.current.tasks.filter(\n              t => t.id !== taskId,\n            );\n        }\n        break;\n      case projectActionTypes.TOGGLE_CHECK_TASK_IN_TODO_PROJECT_BY_ID:\n        {\n          if (draft.todoProject == null) break;\n          const taskId = payload as string;\n          draft.todoProject.tasks.some(t => {\n            if (t.id !== taskId) return false;\n            t.checked = !t.checked;\n            return true;\n          });\n        }\n        break;\n      // 编辑相关\n      case projectActionTypes.SET_ONE_PROJECT_IS_PINEED_BY_ID:\n        {\n          const { projectId, isPinned } = payload as {\n            projectId: string;\n            isPinned: boolean;\n          };\n          if (draft.projects != null) {\n            draft.projects.some(p => {\n              if (p.id !== projectId) return false;\n              p.isPinned = isPinned;\n              return true;\n            });\n          }\n        }\n        break;\n      case projectActionTypes.CHANGE_PROJECT_NAME_BY_ID:\n        {\n          const { projectName, projectId } = payload as {\n            projectName: string;\n            projectId: string;\n          };\n          if (draft.projects != null) {\n            const target = draft.projects.find(p => p.id === projectId);\n            if (target != null) target.name = projectName;\n          }\n        }\n        break;\n      case projectActionTypes.CHANGE_EDITING_PROJECT_NAME:\n        if (draft.editingProject.current != null) {\n          draft.editingProject.current.name = payload as string;\n        }\n        break;\n      // editing project 时间旅行相关代码\n      case projectActionTypes.SNAPSHOT_EDITINGP_PROJECT:\n        {\n          const currentEditingProject = draft.editingProject.current;\n          if (currentEditingProject != null) {\n            draft.editingProject.prev.push(currentEditingProject);\n          }\n        }\n        break;\n      case projectActionTypes.UNDO_EDITING_PROJECT:\n        {\n          if (draft.editingProject.current == null) return;\n          const prevProjects = draft.editingProject.prev;\n          const futuProjects = draft.editingProject.future;\n          if (prevProjects.length > 0) {\n            futuProjects.push(draft.editingProject.current);\n            draft.editingProject.current = prevProjects.pop() as IProject;\n          }\n        }\n        break;\n      case projectActionTypes.REDO_EDITING_PROJECT:\n        {\n          if (draft.editingProject.current == null) return;\n          const prevProjects = draft.editingProject.prev;\n          const futuProjects = draft.editingProject.future;\n          if (futuProjects.length > 0) {\n            prevProjects.push(draft.editingProject.current);\n            draft.editingProject.current = futuProjects.pop() as IProject;\n          }\n        }\n        break;\n      case projectActionTypes.CLEAR_EDITING_HISTORY:\n        draft.editingProject.prev = [];\n        draft.editingProject.future = [];\n        break;\n      case projectActionTypes.CLEAR_EDITING_PROJECT_FUTURE:\n        draft.editingProject.future = [];\n        break;\n    }\n  });\n}\n","import userReducer, { IReduxUserState } from \"./user/reducer\";\nimport globalReducer, { IReduxGlobalState } from \"./global/reducer\";\nimport projectReducer, { IReduxProjectState } from \"./project/reducer\";\n\nexport default {\n    user: userReducer,\n    global: globalReducer,\n    project: projectReducer,\n}\n\nexport interface IReduxState {\n    user: IReduxUserState,\n    global: IReduxGlobalState,\n    project: IReduxProjectState,\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combineReducers(reducers), composeEnhancers(applyMiddleware(ReduxThunk)));\n\n// const store = createStore(combineReducers(reducers), composeEnhancers(applyMiddleware()));\n\nexport default store;\n","import { IAction } from '../action';\nimport { userActionTypes } from '../actionTypes';\nimport { IUser } from './reducer';\n\nexport function createSetIsLoginning(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_LOGINING,\n    payload: status,\n  };\n}\n\nexport function createSetUser(user: IUser): IAction {\n  return {\n    type: userActionTypes.SET_USER,\n    payload: user,\n  };\n}\n\nexport function createLogout(): IAction {\n  return {\n    type: userActionTypes.LOGOUT,\n  }\n}\n","import { IAction } from '../action';\nimport { globalActionTypes } from '../actionTypes';\nimport { INotification } from './reducer';\n\nexport function createSetIsShowAsideMenu(status: boolean): IAction {\n  return {\n    type: globalActionTypes.SET_IS_SHOW_ASIDE_MENU,\n    payload: status,\n  };\n}\n\nexport function createPushNotification(notification: INotification): IAction {\n  return {\n    type: globalActionTypes.PUSH_NOTIFICATION,\n    payload: notification,\n  };\n}\nexport function createShiftNotification(): IAction {\n  return {\n    type: globalActionTypes.SHIFT_NOTIFICATION,\n  };\n}\n","import { IAction } from '../action';\nimport { projectActionTypes } from '../actionTypes';\nimport { IProject, ITask } from './reducer';\n\nexport function createSetProjects(projects: IProject[]): IAction {\n  return {\n    type: projectActionTypes.SET_PROJECTS,\n    payload: projects,\n  };\n}\n\n// todo project 相关\n\nexport function createToggleCheckTaskInTodoProjectById(\n  taskId: string,\n): IAction {\n  return {\n    type: projectActionTypes.TOGGLE_CHECK_TASK_IN_TODO_PROJECT_BY_ID,\n    payload: taskId,\n  };\n}\nexport function createSetTodoProject(project: IProject): IAction {\n  return {\n    type: projectActionTypes.SET_TODO_PROJECT,\n    payload: project,\n  };\n}\n\nexport function createSetIsFetchingTodoProject(status: boolean): IAction {\n  return {\n    type: projectActionTypes.SET_IS_FETCHING_TODO_PROJECT,\n    payload: status,\n  };\n}\n\nexport function createClearTodoProject(): IAction {\n  return {\n    type: projectActionTypes.CLEAR_TODO_PROJECT,\n  };\n}\n\nexport function createAddProject(project: IProject): IAction {\n  return {\n    type: projectActionTypes.ADD_PROJECT,\n    payload: project,\n  };\n}\n\nexport function createDelProjectById(projectId: string): IAction {\n  return {\n    type: projectActionTypes.DEL_PROJECT_BY_ID,\n    payload: projectId,\n  };\n}\n\n// editing project 相关\n\nexport function createSetIsFetchingEditingProject(status: boolean): IAction {\n  return {\n    type: projectActionTypes.SET_IS_FETCHING_EDITING_PROJECT,\n    payload: status,\n  };\n}\n\nexport function createSetEditingProject(project: IProject): IAction {\n  return {\n    type: projectActionTypes.SET_EDITING_PROJECT,\n    payload: project,\n  };\n}\n\nexport function createClearEditingProject(): IAction {\n  return {\n    type: projectActionTypes.CLEAR_EDITING_PROJECT,\n  };\n}\n\nexport function createAddTaskToEditingProject(task: ITask): IAction {\n  return {\n    type: projectActionTypes.ADD_TASK_TO_EDITING_PROJECT,\n    payload: task,\n  };\n}\n\nexport function createDelTaskToEditingProject(taskId: string): IAction {\n  return {\n    type: projectActionTypes.DEL_TASK_IN_EDITING_PROJECT,\n    payload: taskId,\n  };\n}\n\n// 编辑 project 本身\nexport function createSetOneProjectIsPinnedById(\n  projectId: string,\n  isPinned: boolean,\n): IAction {\n  return {\n    type: projectActionTypes.SET_ONE_PROJECT_IS_PINEED_BY_ID,\n    payload: {\n      projectId,\n      isPinned,\n    },\n  };\n}\n\nexport function createChangeEditingProjectName(name: string): IAction {\n  return {\n    type: projectActionTypes.CHANGE_EDITING_PROJECT_NAME,\n    payload: name,\n  };\n}\n\nexport function createChangeProjectNameById(\n  projectId: string,\n  projectName: string,\n): IAction {\n  return {\n    type: projectActionTypes.CHANGE_PROJECT_NAME_BY_ID,\n    payload: {\n      projectId,\n      projectName,\n    },\n  };\n}\n\n// 时间旅行相关\nexport function createSnapshotEditingpProject(): IAction {\n  return {\n    type: projectActionTypes.SNAPSHOT_EDITINGP_PROJECT,\n  };\n}\nexport function createRedoEditingProject(): IAction {\n  return {\n    type: projectActionTypes.REDO_EDITING_PROJECT,\n  };\n}\nexport function createUndoEditingProject(): IAction {\n  return {\n    type: projectActionTypes.UNDO_EDITING_PROJECT,\n  };\n}\n\nexport function createClearEditingHistory(): IAction {\n  return {\n    type: projectActionTypes.CLEAR_EDITING_HISTORY,\n  };\n}\n\nexport function createClearEditingProjectFuture(): IAction {\n  return {\n    type: projectActionTypes.CLEAR_EDITING_PROJECT_FUTURE,\n  };\n}\n","\nexport function getLocalJWT() {\n  return localStorage.getItem('__jwt') || '';\n}\n\nexport function setLocalJWT(jwt: string) {\n  localStorage.setItem('__jwt', jwt);\n}\n\nexport function getIsDevelopment() {\n  const devlopmentPaths = ['localhost', '127.0.0.1', '192.168.43.72'];\n  return devlopmentPaths.some(p => window.location.origin.includes(p));\n}\n\n\nexport function createDebounced<FN_ARG>(fn: (...args: FN_ARG[]) => unknown, timeout = 1000) {\n  let timerId: number | null= null;\n  return (...args: FN_ARG[]) => {\n    if (timerId != null) {\n      clearTimeout(timerId);\n      timerId = null;\n    }\n    timerId = setTimeout(() => {\n      timerId = null;\n      fn(...args);\n    }, timeout);\n  };\n}\n","import { getIsDevelopment } from \"./helper\";\n\nexport const IS_DEV = getIsDevelopment();\n\n\nexport enum Color {\n  BLUE = '#2196f3',\n  GREEN = '#43a047',\n  YELLOW = '#fdd835',\n  ORANGE = '#ff5722',\n  RED = '#f44336',\n}\n\nexport enum NotificationType {\n  ERROR = 'error',\n  WARN = 'warn',\n  SUCCESS = 'success',\n}\n","import Axios from 'axios';\nimport { getLocalJWT } from './helper';\nimport { IS_DEV } from './constants';\n\nconst baseURL = IS_DEV ? 'http://192.168.43.72:3030' : 'http://101.37.174.138:3030';\n\nexport const reqeust  = Axios.create({\n    baseURL,\n});\n\nreqeust.interceptors.request.use(\n    config => {\n        const jwt = getLocalJWT();\n        if (jwt !== '') config.headers.Authorization = `Bearer ${jwt}`;\n        return config;\n    },\n    (err: unknown) => Promise.reject(err),\n);\n\n// interface IGQLRequestConfig extends AxiosRequestConfig {\n//     data: {\n//         query: string;\n//         variables?: {\n//             [key: string]: unknown\n//         }\n//     }\n// }\n\ninterface IGQLReqeust {\n    query: string;\n    variables?: {\n        [key: string]: unknown\n    }\n}\n\nexport const reqGQL = (reqeustData: IGQLReqeust) => reqeust.post('/graphql', reqeustData);\n","import { TReduxThunk, globalEffects } from '../effects';\nimport { userActions } from '../action';\nimport { reqGQL } from '../../util/request';\nimport gql from 'gql-tag';\nimport { setLocalJWT } from '../../util/helper';\nimport { NotificationType } from '../../util/constants';\n\nexport function login(loginStatus?: {\n  username: string;\n  password: string;\n}): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      user: { isLogining },\n    } = getState();\n    if (isLogining) {\n      console.error('正在登陆中，勿重复登录');\n      return;\n    }\n    try {\n      dispatch(userActions.createSetIsLoginning(true));\n      // console.log('login');\n      const {\n        data: { data },\n      } = await reqGQL({\n        variables: { ...(loginStatus ? { loginStatus } : {}) },\n        query: gql`\n          query($loginStatus: loginInput) {\n            login(loginStatus: $loginStatus) {\n              token {\n                raw\n              }\n              user {\n                id\n                username\n              }\n            }\n          }\n        `,\n      });\n      // console.log('resp', data);\n      if (data == null) throw new Error('登录失败');\n      setLocalJWT(data.login.token.raw);\n      dispatch(userActions.createSetUser(data.login.user));\n      dispatch(\n        globalEffects.pushNotification({\n          title: '登录成功',\n          type: NotificationType.SUCCESS,\n        }),\n      );\n    } catch (err) {\n      dispatch(\n        globalEffects.pushNotification({\n          title: '登录失败',\n          type: NotificationType.ERROR,\n        }),\n      );\n      console.error(err);\n    } finally {\n      dispatch(userActions.createSetIsLoginning(false));\n    }\n  };\n}\n\nexport function logout(): TReduxThunk {\n  return async dispatch => {\n    setLocalJWT('');\n    dispatch(userActions.createLogout());\n  };\n}\n\nexport function register(username: string, password: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data: { data },\n      } = await reqGQL({\n        variables: { username, password },\n        query: gql`\n          mutation($username: String!, $password: String!) {\n            register(username: $username, password: $password) {\n              token {\n                raw\n              }\n            }\n          }\n        `,\n      });\n      // console.log('resp', data);\n      if (data == null) throw new Error('注册失败');\n      setLocalJWT(data.register.token.raw);\n      dispatch(login());\n      dispatch(\n        globalEffects.pushNotification({\n          title: '注册成功',\n          type: NotificationType.SUCCESS,\n        }),\n      );\n    } catch (err) {\n      dispatch(\n        globalEffects.pushNotification({\n          title: '注册失败',\n          type: NotificationType.ERROR,\n        }),\n      );\n      console.error(err);\n    } finally {\n    }\n  };\n}\n","import { IProject } from '../store/project/reducer';\nimport { reqGQL } from '../util/request';\nimport gql from 'gql-tag';\n\nexport async function getProject(projectId: string): Promise<IProject> {\n  const {\n    data: { data },\n  } = await reqGQL({\n    variables: { id: projectId },\n    query: gql`\n      query($id: String!) {\n        project(id: $id) {\n          id\n          name\n          isPinned\n          tasks {\n            id\n            name\n            checked\n          }\n        }\n      }\n    `,\n  });\n  if (data == null) throw new Error('getProject失败');\n  return data.project;\n}\n\nexport async function patchProject(\n  projectId: string,\n  patcher: { name?: string; isPinned?: boolean },\n): Promise<IProject> {\n  const {\n    data: { data },\n  } = await reqGQL({\n    variables: { id: projectId, patcher },\n    query: gql`\n      mutation($id: String!, $patcher: patchProjectInput!) {\n        patchProject(id: $id, patcher: $patcher) {\n          id\n          name\n          isPinned\n          tasks {\n            id\n            name\n          }\n        }\n      }\n    `,\n  });\n  if (data == null) throw new Error('getProject失败');\n  return data.patchProject;\n}\n","import * as project from './project';\n\nexport default {\n  project,\n}\n","import gql from 'gql-tag';\n\nimport { TReduxThunk, globalEffects } from '../effects';\nimport { projectActions } from '../action';\nimport { reqGQL } from '../../util/request';\nimport API from '../../API';\nimport { NotificationType } from '../../util/constants';\n\nexport function getProjects(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      user: { user },\n    } = getState();\n    if (user == null) {\n      console.error('未登录');\n      return;\n    }\n    try {\n      const {\n        data: { data },\n      } = await reqGQL({\n        variables: { username: user.username },\n        query: gql`\n          query($username: String!) {\n            projects(username: $username) {\n              id\n              name\n              isPinned\n              tasks {\n                id\n                name\n              }\n            }\n          }\n        `,\n      });\n      console.log('resp', data);\n      if (data == null) throw new Error('getProjects失败');\n      dispatch(projectActions.createSetProjects(data.projects));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function getTodoProject(id: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    const { project: { isFetchingTodoProject } } = getState();\n    if (isFetchingTodoProject) return;\n    try {\n      dispatch(projectActions.createSetIsFetchingTodoProject(true));\n      const project = await API.project.getProject(id);\n      dispatch(projectActions.createSetTodoProject(project));\n    } catch (err) {\n      console.error(err);\n    } finally {\n      dispatch(projectActions.createSetIsFetchingTodoProject(false));\n    }\n  };\n}\n\nexport function getEditingProject(id: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    const { project: { isFetchingEditingProject } } = getState();\n    if (isFetchingEditingProject) return;\n    try {\n      dispatch(projectActions.createSetIsFetchingEditingProject(true));\n      const project = await API.project.getProject(id);\n      dispatch(projectActions.createSetEditingProject(project));\n    } catch (err) {\n      console.error(err);\n    } finally {\n      dispatch(projectActions.createSetIsFetchingEditingProject(false));\n    }\n  };\n}\n\nexport function createProject({ name }: { name: string }): TReduxThunk {\n  return async dispatch => {\n    const {\n      data: { data },\n    } = await reqGQL({\n      variables: { name },\n      query: gql`\n        mutation($name: String!) {\n          addProject(name: $name) {\n            id\n            name\n            isPinned\n            tasks {\n              id\n              name\n              checked\n            }\n          }\n        }\n      `,\n    });\n    if (data == null) throw new Error('createProject 失败');\n    const project = data.addProject;\n    dispatch(projectActions.createAddProject(project));\n  };\n}\n\nexport function delProjectById(projectId: string): TReduxThunk {\n  return async dispatch => {\n    const {\n      data: { data },\n    } = await reqGQL({\n      variables: { id: projectId },\n      query: gql`\n        mutation($id: String!) {\n          delProject(id: $id) {\n            id\n          }\n        }\n      `,\n    });\n    if (data == null) throw new Error('delProject 失败');\n    const deletedProjectId = data.delProject.id;\n    dispatch(projectActions.createDelProjectById(deletedProjectId));\n  };\n}\n\nexport function createTask(projectId: string, taskName: string): TReduxThunk {\n  return async dispatch => {\n    const {\n      data: { data },\n    } = await reqGQL({\n      variables: { id: projectId, name: taskName },\n      query: gql`\n        mutation($id: String!, $name: String!) {\n          addTask(projectId: $id, name: $name) {\n            id\n            name\n            checked\n          }\n        }\n      `,\n    });\n    if (data == null) throw new Error('addTask 失败');\n    const task = data.addTask;\n    dispatch(projectActions.createAddTaskToEditingProject(task));\n  };\n}\n\nexport function delTask(taskId: string): TReduxThunk {\n  return async dispatch => {\n    const {\n      data: { data },\n    } = await reqGQL({\n      variables: { id: taskId },\n      query: gql`\n        mutation($id: String!) {\n          delTask(id: $id) {\n            id\n          }\n        }\n      `,\n    });\n    if (data == null) throw new Error('delTask 失败');\n    const deletedTaskId = data.delTask.id;\n    dispatch(projectActions.createDelTaskToEditingProject(deletedTaskId));\n  };\n}\n\nexport function setProjectIsPinned(\n  projectId: string,\n  isPinned: boolean,\n): TReduxThunk {\n  return async dispatch => {\n    const patchedProject = await API.project.patchProject(projectId, {\n      isPinned,\n    });\n    if (patchedProject == null) throw new Error('setProjectIsPinned 失败');\n    dispatch(\n      projectActions.createSetOneProjectIsPinnedById(projectId, isPinned),\n    );\n  };\n}\n\nexport function saveEditingProjectName(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const { project: {editingProject: { current }} } = getState();\n    if (current == null) return;\n    const { id: projectId, name } = current;\n    const patchedProject = await API.project.patchProject(projectId, {\n      name,\n    });\n    if (patchedProject == null) throw new Error('saveEditingProjectName 失败');\n    dispatch(projectActions.createChangeProjectNameById(projectId, name));\n    dispatch(globalEffects.pushNotification({\n      type: NotificationType.SUCCESS,\n      title: '成功更改项目名称',\n    }, 1500));\n  };\n}\n\nexport function redoEditingProject(): TReduxThunk {\n  return async dispatch => {\n    dispatch(projectActions.createRedoEditingProject());\n  };\n}\n\nexport function undoEditingProject(): TReduxThunk {\n  return async dispatch => {\n    dispatch(projectActions.createUndoEditingProject());\n  };\n}\n","import { INotification } from \"./reducer\";\nimport { TReduxThunk } from \"../effects\";\nimport { globalActions } from \"../action\";\n\nexport function pushNotification(n: INotification, timeout: number = 3000): TReduxThunk {\n  return async (dispatch) => {\n    setTimeout(() => {\n      dispatch(globalActions.createShiftNotification());\n    }, timeout);\n    dispatch(globalActions.createPushNotification(n));\n  };\n}\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport ErrorIcon from '@material-ui/icons/Clear';\nimport SuccessIcon from '@material-ui/icons/Done';\nimport WarnIcon from '@material-ui/icons/PriorityHigh';\n\nimport { Card, CardHeader } from '@material-ui/core';\nimport { Color, NotificationType } from '../../../util/constants';\n\nconst SUCCESS = 'success';\nconst ERROR = 'error';\nconst WARN = 'warn';\n\nconst TYPE_COLOR_MAPPING = {\n  [SUCCESS]: Color.GREEN,\n  [ERROR]: Color.RED,\n  [WARN]: Color.YELLOW,\n};\n\nfunction NotificationCardWithRef(\n  props: {\n    type?: NotificationType;\n    title: string;\n    style: any;\n    detail?: string;\n  },\n  ref: any,\n) {\n  const { type = NotificationType.WARN, title, style, detail = '' } = props;\n  const iconStyle = {\n    borderRadius: '50%',\n    overflow: 'hidden',\n    color: '#fff',\n    width: '48px',\n    height: '48px',\n    backgroundColor: TYPE_COLOR_MAPPING[type],\n  };\n  let icon = <WarnIcon style={iconStyle} />;\n  if (type === ERROR) icon = <ErrorIcon style={iconStyle} />;\n  if (type === SUCCESS) icon = <SuccessIcon style={iconStyle} />;\n\n  return (\n    <Card ref={ref} style={style}>\n      <CardHeader\n        avatar={icon}\n        title={title}\n        subheader={detail}\n        // subheader=\"status: 401\"\n      />\n    </Card>\n  );\n}\n\nconst NotificationCard = React.forwardRef(NotificationCardWithRef);\n\n// NotificationCard.types = {\n//   SUCCESS,\n//   ERROR,\n//   WARN,\n// };\n\n// NotificationCard.propTypes = {\n//   type: PropTypes.oneOf([WARN, ERROR, SUCCESS]),\n//   title: PropTypes.node.isRequired,\n//   subtitle: PropTypes.node,\n//   style: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n// };\n\n// NotificationCard.defaultProps = {\n//   type: 'none',\n//   subtitle: null,\n//   style: undefined,\n// };\n\nexport default NotificationCard;\n","import { useState, useCallback } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { IReduxState } from '../store/reducers';\n\nexport function useForceUpdate() {\n  const [, setUpdateCount] = useState(0);\n  const forceUpdate = useCallback(() => {\n    setUpdateCount(prevCount => prevCount + 1);\n  }, [setUpdateCount]);\n  return forceUpdate;\n}\n\n// export const useShallowEqualSelector = curry(flip(useSelector))\nexport function useShallowEqualSelector<RES>(selector: (state: IReduxState) => RES) {\n  return useSelector(selector, shallowEqual);\n}\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport NotificationCard from './ui/NotificationCard';\r\nimport { IReduxState } from '../../store/reducers';\r\nimport { useShallowEqualSelector } from '../../util/hooks';\r\n\r\nconst notificationsSelector = ({ global: { notifications } }: IReduxState) => ({\r\n  notifications,\r\n});\r\n\r\nfunction Notifications() {\r\n  const { notifications } = useShallowEqualSelector(notificationsSelector);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"NotificationsPanelContainer\"\r\n        style={{\r\n          position: 'absolute',\r\n          top: '0',\r\n          left: '0',\r\n          width: '100%',\r\n          boxSizing: 'border-box',\r\n        }}\r\n      >\r\n        <TransitionGroup>\r\n          {notifications.map((n, index) => (\r\n            <Zoom key={index + n.title}>\r\n              <NotificationCard\r\n                style={{\r\n                  zIndex: '1',\r\n                  backgroundColor: '#fff',\r\n                  margin: '20px 20px 0 20px',\r\n                  position: 'absolute',\r\n                  width: 'calc(100% - 40px)',\r\n                  boxSizing: 'border-box',\r\n                }}\r\n                type={n.type}\r\n                title={n.title}\r\n                detail={n.detail}\r\n              />\r\n            </Zoom>\r\n          ))}\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\nimport './index.scss';\nimport Notifications from '../../component/Notifications';\nexport default function BasicLayout({ children }: { children: any }) {\n  return (\n    <div className=\"basic-layout\">\n      <div className=\"basic-layout-content\">{children}</div>\n      <Notifications />\n    </div>\n  );\n}\n","/* eslint-disable no-lone-blocks */\nimport React, { useCallback, useRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Proptypes from 'prop-types';\n\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useForceUpdate } from '../util/hooks';\n\n\nfunction HomeButton({onClick, needDoubleClick, timeout}: {\n    onClick: (...args: any[]) => void;\n    needDoubleClick: boolean,\n    timeout: number,\n}) {\n\n  const forceUpdate = useForceUpdate();\n  const clickCountRef = useRef(0);\n  const timerIdRef = useRef<null | number>(null);\n\n  const doOnClick = useCallback((...args: any[]) => {\n    if (!needDoubleClick) {\n      onClick(...args);\n      return;\n    }\n\n    // 以下是开启了needDoubleClick模式的逻辑\n    clickCountRef.current += 1;\n    const clickCountSoFar = clickCountRef.current;\n    if (clickCountSoFar === 1) {\n      if (timerIdRef.current != null) clearTimeout(timerIdRef.current); // 防御性判断\n\n      timerIdRef.current = setTimeout(() => {\n        clickCountRef.current = 0;\n        timerIdRef.current = null;\n        forceUpdate();\n      }, timeout);\n    } else if (clickCountSoFar === 2) {\n      if (timerIdRef.current != null) clearTimeout(timerIdRef.current);\n\n      clickCountRef.current = 0;\n      onClick(...args);\n    }\n    forceUpdate();\n  }, [onClick, needDoubleClick, forceUpdate, timeout]);\n\n  const backgroundColor = clickCountRef.current === 1\n    ? 'rgba(0, 0, 0, 0.25)'\n    : '';\n\n  return (\n    <IconButton\n      style={{\n        backgroundColor,\n        transition: 'background-color 300ms linear',\n      }}\n      onClick={doOnClick}\n      edge=\"end\"\n    >\n      <HomeIcon />\n    </IconButton>\n  );\n}\n\nHomeButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n  needDoubleClick: Proptypes.bool,\n  timeout: Proptypes.number,\n};\n\nHomeButton.defaultProps = {\n  needDoubleClick: false,\n  timeout: 1000,\n};\n\nexport default HomeButton;\n","import React, { useCallback } from 'react';\nimport { Button } from '@material-ui/core';\nimport {  useDispatch} from 'react-redux';\nimport { globalActions } from '../../store/action';\nimport { Color } from '../../util/constants';\n\nexport default function DefaultButton() {\n  const dispatch = useDispatch();\n  const showAsideMenu = useCallback(() => {\n    dispatch(globalActions.createSetIsShowAsideMenu(true));\n  }, [dispatch]);\n  return (\n    <Button style={{\n      backgroundColor: Color.BLUE,\n      color: '#fff',\n    }} onClick={showAsideMenu} fullWidth variant=\"outlined\">开始一个项目</Button>\n  );\n}\n","import React, { useMemo, useCallback } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { IReduxState } from '../../store/reducers';\nimport { useShallowEqualSelector } from '../../util/hooks';\nimport { projectActions } from '../../store/action';\nimport { Color } from '../../util/constants';\n\nconst todoProjectButtonSelector = ({ project: { todoProject } }: IReduxState) => ({\n  projectId: todoProject == null ? null : todoProject.id,\n  tasks: todoProject == null ? [] : todoProject.tasks,\n});\n\nexport default function TodoProjectButton() {\n  const { tasks, projectId } = useShallowEqualSelector(todoProjectButtonSelector);\n  // console.log('tasks', tasks);\n  const checkedTasks = useMemo(() => tasks.filter(t => t.checked), [tasks]);\n  const unchekcedTasks = useMemo(() => tasks.filter(t => !t.checked), [tasks]);\n  const dispatch = useDispatch();\n  const isAllFininshed = checkedTasks.length === tasks.length;\n  let buttonText: string;\n  let buttonColor: string;\n  if (tasks.length === 0) {\n    buttonText = '添加任务项';\n    buttonColor = Color.RED;\n  } else if (isAllFininshed) {\n    buttonText = `完成全部任务(${checkedTasks.length}/${tasks.length})`;\n    buttonColor = Color.GREEN;\n  } else {\n    buttonText = `完成一项任务(${checkedTasks.length}/${tasks.length})`;\n    buttonColor = Color.ORANGE;\n  }\n  const history = useHistory();\n  const finishOneTaskOrJumpToRootPageOrEditorPage = useCallback(() => {\n    if (tasks.length === 0 && projectId != null) {\n      history.push(`/project-editor/${projectId}`);\n    } else if (isAllFininshed) {\n      history.push('/');\n    } else if (unchekcedTasks.length !== 0) {\n      dispatch(projectActions.createToggleCheckTaskInTodoProjectById(unchekcedTasks[0].id));\n    }\n  }, [isAllFininshed, history, unchekcedTasks, dispatch, tasks, projectId]);\n\n  return (\n    <Button\n      style={{\n        backgroundColor: buttonColor,\n        color: '#fff',\n      }}\n      onClick={finishOneTaskOrJumpToRootPageOrEditorPage}\n      fullWidth\n      variant=\"outlined\"\n    >\n      {buttonText}\n    </Button>\n  );\n}\n","import React, { useCallback } from 'react';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { projectEffects } from '../../store/effects';\r\nimport { IReduxState } from '../../store/reducers';\r\nimport { useShallowEqualSelector } from '../../util/hooks';\r\n\r\nconst taskEditorSelector = ({\r\n  project: {\r\n    editingProject: { prev, future },\r\n  },\r\n}: IReduxState) => ({\r\n  numOfPrevProject: prev.length,\r\n  numOfFutuProject: future.length,\r\n});\r\n\r\nexport default function TaskEditorButton() {\r\n  const dispatch = useDispatch();\r\n  const { numOfFutuProject, numOfPrevProject } = useShallowEqualSelector(\r\n    taskEditorSelector,\r\n  );\r\n\r\n  // 时间旅行相关\r\n  const undoProject = useCallback(() => {\r\n    dispatch(projectEffects.undoEditingProject());\r\n  }, [dispatch]);\r\n  const redoProject = useCallback(() => {\r\n    dispatch(projectEffects.redoEditingProject());\r\n  }, [dispatch]);\r\n  return (\r\n    <ButtonGroup fullWidth>\r\n      <Button disabled={numOfPrevProject === 0} onClick={undoProject}>\r\n        undo\r\n      </Button>\r\n      <Button disabled={numOfFutuProject === 0} onClick={redoProject}>\r\n        redo\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, Switch, Route } from 'react-router-dom';\nimport { globalActions } from '../../store/action';\nimport HomeButton from '../HomeButton';\nimport DefaultButton from './DefaultButton';\nimport TodoProjectButton from './TodoProjectButton';\nimport TaskEditorButton from './TaskEditorButton';\n\nexport default function NavBar() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const onClickMenuButton = useCallback(() => {\n    dispatch(globalActions.createSetIsShowAsideMenu(true));\n  }, [dispatch]);\n\n  const onClickHomeButton = useCallback(() => {\n    console.log('onClickHomeButton');\n    history.push('/');\n  }, [history]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n      }}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <Switch>\n          <Route path=\"/todo-project\" component={TodoProjectButton} />\n          <Route path=\"/project-editor\" component={TaskEditorButton} />\n          <Route path=\"*\" component={DefaultButton} />\n        </Switch>\n        <HomeButton needDoubleClick onClick={onClickHomeButton} />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function FullScreenLoading() {\n\n    return (\n        <div style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }} className=\"full-screen-loading\">\n            <CircularProgress />\n        </div>\n    )\n}","import React, { useState, useCallback, SyntheticEvent } from 'react';\nimport { ListItem, List, ListItemText, ListSubheader, IconButton, Switch, Slide } from '@material-ui/core';\nimport { Delete as DeleteIcon, BorderColor as EditIcon, StarBorder as UnpinnedIcon } from '@material-ui/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport { IReduxState } from '../store/reducers';\nimport { useShallowEqualSelector } from '../util/hooks';\nimport { projectEffects } from '../store/effects';\nimport FullScreenLoading from '../ui/FullScreenLoading';\nimport { globalActions } from '../store/action';\n\n// import './index.scss';\n\nconst projectSelector = ({ project: { projects } }: IReduxState) => ({\n  projects,\n});\n\nconst ProjectList = React.memo(function ProjectList() {\n  const { projects } = useShallowEqualSelector(projectSelector);\n\n  // 页面跳转相关\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const jumpToTodoProjectPageById = useCallback(\n    // 跳转到 todo project 页面\n    (projectId: string) => {\n      dispatch(globalActions.createSetIsShowAsideMenu(false));\n      history.push(`/todo-project/${projectId}`);\n    },\n    [dispatch, history],\n  );\n\n  const jumpToProjectEditorPageById = useCallback(\n    // 跳转到 project editor 页面\n    (projectId: string) => {\n      dispatch(globalActions.createSetIsShowAsideMenu(false));\n      history.push(`/project-editor/${projectId}`);\n    },\n    [dispatch, history],\n  );\n\n\n  // project 操作相关\n  const deleteProject = useCallback(\n    (proejctId: string) => {\n      dispatch(projectEffects.delProjectById(proejctId));\n    },\n    [dispatch],\n  );\n\n  const pinOneProject = useCallback((projectId: string) => {\n    dispatch(projectEffects.setProjectIsPinned(projectId, true))\n    console.log('pinOneProject', projectId);\n  }, [dispatch]);\n\n  // 编辑按钮相关\n  const [isEdited, setIsEdited] = useState(false);\n  const toggleIsEdited = useCallback(() => setIsEdited(prev => !prev), [setIsEdited]);\n\n  if (projects == null) return <FullScreenLoading />;\n  \n  return (\n    <List\n      className=\"project-list\"\n      subheader={\n        <ListSubheader>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <span style={{ flex: '1' }} className=\"title\">\n              项目\n            </span>\n            <div className=\"edit-button\">\n              编辑 <Switch checked={isEdited} onChange={toggleIsEdited} />\n            </div>\n          </div>\n        </ListSubheader>\n      }\n    >\n      <TransitionGroup>\n        {projects.map(p => (\n          <Slide timeout={500} direction=\"right\" key={p.id}>\n            <ListItem\n              style={{\n                height: '64px',\n              }}\n              onClick={() => jumpToTodoProjectPageById(p.id)}\n              button\n            >\n              <ListItemText>{p.name}</ListItemText>\n              {isEdited ? (\n                <>\n                  <IconButton\n                    onClick={(evt: SyntheticEvent) => {\n                      evt.stopPropagation();\n                      jumpToProjectEditorPageById(p.id);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton\n                    onClick={(evt: SyntheticEvent) => {\n                      evt.stopPropagation();\n                      deleteProject(p.id);\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </>\n              ) : p.isPinned ? null : (\n                <IconButton\n                  onClick={(evt: SyntheticEvent) => {\n                    evt.stopPropagation();\n                    pinOneProject(p.id);\n                  }}\n                >\n                  <UnpinnedIcon />\n                </IconButton>\n              )}\n            </ListItem>\n          </Slide>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n})\n\nexport default ProjectList;\n","import { useSelector } from 'react-redux';\r\n\r\nimport { IReduxState } from \"../store/reducers\";\r\n\r\n\r\n\r\nexport const useIsLogined = (function createUseIsLogin() {\r\n  const useIsLoginSelector = ({ user: { user } }: IReduxState) => user != null;\r\n  return function useIsLogin() {\r\n    return useSelector(useIsLoginSelector);\r\n  }\r\n}());\r\n","import React from 'react';\r\n\r\nexport default function FullScreenLoginTip() {\r\n  return (\r\n    <div style={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }}>\r\n      请登录\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\nimport {\n  Drawer,\n  Button,\n  ButtonGroup,\n  List,\n  ListItem,\n  Divider,\n  ListSubheader,\n  TextField,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport './index.scss';\nimport { IReduxState } from '../../store/reducers';\nimport { useShallowEqualSelector } from '../../util/hooks';\nimport { globalActions } from '../../store/action';\nimport ProjectList from '../ProjectList';\nimport { projectEffects } from '../../store/effects';\nimport { useIsLogined } from '../../hook';\nimport FullScreenLoginTip from '../../ui/FullScreenLoginTip';\n\nconst commonLayoutSelector = ({\n  user: { user },\n  global: { isShowAsideMenu },\n}: IReduxState) => ({\n  isShowAsideMenu,\n  username: user != null ? user.username : '',\n});\n\nexport default function AsideMenu() {\n  const { isShowAsideMenu, username } = useShallowEqualSelector(commonLayoutSelector);\n  const isLogined = useIsLogined();\n  const dispatch = useDispatch();\n  const hideAsideMenu = useCallback(() => {\n    dispatch(globalActions.createSetIsShowAsideMenu(false));\n  }, [dispatch]);\n  const history = useHistory();\n  const handleClickLoginButton = useCallback(() => {\n    hideAsideMenu();\n    history.push('/login');\n  }, [hideAsideMenu, history]);\n  const handleClickRegisterButton = useCallback(() => {\n    hideAsideMenu();\n    history.push('/register');\n  }, [hideAsideMenu, history]);\n\n  const jumpToAccountPage = useCallback(() => {\n    hideAsideMenu();\n    history.push('/account');\n  }, [hideAsideMenu, history]);\n\n  const [projectName, setProjectName] = useState('');\n\n  const updateProjectName = useCallback(\n    (evt: any) => setProjectName(evt.target.value),\n    [setProjectName],\n  );\n\n  const createProject = useCallback(() => {\n    if (projectName.trim() === '') return;\n    dispatch(projectEffects.createProject({ name: projectName }));\n    setProjectName('');\n  }, [projectName, setProjectName, dispatch]);\n\n  const handleKeyEnterUp = useCallback(\n    (evt: any) => {\n      const KEY_ENTER_CODE = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER_CODE) {\n        createProject();\n      }\n    },\n    [createProject],\n  );\n\n  return (\n    <Drawer\n      className=\"aside-menu-wrapper\"\n      anchor=\"left\"\n      onClose={hideAsideMenu}\n      open={isShowAsideMenu}\n    >\n      <div className=\"aside-menu\">\n        <div className=\"aside-menu-project-list\">\n          {isLogined ? <ProjectList /> : <FullScreenLoginTip />}\n        </div>\n        <Divider />\n        <List\n          subheader={<ListSubheader>功能</ListSubheader>}\n          className=\"aside-menu-functions\"\n        >\n          <ListItem>\n            <TextField\n              label={isLogined ? '创建新任务' : '请先登录'}\n              disabled={!isLogined}\n              onKeyUp={handleKeyEnterUp}\n              onChange={updateProjectName}\n              type=\"text\"\n              value={projectName}\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n            />\n          </ListItem>\n          <ListItem>\n            {isLogined ? (\n              <Button fullWidth variant=\"outlined\" onClick={jumpToAccountPage}>\n                账户({username} 已登录)\n              </Button>\n            ) : (\n              <ButtonGroup fullWidth>\n                <Button variant=\"outlined\" onClick={handleClickLoginButton}>\n                  登录\n                </Button>\n                <Button variant=\"outlined\" onClick={handleClickRegisterButton}>\n                  注册\n                </Button>\n              </ButtonGroup>\n            )}\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React, { useEffect, useCallback, useMemo } from 'react';\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { TransitionGroup } from 'react-transition-group';\nimport {\n  List,\n  Slide,\n  ListItem,\n  ListItemText,\n  Checkbox,\n  ListItemIcon,\n  Typography,\n  ListSubheader,\n  IconButton,\n} from '@material-ui/core';\nimport { BorderColor as EditIcon } from '@material-ui/icons';\n\nimport { IReduxState } from '../../store/reducers';\nimport { useShallowEqualSelector } from '../../util/hooks';\nimport { projectEffects } from '../../store/effects';\nimport FullScreenLoading from '../../ui/FullScreenLoading';\nimport { projectActions } from '../../store/action';\n\nimport './index.scss';\n\nconst todoProjectSelector = ({ project: { todoProject } }: IReduxState) => ({\n  todoProject,\n});\n\nexport default function TodoPorject() {\n  const { id: projectId } = useParams();\n  const { todoProject } = useShallowEqualSelector(todoProjectSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => () => {\n    dispatch(projectActions.createClearTodoProject());\n  }, [dispatch]);\n\n  useEffect(() => { // 拉取 project\n    if (projectId == null) return;\n    if (todoProject == null || todoProject.id !== projectId) {\n      if (todoProject != null) dispatch(projectActions.createClearTodoProject());\n      dispatch(projectEffects.getTodoProject(projectId));\n    }\n  }, [projectId, todoProject, dispatch]);\n\n  const checkedTasks = useMemo(() => (todoProject == null ? [] : todoProject.tasks.filter(t => t.checked)), [\n    todoProject,\n  ]);\n  const uncheckedTasks = useMemo(() => (todoProject == null ? [] : todoProject.tasks.filter(t => !t.checked)), [\n    todoProject,\n  ]);\n\n  // 页面跳转\n  const history = useHistory();\n  const jumpToEditPage = useCallback(() => {\n    history.push(`/project-editor/${projectId}`);\n  }, [history, projectId]);\n\n  const toggleOneTask = useCallback(\n    (taskId: string) => {\n      dispatch(projectActions.createToggleCheckTaskInTodoProjectById(taskId));\n    },\n    [dispatch],\n  );\n\n  if (projectId == null) return <Redirect to=\"/\" />;\n\n  if (todoProject == null) return <FullScreenLoading />;\n\n  return (\n    <div className=\"todo-project\">\n      <List>\n        <ListItem>\n          <Typography variant=\"h4\">{todoProject.name}</Typography>\n          <IconButton onClick={jumpToEditPage}>\n            <EditIcon />\n          </IconButton>\n        </ListItem>\n        <List subheader={uncheckedTasks.length !== 0 ? <ListSubheader>未完成</ListSubheader> : undefined}>\n          <TransitionGroup>\n            {uncheckedTasks.map(t => (\n              <Slide timeout={500} key={t.id} direction=\"right\">\n                <ListItem button onClick={() => toggleOneTask(t.id)}>\n                  <ListItemIcon>\n                    <Checkbox checked={t.checked} />\n                  </ListItemIcon>\n                  <ListItemText>{t.name}</ListItemText>\n                </ListItem>\n              </Slide>\n            ))}\n          </TransitionGroup>\n        </List>\n        <List subheader={checkedTasks.length !== 0 ? <ListSubheader>已完成</ListSubheader> : undefined}>\n          <TransitionGroup>\n            {checkedTasks.map(t => (\n              <Slide timeout={500} key={t.id} direction=\"right\">\n                <ListItem button key={t.id} onClick={() => toggleOneTask(t.id)}>\n                  <ListItemIcon>\n                    <Checkbox checked={t.checked} />\n                  </ListItemIcon>\n                  <ListItemText>{t.name}</ListItemText>\n                </ListItem>\n              </Slide>\n            ))}\n          </TransitionGroup>\n        </List>\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport {\n  ArrowBack as BackIcon,\n} from '@material-ui/icons';\n\nexport default function Header({onBack, title}: {title?: string; onBack?: (...args: any[]) => unknown}) {\n    \n    return (\n      <AppBar\n        style={{\n          backgroundColor: 'white',\n        }}\n        position=\"static\"\n      >\n        <Toolbar>\n          <IconButton edge=\"start\" onClick={onBack}>\n            <BackIcon />\n          </IconButton>\n          <Typography style={{color: '#000'}} variant=\"h6\">\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n  ","import React, { useEffect, useCallback, useState } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Checkbox,\n  ListItemIcon,\n  TextField,\n  IconButton,\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, Save as SaveIcon } from '@material-ui/icons';\n\nimport { IReduxState } from '../../store/reducers';\nimport { useShallowEqualSelector } from '../../util/hooks';\nimport { projectEffects } from '../../store/effects';\nimport FullScreenLoading from '../../ui/FullScreenLoading';\nimport { projectActions } from '../../store/action';\n\nimport './index.scss';\n\nconst projectEditorSelector = ({ project: { editingProject: { current } } }: IReduxState) => ({\n  editingProject: current,\n});\n\n// const debouncedChangeProjectName = createDebounced(projectEffects.setProjectName)\n\n// 关于项目更名的逻辑，可以单独抽离成一个 ProjectEditorHeader 组件\n\nexport default function ProjectEditor() {\n  const { id: projectId } = useParams();\n  const { editingProject } = useShallowEqualSelector(projectEditorSelector);\n  const dispatch = useDispatch();\n\n  const changeEditingProjectName = useCallback((evt: any) => {\n    dispatch(projectActions.createSnapshotEditingpProject());\n    dispatch(projectActions.createChangeEditingProjectName(evt.target.value));\n  }, [dispatch]);\n\n  const saveEdtingProjectName = useCallback(() => {\n    dispatch(projectEffects.saveEditingProjectName())\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (projectId == null) return;\n    if (editingProject == null || editingProject.id !== projectId) {\n      dispatch(projectActions.createClearEditingHistory());\n      dispatch(projectEffects.getEditingProject(projectId));\n    } \n  }, [projectId, editingProject, dispatch]);\n\n  const [taskName, setTaskName] = useState('');\n  const updateTaskName = useCallback((evt: any) => setTaskName(evt.target.value), [setTaskName]);\n\n  const createTask = useCallback(() => {\n    if (taskName.trim() === '' || editingProject == null) return;\n    dispatch(projectActions.createSnapshotEditingpProject());\n    dispatch(projectEffects.createTask(editingProject.id, taskName));\n    setTaskName('');\n  }, [taskName, setTaskName, dispatch, editingProject]);\n\n  const handleKeyEnterUp = useCallback(\n    (evt: any) => {\n      const KEY_ENTER_CODE = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER_CODE) {\n        dispatch(projectActions.createClearEditingProjectFuture());\n        createTask();\n      }\n    },\n    [dispatch, createTask],\n  );\n\n  const deleteTask = useCallback(\n    (taskId: string) => {\n      dispatch(projectActions.createSnapshotEditingpProject());\n      dispatch(projectEffects.delTask(taskId));\n    },\n    [dispatch],\n  );\n\n\n  if (projectId == null) return <Redirect to=\"/\" />;\n\n  if (editingProject == null) return <FullScreenLoading />;\n\n  return (\n    <div className=\"project-editor\">\n      <List>\n        <ListItem className=\"project-editor-input\">\n          <TextField onChange={changeEditingProjectName} value={editingProject.name} />\n          <ListItemIcon>\n            <IconButton onClick={saveEdtingProjectName}>\n              <SaveIcon />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n        {editingProject.tasks.map(t => (\n          <ListItem key={t.id}>\n            <ListItemIcon>\n              <Checkbox />\n            </ListItemIcon>\n            <ListItemText>{t.name}</ListItemText>\n            <ListItemIcon>\n              <IconButton onClick={() => deleteTask(t.id)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemIcon>\n          </ListItem>\n        ))}\n        <ListItem>\n          <TextField placeholder=\"任务名称(按回车键添加)\" onKeyUp={handleKeyEnterUp} value={taskName} onChange={updateTaskName} type=\"text\" fullWidth />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import React, { useMemo, useCallback, SyntheticEvent } from 'react';\nimport { ListItem, List, ListItemText, ListSubheader, Fade, ListItemIcon, IconButton } from '@material-ui/core';\nimport { Star as PinnedIcon } from '@material-ui/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport { IReduxState } from '../store/reducers';\nimport { useShallowEqualSelector } from '../util/hooks';\nimport { globalActions } from '../store/action';\nimport { projectEffects } from '../store/effects';\nimport { useIsLogined } from '../hook';\n\n// import './index.scss';\n\nconst pinnedProjectListSelector = ({ project: { projects } }: IReduxState) => ({\n  projects,\n});\n\nexport default function PinnedProjectList() {\n  const { projects } = useShallowEqualSelector(pinnedProjectListSelector);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const jumpToTodoProjectPageById = useCallback(\n    (projectId: string) => {\n      dispatch(globalActions.createSetIsShowAsideMenu(false));\n      history.push(`/todo-project/${projectId}`);\n    },\n    [dispatch, history],\n  );\n\n  const unpinOneProject = useCallback(\n    (projectId: string) => {\n      dispatch(projectEffects.setProjectIsPinned(projectId, false));\n    },\n    [dispatch],\n  );\n\n  // 权限相关\n  const isLogined = useIsLogined();\n  const pinnedProjects = useMemo(() => (!isLogined || projects == null ? [] : projects.filter(p => p.isPinned)), [projects, isLogined]);\n\n\n  return (\n    <List className=\"pinned-project-list\" subheader={<ListSubheader>置顶任务项</ListSubheader>}>\n      <TransitionGroup>\n        {pinnedProjects.map(p => (\n          <Fade timeout={500}key={p.id}>\n            <ListItem\n              style={{\n                height: '64px',\n              }}\n              onClick={() => jumpToTodoProjectPageById(p.id)}\n              button\n            >\n              <ListItemText>{p.name}</ListItemText>\n              <ListItemIcon>\n                <IconButton\n                  onClick={(evt: SyntheticEvent) => {\n                    evt.stopPropagation();\n                    unpinOneProject(p.id);\n                  }}\n                >\n                  <PinnedIcon />\n                </IconButton>\n              </ListItemIcon>\n            </ListItem>\n          </Fade>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n","import React, { useCallback } from 'react';\r\nimport Header from '../Header';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { IReduxState } from '../../store/reducers';\r\nimport { Color } from '../../util/constants';\r\nimport { userEffects } from '../../store/effects';\r\nimport { useShallowEqualSelector } from '../../util/hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst accountSelector = ({ user: { user } }: IReduxState) => ({\r\n  user,\r\n});\r\n\r\nexport default function AccountPage() {\r\n  const history = useHistory();\r\n\r\n  const { user } = useShallowEqualSelector(accountSelector);\r\n\r\n  const jumpToPrevPage = useCallback(() => {\r\n    history.goBack();\r\n  }, [history]);\r\n\r\n  const dispatch = useDispatch();\r\n  // 退出相关\r\n  const handleLogoutButton = useCallback(() => {\r\n    dispatch(userEffects.logout());\r\n  }, [dispatch]);\r\n\r\n  if (user == null) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"account-page\">\r\n      <Header onBack={jumpToPrevPage} title=\"账户\" />\r\n      <div className=\"account-page-content\">\r\n        <div className=\"text\">欢迎您，{user.username}</div>\r\n        <br />\r\n        <Button\r\n          onClick={handleLogoutButton}\r\n          variant=\"contained\"\r\n          style={{\r\n            backgroundColor: Color.RED,\r\n            color: '#fff',\r\n          }}\r\n        >\r\n          退出登录\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import DefaultLayout from '../layout/DefaultLayout';\nimport TodoPorject from '../component/TodoProject';\nimport LoginPage from '../component/LoginPage';\nimport RegisterPage from '../component/RegisterPage';\nimport ProjectEditor from '../component/ProjectEditor';\nimport PinnedProjectList from '../component/PinnedProjectList';\nimport AccountPage from '../component/AccountPage';\nimport BasicLayout from '../layout/BasicLayout';\n\ninterface IRoute {\n  path: string;\n  component: (...args: any[]) => JSX.Element;\n  layout?: (...args: any[]) => JSX.Element;\n  children?: IRoute[];\n}\n\nconst routes: IRoute[] = [\n  {\n    path: '/login',\n    layout: BasicLayout,\n    component: LoginPage,\n  },\n  {\n    path: '/register',\n    layout: BasicLayout,\n    component: RegisterPage,\n  },\n  {\n    path: '/account',\n    layout: BasicLayout,\n    component: AccountPage,\n  },\n  {\n    path: '/',\n    component: DefaultLayout,\n    children: [\n      {\n        path: '/todo-project/:id',\n        component: TodoPorject,\n      },\n      {\n        path: \"/project-editor/:id\",\n        component: ProjectEditor,\n      },\n      {\n        path: '/',\n        component: PinnedProjectList,\n      },\n    ],\n  },\n];\nexport default routes;\n","import React, { useCallback, useState } from 'react';\r\nimport { TextField, Grow, Button } from '@material-ui/core';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { userEffects, globalEffects } from '../../store/effects';\r\n\r\nimport './index.scss';\r\nimport Header from '../../component/Header';\r\nimport { useIsLogined } from '../../hook';\r\nimport { NotificationType } from '../../util/constants';\r\n\r\nfunction usernameValidator(username: string) {\r\n  //用户名正则，4到16位（字母，数字，下划线，减号）\r\n  const pattern = /^[a-zA-Z0-9_-]{4,16}$/;\r\n  return pattern.test(username);\r\n}\r\n\r\nfunction passwordValidator(password: string) {\r\n  //密码正则，4到16位（字母，数字，下划线，减号）\r\n  const pattern = /^[a-zA-Z0-9_-]{4,16}$/;\r\n  return pattern.test(password);\r\n}\r\n\r\nexport default function LoginPage() {\r\n  // 页面退回相关\r\n  const history = useHistory();\r\n  const [isExiting, setIsExiting] = useState(false);\r\n  const startExitTransition = useCallback(() => setIsExiting(true), [\r\n    setIsExiting,\r\n  ]);\r\n  const backToPrevPage = useCallback(() => {\r\n    history.goBack();\r\n  }, [history]);\r\n\r\n  // 登录相关\r\n  // phonenumber\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState('');\r\n  const [isUsernameError, setIsUsernameError] = useState(false);\r\n  const updatePhoneNumber = useCallback(\r\n    evt => {\r\n      setIsUsernameError(false);\r\n      setUsername(evt.target.value);\r\n    },\r\n    [setIsUsernameError, setUsername],\r\n  );\r\n  // password\r\n  const [password, setPassword] = useState('');\r\n  const [isPassWordInputError, setIsPassWordInputError] = useState(false);\r\n  const updatePassword = useCallback(evt => {\r\n    setIsPassWordInputError(false);\r\n    setPassword(evt.target.value);\r\n  }, []);\r\n  const onClickLoginButton = useCallback(() => {\r\n    if (!usernameValidator(username)) {\r\n      dispatch(\r\n        globalEffects.pushNotification({\r\n          type: NotificationType.WARN,\r\n          title: '用户名格式错误',\r\n          detail: '请输入4到16位（字母，数字，下划线，减号）',\r\n        }),\r\n      );\r\n      setIsUsernameError(true);\r\n    } else if (!passwordValidator(password)) {\r\n      dispatch(\r\n        globalEffects.pushNotification({\r\n          type: NotificationType.WARN,\r\n          title: '密码格式错误',\r\n          detail: '请输入4到16位（字母，数字，下划线，减号）',\r\n        }),\r\n      );\r\n      setIsPassWordInputError(true);\r\n    } else {\r\n      dispatch(userEffects.login({ username, password }));\r\n    }\r\n  }, [\r\n    username,\r\n    password,\r\n    setIsUsernameError,\r\n    setIsPassWordInputError,\r\n    dispatch,\r\n  ]);\r\n  // onBack={startExitTransition} title=\"登录\"\r\n\r\n  // 判断是否已经登录\r\n  const isLoinged = useIsLogined();\r\n  if (isLoinged) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Grow in={!isExiting} onExited={backToPrevPage}>\r\n      <div id=\"login-page\">\r\n        <Header onBack={startExitTransition} title=\"登录\" />\r\n        <div className=\"login-area\">\r\n          <form>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"请输入4到16位（字母，数字，下划线，减号）\"\r\n              error={isUsernameError}\r\n              value={username}\r\n              onChange={updatePhoneNumber}\r\n              type=\"text\"\r\n              label=\"用户名\"\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              placeholder=\"请输入4到16位（字母，数字，下划线，减号）\"\r\n              error={isPassWordInputError}\r\n              value={password}\r\n              onChange={updatePassword}\r\n              fullWidth\r\n              type=\"password\"\r\n              label=\"密码\"\r\n              margin=\"normal\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button onClick={onClickLoginButton} fullWidth variant=\"outlined\">\r\n              登录\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Grow>\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { TextField, Grow, Button } from '@material-ui/core';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { globalEffects, userEffects } from '../../store/effects';\r\n\r\nimport './index.scss';\r\nimport Header from '../../component/Header';\r\nimport { useIsLogined } from '../../hook';\r\nimport { NotificationType } from '../../util/constants';\r\n\r\nfunction usernameValidator(username: string) {\r\n  //用户名正则，4到16位（字母，数字，下划线，减号）\r\n  const pattern =  /^[a-zA-Z0-9_-]{4,16}$/;\r\n  return pattern.test(username);\r\n}\r\n\r\nfunction passwordValidator(password: string) {\r\n  //密码正则，4到16位（字母，数字，下划线，减号）\r\n  const pattern =  /^[a-zA-Z0-9_-]{4,16}$/;\r\n  return pattern.test(password);\r\n\r\n}\r\n\r\nexport default function LoginPage() {\r\n  // 页面退回相关\r\n  const history = useHistory();\r\n  const [isExiting, setIsExiting] = useState(false);\r\n  const startExitTransition = useCallback(() => setIsExiting(true), [setIsExiting]);\r\n  const backToPrevPage = useCallback(() => {\r\n    history.goBack();\r\n  }, [history]);\r\n\r\n  // 登录相关\r\n  // phonenumber\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState('');\r\n  const [isUsernameError, setIsUsernameError] = useState(false);\r\n  const updatePhoneNumber = useCallback(\r\n    evt => {\r\n      setIsUsernameError(false);\r\n      setUsername(evt.target.value);\r\n    },\r\n    [setIsUsernameError, setUsername],\r\n  );\r\n  // password\r\n  const [password, setPassword] = useState('');\r\n  const [isPassWordInputError, setIsPassWordInputError] = useState(false);\r\n  const updatePassword = useCallback(evt => {\r\n    setIsPassWordInputError(false);\r\n    setPassword(evt.target.value);\r\n  }, [setIsPassWordInputError, setPassword]);\r\n\r\n  // 点击注册按钮\r\n  const registerAccount = useCallback(() => {\r\n    if (!usernameValidator(username)) {\r\n      dispatch(globalEffects.pushNotification({\r\n        type: NotificationType.WARN,\r\n        title: '用户名格式错误',\r\n        detail: '请输入4到16位（字母，数字，下划线，减号）',\r\n      }));\r\n      setIsUsernameError(true);\r\n    } else if (!passwordValidator(password)) {\r\n      dispatch(globalEffects.pushNotification({\r\n        type: NotificationType.WARN,\r\n        title: '密码格式错误',\r\n        detail: '请输入4到16位（字母，数字，下划线，减号）',\r\n      }));\r\n      setIsPassWordInputError(true);\r\n    } else {\r\n      dispatch(userEffects.register(username, password));\r\n    }\r\n  }, [username, password, setIsUsernameError, setIsPassWordInputError, dispatch]);\r\n\r\n  // 判断是否已经登录\r\n  const isLoinged = useIsLogined();\r\n  if (isLoinged) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Grow in={!isExiting} onExited={backToPrevPage}>\r\n      <div className=\"register-page\">\r\n        <Header onBack={startExitTransition} title=\"注册\" />\r\n        <div className=\"login-area\">\r\n          <form>\r\n          <TextField\r\n            fullWidth\r\n            placeholder=\"请输入4到16位（字母，数字，下划线，减号）\"\r\n            error={isUsernameError}\r\n            value={username}\r\n            onChange={updatePhoneNumber}\r\n            type=\"text\"\r\n            label=\"用户名\"\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n          placeholder=\"请输入4到16位（字母，数字，下划线，减号）\"\r\n            error={isPassWordInputError}\r\n            value={password}\r\n            onChange={updatePassword}\r\n            fullWidth\r\n            type=\"text\"\r\n            label=\"密码\"\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button onClick={registerAccount} fullWidth variant=\"outlined\">\r\n            注册\r\n          </Button>\r\n      </form>\r\n        </div>\r\n      </div>\r\n    </Grow>\r\n  );\r\n}\r\n","import React from 'react';\n\nimport BasicLayout from '../BasicLayout';\nimport NavBar from '../../component/NavBar';\nimport AsideMenu from '../../component/AsideMenu';\n\nimport './index.scss';\n\nexport default function DefaultLayout({ children }: { children: any }) {\n  return (\n    <BasicLayout>\n      <div className=\"default-layout\">\n        <div className=\"default-layout-content\">\n          {children}\n        </div>\n        <NavBar />\n      </div>\n      <AsideMenu />\n    </BasicLayout>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport routes from './routes';\ninterface IRoute {\n  path: string;\n  component: (...args: any[]) => JSX.Element;\n  layout?: (...args: any[]) => JSX.Element;\n  children?: IRoute[];\n}\n\nfunction generateRoutes(routes?: IRoute[]) {\n  if (routes == null || routes.length === 0) return null;\n  return (\n    <Switch>\n      {routes.map((route, index) => {\n        const { layout: Layout, component: Component } = route;\n        if (Layout == null)\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              render={() => <Component>{generateRoutes(route.children)}</Component>}\n            ></Route>\n          );\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            render={() => (\n              <Layout>\n                <Component>{generateRoutes(route.children)}</Component>\n              </Layout>\n            )}\n          ></Route>\n        );\n      })}\n    </Switch>\n  );\n}\n\nexport const AppRoute = () => generateRoutes(routes);\n","import React, { useEffect } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport store from './store';\nimport './App.scss';\nimport { userEffects, projectEffects } from './store/effects';\nimport { AppRoute } from './route';\n// import { IReduxState } from './store/reducers';\n// import { useShallowEqualSelector } from './util/hooks';\nimport { getLocalJWT } from './util/helper';\nimport { useIsLogined } from './hook';\n\n// const appSelector = ({ user: {user} }: IReduxState) => ({\n//   isLogined: user !== null,\n// });\n\nfunction App() {\n\n  const isLogined = useIsLogined();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isLogined) {\n      const jwt = getLocalJWT();\n      if (jwt != null && jwt !== '') {\n        dispatch(userEffects.login());\n      }\n    } else {\n      dispatch(projectEffects.getProjects());\n    }\n  }, [dispatch, isLogined]);\n\n  return (\n    <div className=\"app\">\n      <HashRouter>\n        <AppRoute />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default function AppWrapper() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './asset/style/index.scss';\nimport { IS_DEV } from './util/constants';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n\nif (IS_DEV) {\n  console.log('开发模式');\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}