{"version":3,"sources":["store/tasks/actionTypes.js","store/tasks/actions.js","store/global/actionTypes.js","store/global/actions.js","store/editingTask/actionTypes.js","store/editingTask/actions.js","store/effect/actionTypes.js","store/effect/actions.js","store/user/actionTypes.js","store/user/actions.js","utils/constants.js","containers/CompleteTaskButtonContainer.jsx","containers/EdtingTaskButtonContainer.jsx","containers/AppBarContainer/index.jsx","components/List.jsx","components/TaskList.jsx","store/global/reducer.js","utils/index.js","store/tasks/reducer.js","env.js","store/editingTask/reducer.js","store/user/reducer.js","store/reducer.js","utils/request.js","config.js","store/user/saga.js","store/effect/sagas.js","store/tasks/saga.js","store/editingTask/saga.js","store/global/sagas.js","store/rootSaga.js","store/index.js","hooks/helper.js","hooks/index.js","containers/TaskListContainer.jsx","components/MenuList.jsx","components/TextInput.jsx","containers/MenuListContainer/index.jsx","components/Drawer.jsx","components/mask.jsx","containers/SideMenuContainer/index.jsx","components/NotFound.jsx","components/Checkbox.jsx","components/TaskItemList.jsx","containers/TodoListContainer/index.jsx","components/PinnedTaskList.jsx","components/RecentTaskList.jsx","containers/HomeContainer.jsx","containers/EditingTaskPageContainer.jsx","components/LoginArea.jsx","components/RegisterArea.jsx","components/LoginStatus.jsx","containers/AccountManagerContainer.jsx","containers/NotificationsPanelContainer.jsx","Layout/Index/index.jsx","containers/InitWrapperContainer.jsx","App.jsx","index.js"],"names":["CHANGE_TASKS","ADD_TASK_TO_TASKS","REMOVE_TASK_IN_TASKS","CHANGE_CURRENT_TODO_TASK","CHANGE_CURRENT_TODO_TASK_BY_ID","CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID","TOGGLE_TASK_ITEM_CHECKED","UPDATE_TASK_IN_TASKS","EFFECT_GET_TASK_LIST","EFFECT_DELETE_TASK","EFFECT_GET_TASK","changeTasks","$tasks","type","actionTypes","payload","addTaskToTasks","task","removeTaskInTasks","changeCurrentTodoTask","$task","changeCurrentTodoTaskById","taskId","checkTaskItemInTaskItemsByTaskId","toggleTaskItemPropChecked","$taskItem","updateTaskInTasks","effectGetTaskList","effectDeleteTask","effectGetTask","SHOW_SIDE_MENU","HIDE_SIDE_MENU","SHOW_ACCOUNT_MANAGER","HIDE_ACCOUNT_MANAGER","ADD_ONE_NOTIFICATION","REMOVE_THE_TOP_NOTIFICATION","showSideMenu","hideSideMenu","showAccountManager","hideAccountManager","addOneNitification","info","removeTheTopNitification","CHANGE_CURRENT_TASK","ADD_TASK_ITEM_IN_CURRENT_TASK","REMOVE_TASK_ITEM_IN_CURRENT_TASK","SNAPSHOT_CURRENT_TASK","UNDO_CURRENT_TASK","REDO_CURRENT_TASK","CLEAR_FUTURE_TASKS","CLEAR_EDITNG_HISTORY","EFFECT_UPDATE_TASK","changeCurrentTask","addTaskItemInCurrentTask","removeTaskItemInCurrentTask","undoCurrentTask","redoCurrentTask","snapshotCurrentTask","clearFutureTasks","clearAllEdtingHistory","effectUpdateTask","EFFECT_CREATE_TASK","createTask","updateTask","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REGISTER_SUCCESS","REGISTER_FAIL","EFFECT_GET_USERINFO","EFFECT_LOGIN","EFFECT_REGISTER","loginSuccess","$loginInfo","loginFail","err","logout","registerSuccess","$registerInfo","registerFail","effectGetUserInfo","effectLogin","userInfo","effectRegister","COLOR_GREEN","COLOR_ORANGE","CompleteTaskButton","props","buttonText","buttonColor","$tasksItemsEntity","$tasksItemsRefs","dispatch","history","$unchckedTaskItems","useMemo","filter","getIn","map","get","numOfAllTaskItem","size","numOfCheckedItem","isAllComleted","hasZeroTaskItem","onClickCompleteButton","useCallback","push","concat","taskActions","react_default","a","createElement","Button","style","flex","backgroundColor","color","transition","aria-label","onClick","defaultProps","List","Map","connect","$state","$editingTask","$futureTasks","$oldTasks","withRouter","isUndoBtnDisabled","isRedoBtnDisabled","undoEditing","editingTaskActions","redoEditing","ButtonGroup","fullWidth","variant","disabled","StartOneTaskButton","AppBarContainer","onClickMenuButton","onClickStartOneTaskButton","onClickHomeButton","AppBar","position","Toolbar","IconButton","edge","Menu_default","react_router","path","component","EdtingTaskButtonContainer","CompleteTaskButtonContainer","render","AppBarContainer_StartOneTaskButton","Home_default","$currentTaskItems","ListWrapper","title","children","subsubheader","ListSubheader","id","width","subheader","renderTask","_ref","onClickTask","onClickEditTaskButton","onClickRemoveTaskButton","isEditable","CSSTransition","key","timeout","classNames","ListItem","height","button","ListItemText","primary","Fragment","evt","BorderColor_default","DeleteForever_default","TaskList","onClickSwitchButton","withStopEvtPropagation","callback","stopPropagation","_len","arguments","length","args","Array","_key","apply","subHeader","display","justifyContent","alignItems","className","Typography","Switch","checked","components_List","Divider","TransitionGroup","console","log","defaultState","fromJS","notifications","globalReducer","state","undefined","action","_action$type","_action$payload","Error","set","rawInfo","shift","uniqueId","count","timestamp","Date","now","toString","prefix","ramdomNumsStr","String","Math","round","random","withStopEventtPropagation","func","stopEventPropagation","normalize","arr","name","result","entity","refs","forEach","oriObj","identityKey","denormalize","obj","entityName","refsName","ref","getLocalJWT","localStorage","getItem","setLocalJWT","jwt","setItem","host","tasks","currentTodoTask","TasksReducer","tasksEntity","tasksRefs","tasksTobeChangedTo","newTask","merge","targetId","delete","todoTask","propPath","setIn","userActionTypes","clear","currentTask","futureTasks","oldTasks","editingTaskReducer","taskItems","taskItemsEntity","taskItemsRefs","tid","oldTask","last","pop","futureTask","hasLogin","isLogining","isRegistering","userReducer","effectActionTypes","loginInfo","reducers","combineReducers","global","tasksReducer","editingTask","user","isDev","location","some","hs","includes","request","Axios","create","baseURL","interceptors","use","config","changedConfig","headers","Authorization","Promise","reject","response","errorResp","data","getUserInfo","login","register","regenerator_default","wrap","_context","prev","next","call","sent","put","userActions","t0","error","stop","_marked","_ref2","loginResp","_loginResp$user","userInfoResp","token","rest","_context2","post","Object","objectWithoutProperties","objectSpread","globalActions","_marked2","_ref3","registerResp","_registerResp$user","_context3","message","_marked3","saga","takeEvery","takeLatest","get$TaskById","updateTaskBy$task","rawTask","items","errorInfo","abrupt","sagas_marked","_$task$toJS","updatedTask","updatedItems","updatedRest","$updatedTask","toJS","sagas_marked2","getTaskList","deleteTaskById","get$TaskThenChangeAndUpdate","rowTaskList","saga_marked","saga_marked2","_ref4","saga_marked3","tasks_saga","taskActionTypes","updateTaskThenSyncInTasks","get$TaskThenChange","editingTask_saga_marked","editingTask_saga_marked2","editingTask_saga","editingTaskActionTypes","removeTheTopNotificationAfterWhile","ms","resolve","setTimeout","global_sagas_marked","sagas","globalActionTypes","mySaga","taskResp","rootSaga_marked","all","toConsumableArray","userSagas","taskSagas","editingTaskSagas","globalSagas","rootSaga_marked2","store","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","rootSaga","$global","$tasksEntity","$tasksRefs","$taskList","isOnline","_useState","useState","navigator","onLine","_useState2","slicedToArray","setIsOnline","onlineListener","offlineListener","useEffect","addEventListener","removeEventListener","useIsOnline","setIsEditable","toggleIsEditable","prevFlag","components_TaskList","MenuList","React","Children","node","index","TextInput","onEnter","onKeyEnterUp","_evt$keyCode","keyCode","TextField","assign","onKeyUp","newTaskTitle","setNewTaskTitle","handleCreateTaskInputChange","target","value","handleEnterUp","trim","effectActions","handleClickLoginBtn","components_MenuList","components_TextInput","label","onChange","margin","Drawer","show","in","appear","mountOnEnter","unmountOnExit","maxWidth","overflowY","overflowX","opacity","zIndex","Mask","role","top","left","onClickSideMenuMask","mask","components_Drawer","containers_TaskListContainer","containers_MenuListContainer","NotFound","time","isTimeout","setIsTimeout","_useState3","_useState4","seconds","setSeconds","timeoutId","intervalId","setInterval","clearTimeout","clearInterval","to","padding","Checkbox","es_checkbox","TaskItemList","onCreateNewTaskItem","onClickRemoveButton","onClickCheckbox","newTaskItemTitle","setNewTaskItemTitle","onInputNewTaskItem","keyUp","taksItemTitle","dense","gutterBottom","taskItemId","$item","components_Checkbox","Input","placeholder","TodoListContainer","match","params","$currentTodoTask","components_NotFound","components_TaskItemList","PinnedTaskList","onClickIconButton","onClickIconButtonWithStopEvtPropagation","Star_default","RecentTaskList","StarBorder_default","HomeContainer","$recentTasks","sort","$taskA","$taskB","taskATime","$pinnedTasks","pinOneTask","$pinndTask","unpinOneTask","$unpinndTask","components_PinnedTaskList","components_RecentTaskList","$recentTaskIds","$pinnedTaskIds","EditingTaskPageContainer","$currentEditingTask","isTaskLoaded","setIsTaskLoaded","isTaskTaskChanged","setIsTaskTaskChanged","$newTaskItem","LoginArea","_React$useState","_React$useState2","username","setUsername","_React$useState3","_React$useState4","password","setPassword","handleInputUsername","handleInputPassword","onLogin","handleClickButton","isDisabled","RegisterArea","onRegister","UserInfo","$userInfo","usernamePattern","passwordPattern","AccountManagerContainer","tabIndex","setTabIndex","handleClickMask","handleTabChange","tabIndexChangedTo","handleLogin","_userInfo$username","_userInfo$password","test","handleRegister","_userInfo$username2","_userInfo$password2","handleClickLogoutButton","tabContentItems","components_LoginArea","components_RegisterArea","boxSizing","Paper","LoginStatus","Tabs","indicatorColor","textColor","centered","Tab","TYPE_COLOR_MAPPING","success","warn","Notification","subtitle","iconStyle","borderRadius","overflow","icon","PriorityHigh_default","Clear_default","Done_default","Card","CardHeader","avatar","NotificationsPanelContainer","$notifications","_ref$detail","detail","_ref$type","marginTop","Index","flexFlow","containers_NotificationsPanelContainer","containers_AppBarContainer","containers_SideMenuContainer","containers_AccountManagerContainer","InitWrapperContainer","propTypes","PropTypes","bool","isRequired","App","es","containers_InitWrapperContainer","react_router_dom","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b439f268.chunk.js","sourcesContent":["/* eslint-disable operator-linebreak */\n\nexport const CHANGE_TASKS = 'tasks/CHANGE_TASKS';\n\nexport const ADD_TASK_TO_TASKS = 'tasks/ADD_TASK_TO_TASKS';\n\nexport const REMOVE_TASK_IN_TASKS = 'tasks/REMOVE_TASK_IN_TASKS';\n\nexport const CHANGE_CURRENT_TODO_TASK = 'tasks/CHANGE_CURRENT_TODO_TASK';\n\nexport const CHANGE_CURRENT_TODO_TASK_BY_ID =\n  'tasks/CHANGE_CURRENT_TODO_TASK_BY_ID';\n\n// -- task item\n\n// export const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX =\n//   'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX';\n\nexport const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID =\n  'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID';\n\nexport const TOGGLE_TASK_ITEM_CHECKED = 'tasks/TOGGLE_TASK_ITEM_CHECKED';\n\n// editing task\n\n// export const UPDARE_TASK_FROM_EDTING = 'tasks/UPDARE_TASK_FROM_EDTING';\n\nexport const UPDATE_TASK_IN_TASKS = 'tasks/UPDATE_TASK_IN_TASKS';\n\n// effect\n\nexport const EFFECT_GET_TASK_LIST = 'tasks/EFFECT_GET_TASK_LIST';\n\nexport const EFFECT_DELETE_TASK = 'tasks/EFFECT_DELETE_TASK';\n\nexport const EFFECT_GET_TASK = 'tasks/EFFECT_GET_TASK';\n\n// export const EFFECT_UPDATE_TASK = 'tasks/EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\nexport const changeTasks = ($tasks) => ({\n  type: actionTypes.CHANGE_TASKS,\n  payload: $tasks,\n});\n\nexport const addTaskToTasks = (task) => ({\n  type: actionTypes.ADD_TASK_TO_TASKS,\n  payload: task,\n});\n\nexport const removeTaskInTasks = (task) => ({\n  type: actionTypes.REMOVE_TASK_IN_TASKS,\n  payload: task,\n});\n\nexport const changeCurrentTodoTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK,\n  payload: $task,\n});\n\nexport const changeCurrentTodoTaskById = (taskId) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID,\n  payload: taskId,\n});\n\n// -- task item\n\n// export const checkTaskItemInTaskItemsByIndex = (index) => ({\n//   type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX,\n//   payload: index,\n// });\n\nexport const checkTaskItemInTaskItemsByTaskId = (taskId) => ({\n  type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID,\n  payload: taskId,\n});\n\nexport const toggleTaskItemPropChecked = ($taskItem) => ({\n  type: actionTypes.TOGGLE_TASK_ITEM_CHECKED,\n  payload: $taskItem,\n});\n\n// edting task\n\n// export const updateTaskFromEdting = ($task) => ({\n//   type: actionTypes.UPDARE_TASK_FROM_EDTING,\n//   payload: $task,\n// });\n\nexport const updateTaskInTasks = ($task) => ({\n  type: actionTypes.UPDATE_TASK_IN_TASKS,\n  payload: $task,\n});\n\n// effect\n\nexport const effectGetTaskList = () => ({\n  type: actionTypes.EFFECT_GET_TASK_LIST,\n});\n\nexport const effectDeleteTask = (taskId) => ({\n  type: actionTypes.EFFECT_DELETE_TASK,\n  payload: taskId,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n\n// export const effectUpdateTask = ($task) => ({\n//   type: actionTypes.EFFECT_UPDATE_TASK,\n//   payload: $task,\n// });\n","export const SHOW_SIDE_MENU = 'global/SHOW_SIDE_MENU';\n\nexport const HIDE_SIDE_MENU = 'global/HIDE_SIDE_MENU';\n\nexport const SHOW_ACCOUNT_MANAGER = 'SHOW_ACCOUNT_MANAGER';\n\nexport const HIDE_ACCOUNT_MANAGER = 'HIDE_ACCOUNT_MANAGER';\n\nexport const ADD_ONE_NOTIFICATION = 'ADD_ONE_NOTIFICATION';\n\nexport const REMOVE_THE_TOP_NOTIFICATION = 'REMOVE_THE_TOP_NOTIFICATION';\n\n// export const CHANGE_CURRENT_PATH = 'global/CHANGE_CURRENT_PATH';\n","import * as actionTypes from './actionTypes';\n\nexport const showSideMenu = () => ({\n  type: actionTypes.SHOW_SIDE_MENU,\n});\n\nexport const hideSideMenu = () => ({\n  type: actionTypes.HIDE_SIDE_MENU,\n});\n\nexport const showAccountManager = () => ({\n  type: actionTypes.SHOW_ACCOUNT_MANAGER,\n});\n\nexport const hideAccountManager = () => ({\n  type: actionTypes.HIDE_ACCOUNT_MANAGER,\n});\n\n/**\n *\n * @param {{\n *  title: string;\n *  message?: string;\n *  type: 'warn' | 'error' | 'success';\n *  key: string;\n * }} info\n */\nexport const addOneNitification = (info) => ({\n  type: actionTypes.ADD_ONE_NOTIFICATION,\n  payload: info,\n});\n\nexport const removeTheTopNitification = () => ({\n  type: actionTypes.REMOVE_THE_TOP_NOTIFICATION,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","/* eslint-disable operator-linebreak */\nexport const CHANGE_CURRENT_TASK = 'editingTask/CHANGE_CURRENT_TASK';\n\nexport const ADD_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/ADD_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const REMOVE_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/REMOVE_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const SNAPSHOT_CURRENT_TASK = 'editingTask/SNAPSHOT_CURRENT_TASK';\n\nexport const UNDO_CURRENT_TASK = 'editingTask/UNDO_CURRENT_TASK';\n\nexport const REDO_CURRENT_TASK = 'editingTask/REDO_CURRENT_TASK';\n\nexport const CLEAR_FUTURE_TASKS = 'editingTask/CLEAR_FUTURE_TASKS';\n\nexport const CLEAR_EDITNG_HISTORY = 'editingTask/CLEAR_EDITNG_HISTORY';\n\n// effect\n\nexport const EFFECT_UPDATE_TASK = 'editingtask/EFFECT_UPDATE_TASK';\n\nexport const EFFECT_GET_TASK = 'editingTask/EFFECT_GET_TASK';\n","/* eslint-disable arrow-parens */\nimport * as actionTypes from './actionTypes';\n\nexport const changeCurrentTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TASK,\n  payload: $task,\n});\n\nexport const addTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const removeTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const undoCurrentTask = () => ({\n  type: actionTypes.UNDO_CURRENT_TASK,\n});\n\nexport const redoCurrentTask = () => ({\n  type: actionTypes.REDO_CURRENT_TASK,\n});\n\nexport const snapshotCurrentTask = () => ({\n  type: actionTypes.SNAPSHOT_CURRENT_TASK,\n});\n\nexport const clearFutureTasks = () => ({\n  type: actionTypes.CLEAR_FUTURE_TASKS,\n});\n\nexport const clearAllEdtingHistory = () => ({\n  type: actionTypes.CLEAR_EDITNG_HISTORY,\n});\n\n// effect\n\nexport const effectUpdateTask = ($task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: $task,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n","// export const EFFECT_LOGIN = 'EFFECT_LOGIN';\n\n// export const EFFECT_REGISTER = 'EFFECT_REGISTER';\n\nexport const EFFECT_CREATE_TASK = 'EFFECT_CREATE_TASK';\n\nexport const EFFECT_UPDATE_TASK = 'EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\n// export const login = (userInfo) => ({\n//   type: actionTypes.EFFECT_LOGIN,\n//   payload: userInfo,\n// });\n\n// export const register = (userInfo) => ({\n//   type: actionTypes.EFFECT_REGISTER,\n//   payload: userInfo,\n// });\n\nexport const createTask = (task) => ({\n  type: actionTypes.EFFECT_CREATE_TASK,\n  payload: task,\n});\n\nexport const updateTask = (task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: task,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n// effect\n\nexport const EFFECT_GET_USERINFO = 'EFFECT_GET_USERINFO';\n\nexport const EFFECT_LOGIN = 'EFFECT_LOGIN';\n\nexport const EFFECT_REGISTER = 'EFFECT_REGISTER';\n","import * as actionTypes from './actionTypes';\n\nexport const loginSuccess = ($loginInfo) => ({\n  type: actionTypes.LOGIN_SUCCESS,\n  payload: $loginInfo,\n});\n\nexport const loginFail = (err) => ({\n  type: actionTypes.LOGIN_FAIL,\n  payload: err,\n});\n\nexport const logout = () => ({\n  type: actionTypes.LOGOUT,\n});\n\nexport const registerSuccess = ($registerInfo) => ({\n  type: actionTypes.REGISTER_SUCCESS,\n  payload: $registerInfo,\n});\n\nexport const registerFail = (err) => ({\n  type: actionTypes.REGISTER_FAIL,\n  payload: err,\n});\n\n// effect\n\nexport const effectGetUserInfo = () => ({\n  type: actionTypes.EFFECT_GET_USERINFO,\n});\n\nexport const effectLogin = (userInfo) => ({\n  type: actionTypes.EFFECT_LOGIN,\n  payload: userInfo,\n});\n\nexport const effectRegister = (userInfo) => ({\n  type: actionTypes.EFFECT_REGISTER,\n  payload: userInfo,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","export const COLOR_BLUE = '#2196f3';\n\nexport const COLOR_GREEN = '#43a047';\n\nexport const COLOR_YELLOW = '#fdd835';\n\nexport const COLOR_GREY = '#9e9e9e';\n\nexport const COLOR_ORANGE = '#ff5722';\n\nexport const COLOR_RED = '#f44336';\n\nexport const ROOT_URL = '/monica/';\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { List, Map } from 'immutable';\n\nimport { COLOR_ORANGE, COLOR_GREEN, COLOR_RED } from '../utils/constants';\nimport { taskActions } from '../store/actions';\n\nconst CompleteTaskButton = (props) => {\n  const {\n    $task,\n    $tasksItemsEntity,\n    $tasksItemsRefs,\n    dispatch,\n    history,\n  } = props;\n\n  const $unchckedTaskItems = useMemo(\n    () =>\n      $tasksItemsRefs\n        .filter((taskId) => !$tasksItemsEntity.getIn([taskId, 'checked']))\n        .map((taskId) => $tasksItemsEntity.get(taskId)),\n    [$tasksItemsEntity, $tasksItemsRefs],\n  );\n  const numOfAllTaskItem = $tasksItemsRefs.size;\n  const numOfUncheckedItem = $unchckedTaskItems.size;\n  const numOfCheckedItem = numOfAllTaskItem - numOfUncheckedItem;\n  const isAllComleted = numOfAllTaskItem === numOfCheckedItem;\n  const hasZeroTaskItem = numOfAllTaskItem === 0;\n  const onClickCompleteButton = useCallback(() => {\n    if (hasZeroTaskItem) {\n      // 零个可完成任务项，提供跳转到编辑页面的快速方式\n      history.push(`/edit/${$task.get('id')}`);\n    } else if (isAllComleted) {\n      /* 所有任务项全部完成，跳转到APP主页 */\n      history.push('/');\n    } else {\n      dispatch(\n        taskActions.checkTaskItemInTaskItemsByTaskId(\n          $unchckedTaskItems.getIn(['0', 'id']),\n        ),\n      );\n    }\n  }, [\n    $task,\n    hasZeroTaskItem,\n    isAllComleted,\n    $unchckedTaskItems,\n    history,\n    dispatch,\n  ]);\n\n  let buttonText;\n  let buttonColor;\n  if (hasZeroTaskItem) {\n    buttonText = '添加任务项';\n    buttonColor = COLOR_RED;\n  } else if (isAllComleted) {\n    buttonText = `全部完成(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_GREEN;\n  } else {\n    buttonText = `完成一个任务项(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_ORANGE;\n  }\n\n  return (\n    <Button\n      style={{\n        flex: '1',\n        backgroundColor: buttonColor,\n        color: '#fff',\n        transition: 'background-color 300ms',\n      }}\n      size=\"medium\"\n      aria-label=\"add\"\n      onClick={onClickCompleteButton}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nCompleteTaskButton.propTypes = {\n  $tasksItemsEntity: Proptypes.instanceOf(Map),\n  $tasksItemsRefs: Proptypes.instanceOf(List),\n  $task: Proptypes.instanceOf(Map),\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n};\n\nCompleteTaskButton.defaultProps = {\n  $tasksItemsRefs: new List(),\n  $tasksItemsEntity: new Map(),\n  $task: null,\n};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $tasksItemsEntity: $task.getIn(['currentTodoTask', 'items', 'entity']),\n    $tasksItemsRefs: $task.getIn(['currentTodoTask', 'items', 'refs']),\n    $task: $task.get('currentTodoTask'),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(CompleteTaskButton);\n","import React, { useCallback } from 'react';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router-dom';\nimport { List } from 'immutable';\nimport { editingTaskActions } from '../store/actions';\n\nconst EdtingTaskButtonContainer = (props) => {\n  const { $futureTasks, $oldTasks, dispatch } = props;\n  const isUndoBtnDisabled = $oldTasks.size === 0;\n  const isRedoBtnDisabled = $futureTasks.size === 0;\n\n  const undoEditing = useCallback(() => {\n    dispatch(editingTaskActions.undoCurrentTask());\n  }, [dispatch]);\n\n  const redoEditing = useCallback(() => {\n    dispatch(editingTaskActions.redoCurrentTask());\n  }, [dispatch]);\n\n  return (\n    <ButtonGroup fullWidth variant=\"outlined\">\n      <Button onClick={undoEditing} disabled={isUndoBtnDisabled}>\n        Undo\n      </Button>\n      <Button onClick={redoEditing} disabled={isRedoBtnDisabled}>\n        Redo\n      </Button>\n    </ButtonGroup>\n  );\n};\nEdtingTaskButtonContainer.propTypes = {\n  $futureTasks: Proptypes.instanceOf(List).isRequired,\n  $oldTasks: Proptypes.instanceOf(List).isRequired,\n  dispatch: Proptypes.func.isRequired,\n  // isEditingTaskEdited: Proptypes.bool.isRequired,\n};\n\nconst mapState = ($state) => {\n  const $editingTask = $state.get('editingTask');\n  return {\n    $futureTasks: $editingTask.get('futureTasks'),\n    $oldTasks: $editingTask.get('oldTasks'),\n  };\n};\nexport default connect(\n  mapState,\n  null,\n)(withRouter(EdtingTaskButtonContainer));\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\n// import MoreIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n\nimport { showSideMenu } from '../../store/actions';\nimport { COLOR_BLUE } from '../../utils/constants';\nimport CompleteTaskButtonContainer from '../CompleteTaskButtonContainer';\n\nimport EdtingTaskButtonContainer from '../EdtingTaskButtonContainer';\n\nconst StartOneTaskButton = (props) => {\n  const { onClick } = props;\n  return (\n    <Button\n      style={{ backgroundColor: COLOR_BLUE, color: '#fff' }}\n      size=\"medium\"\n      fullWidth\n      // variant=\"outlined\"\n      color=\"primary\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'开始一项任务'}\n    </Button>\n  );\n};\n\nStartOneTaskButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n};\n\nfunction AppBarContainer(props) {\n  const { dispatch, history } = props;\n  const onClickMenuButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickStartOneTaskButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickHomeButton = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n        flex: '0 0 60px',\n      }}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <Switch>\n          <Route path=\"/edit/:id\" component={EdtingTaskButtonContainer} />\n          <Route path=\"/todo\" component={CompleteTaskButtonContainer} />\n          <Route\n            render={() => (\n              <StartOneTaskButton onClick={onClickStartOneTaskButton} />\n            )}\n          />\n        </Switch>\n\n        <IconButton onClick={onClickHomeButton} edge=\"end\">\n          <HomeIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\nAppBarContainer.propTypes = {\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n  // $currentTaskItems: Proptypes.instanceOf(List),\n};\n\nAppBarContainer.defaultProps = {\n  // $currentTaskItems: new List(),\n};\n\nconst mapState = ($state) => ({\n  $currentTaskItems: $state.getIn(['global', '$currentTask', '$items']),\n});\nexport default connect(\n  mapState,\n  null,\n)(withRouter(AppBarContainer));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PropTypes from 'prop-types';\n\nfunction ListWrapper(props) {\n  const { title, children } = props;\n\n  const subsubheader = title === '' ? null : (\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n      {title}\n    </ListSubheader>\n  );\n\n  return (\n    <div>\n      <List\n        style={{\n          width: '100%',\n        }}\n        component=\"nav\"\n        // aria-label=\"secondary mailbox folders\"\n        subheader={subsubheader}\n      >\n        {children}\n      </List>\n    </div>\n  );\n}\n\nListWrapper.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nListWrapper.defaultProps = {\n  title: '',\n  children: <div>default props</div>,\n};\n\nexport default ListWrapper;\n","import React, { useCallback } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch as SwitchButton,\n  Typography,\n} from '@material-ui/core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\n/* eslint-disable */\nconst renderTask = ({\n  $task,\n  onClickTask,\n  onClickEditTaskButton,\n  onClickRemoveTaskButton,\n  isEditable,\n}) => (\n  <CSSTransition key={$task.get('id')} timeout={300} classNames=\"ani-fade\">\n    <ListItem style={{ height: '48px' }} onClick={() => onClickTask($task)} button={!isEditable}>\n      <ListItemText primary={$task.get('title')} />\n      {isEditable ? (\n        <React.Fragment>\n          <IconButton onClick={(evt) => onClickEditTaskButton(evt, $task)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton onClick={(evt) => onClickRemoveTaskButton(evt, $task)}>\n            <DeleteIcon />\n          </IconButton>\n        </React.Fragment>\n      ) : null}\n    </ListItem>\n  </CSSTransition>\n);\n/* eslint-enable */\n\nfunction TaskList(props) {\n  const {\n    onClickTask,\n    onClickEditTaskButton,\n    onClickRemoveTaskButton,\n    $tasks,\n    isEditable,\n    onClickSwitchButton,\n  } = props;\n\n  const withStopEvtPropagation = useCallback(\n    callback => (evt, ...args) => {\n      evt.stopPropagation();\n      callback(...args);\n    },\n    [],\n  );\n\n  const subHeader = (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"left\">\n        <Typography>任务列表</Typography>\n      </div>\n      <div className=\"right\">\n        <Typography>\n          {'编辑'}\n          <SwitchButton onClick={onClickSwitchButton} checked={isEditable} color=\"primary\" />\n        </Typography>\n      </div>\n    </div>\n  );\n\n  return (\n    <List title={subHeader}>\n      <Divider />\n      <TransitionGroup className=\"transition-fade\">\n        {$tasks.map($task => renderTask({\n          $task,\n          isEditable,\n          onClickTask,\n          onClickRemoveTaskButton: withStopEvtPropagation(onClickRemoveTaskButton),\n          onClickEditTaskButton: withStopEvtPropagation(onClickEditTaskButton),\n        }))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickTask: PropTypes.func,\n  onClickRemoveTaskButton: PropTypes.func,\n  onClickEditTaskButton: PropTypes.func,\n  onClickSwitchButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  // children: PropTypes.element\n};\n\nTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickRemoveTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickRemoveTaskButton');\n  },\n  onClickEditTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickEditTaskButton');\n  },\n  onClickSwitchButton: () => {\n    /*eslint-disable*/\n    console.log('onClickSwitchButton');\n  },\n  isEditable: false,\n  // children: <div>default menu content</div>\n};\n\nexport default TaskList;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  showSideMenu: false,\n  showAccountManager: false,\n  notifications: [], // 存储原生js的对象，非immutable\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst globalReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  // const { type = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.SHOW_SIDE_MENU: {\n      return state.set('showSideMenu', true);\n    }\n    case actionTypes.HIDE_SIDE_MENU: {\n      return state.set('showSideMenu', false);\n    }\n    case actionTypes.SHOW_ACCOUNT_MANAGER: {\n      return state.set('showAccountManager', true);\n    }\n    case actionTypes.HIDE_ACCOUNT_MANAGER: {\n      return state.set('showAccountManager', false);\n    }\n    case actionTypes.ADD_ONE_NOTIFICATION: {\n      const rawInfo = payload;\n      return state.set('notifications', state.get('notifications').push(rawInfo));\n    }\n    case actionTypes.REMOVE_THE_TOP_NOTIFICATION: {\n      return state.set('notifications', state.get('notifications').shift());\n    }\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","// import { isDev } from '../env';\n\nexport const uniqueId = (function saveNextId() {\n  let count = -1;\n  const timestamp = Date.now().toString();\n  return function generatorOfUniqueId(prefix = '') {\n    count += 1;\n    const ramdomNumsStr = `${String(Math.round(Math.random() * 100000000))}-${String(Math.round(Math.random() * 100000000))}`;\n    const id = `${ramdomNumsStr}-${timestamp}-${count}`;\n    if (prefix.length === 0) return id;\n    return `${prefix}-${id}`;\n  };\n}());\n\n// export function deepCopy(obj) {\n//   return JSON.parse(JSON.stringify(obj));\n// }\n\nexport function withStopEventtPropagation(func) {\n  return (evt, ...args) => {\n    evt.stopPropagation();\n    return func(...args);\n  };\n}\n\nexport function stopEventPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n *\n * @param {Array} arr\n * @param {String} name\n * @param {String} key\n */\nexport function normalize(arr, name = 'entity', key = 'id') {\n  const result = {};\n  const entity = {};\n  const refs = [];\n  const refsName = 'refs';\n  result[name] = entity;\n  result[refsName] = refs;\n  arr.forEach((oriObj) => {\n    const identityKey = oriObj[key];\n    refs.push(identityKey);\n    entity[identityKey] = oriObj;\n  });\n  return result;\n}\n\nexport function denormalize(obj, entityName = 'entity', refsName = 'refs') {\n  const result = obj[refsName].map((ref) => obj[entityName][ref]);\n  return result;\n}\n\nexport function getLocalJWT() {\n  return localStorage.getItem('__jwt') || '';\n}\n\nexport function setLocalJWT(jwt) {\n  localStorage.setItem('__jwt', jwt);\n}\n// window.getLocalJWT = getLocalJWT;\n// window.setLocalJWT = setLocalJWT;\n","/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { normalize } from '../../utils';\nimport { userActionTypes } from '../actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  tasks: normalize([]),\n  currentTodoTask: null,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst TasksReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n  // 快捷访问方式\n  /** @type Map<String, any> */\n  const tasks = state.get('tasks');\n  /** @type Map<String, any> */\n  const tasksEntity = state.getIn(['tasks', 'entity']);\n  /** @type List<String> */\n  const tasksRefs = state.getIn(['tasks', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_TASKS: {\n      const tasksTobeChangedTo = payload;\n      return state.set('tasks', tasksTobeChangedTo);\n    }\n    case actionTypes.ADD_TASK_TO_TASKS: {\n      const { payload: newTask } = action;\n      const id = newTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.set(id, newTask),\n          refs: tasksRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_IN_TASKS: {\n      const targetTask = payload;\n      const targetId = targetTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.delete(targetId),\n          refs: tasksRefs.filter((id) => id !== targetId),\n        }),\n      );\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK: {\n      const todoTask = payload;\n      return state.set('currentTodoTask', todoTask);\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID: {\n      const id = payload;\n      return state.set('currentTodoTask', state.getIn(['tasks', 'entity', id]));\n    }\n\n    // editing task item\n\n    case actionTypes.TOGGLE_TASK_ITEM_CHECKED: {\n      const taskItem = payload;\n      const propPath = [\n        'currentTodoTask',\n        'items',\n        'entity',\n        taskItem.get('id'),\n        'checked',\n      ];\n      return state.setIn(propPath, !state.getIn(propPath));\n    }\n\n    // case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX: {\n    //   const taskItemIndex = payload;\n    //   const targetTaskItemId = state.getIn([\n    //     'currentTodoTask',\n    //     'items',\n    //     'refs',\n    //     taskItemIndex,\n    //   ]);\n    //   return state.setIn(\n    //     ['currentTodoTask', 'items', 'entity', targetTaskItemId, 'checked'],\n    //     true,\n    //   );\n    // }\n\n    case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID: {\n      const taskId = payload;\n      return state.setIn(\n        ['currentTodoTask', 'items', 'entity', taskId, 'checked'],\n        true,\n      );\n    }\n\n    // case actionTypes.UPDARE_TASK_FROM_EDTING: {\n    //   const task = payload;\n    //   const id = task.get('id');\n    //   return state.setIn(['tasks', 'entity', id], task);\n    // }\n    case actionTypes.UPDATE_TASK_IN_TASKS: {\n      const task = payload;\n      const id = task.get('id');\n      return state.setIn(['tasks', 'entity', id], task);\n    }\n\n    // user\n\n    case userActionTypes.LOGOUT: {\n      return state.set('tasks', state.get('tasks').merge({\n        entity: tasksEntity.clear(),\n        refs: tasksRefs.clear(),\n      }));\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default TasksReducer;\n","/**\n * @param {String} host\n */\nconst createIsDev = host => () => {\n  const hosts = ['localhost', '127.0.0.1'];\n  return hosts.some(hs => host.includes(hs));\n};\n\n// eslint-disable-next-line no-restricted-globals\nexport const isDev = createIsDev(location.host);\n// export const isDev = () => false;\nexport const foo = 'nothing';\n","/* eslint-disable arrow-parens */\n/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  currentTask: null,\n  futureTasks: [],\n  oldTasks: [],\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst editingTaskReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n\n  const taskItems = state.getIn(['currentTask', 'items']);\n  const taskItemsEntity = state.getIn(['currentTask', 'items', 'entity']);\n  const taskItemsRefs = state.getIn(['currentTask', 'items', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_CURRENT_TASK: {\n      const task = payload;\n      return state.set('currentTask', task);\n    }\n    case actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.set(id, $taskItem),\n          refs: taskItemsRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.delete(id),\n          refs: taskItemsRefs.filter((tid) => tid !== id),\n        }),\n      );\n    }\n    case actionTypes.UNDO_CURRENT_TASK: {\n      const oldTasks = state.get('oldTasks');\n      if (oldTasks.length !== 0) {\n        const futureTasks = state.get('futureTasks');\n        const currentTask = state.get('currentTask');\n        const oldTask = oldTasks.last();\n        return state.merge({\n          currentTask: oldTask,\n          futureTasks: futureTasks.push(currentTask),\n          oldTasks: oldTasks.pop(),\n        });\n      }\n      return state;\n    }\n    case actionTypes.REDO_CURRENT_TASK: {\n      const futureTasks = state.get('futureTasks');\n      if (futureTasks.length !== 0) {\n        const oldTasks = state.get('oldTasks');\n        const currentTask = state.get('currentTask');\n        const futureTask = futureTasks.last();\n        return state.merge({\n          currentTask: futureTask,\n          futureTasks: futureTasks.pop(),\n          oldTasks: oldTasks.push(currentTask),\n        });\n      }\n      return state;\n    }\n    case actionTypes.SNAPSHOT_CURRENT_TASK: {\n      const currentTask = state.get('currentTask');\n      if (currentTask != null) {\n        const oldTasks = state.get('oldTasks');\n        return state.set('oldTasks', oldTasks.push(currentTask));\n      }\n      return state;\n    }\n    case actionTypes.CLEAR_FUTURE_TASKS: {\n      return state.set('futureTasks', state.get('futureTasks').clear());\n    }\n    case actionTypes.CLEAR_EDITNG_HISTORY: {\n      return state.merge({\n        futureTasks: state.get('futureTasks').clear(),\n        oldTasks: state.get('oldTasks').clear(),\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default editingTaskReducer;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { effectActionTypes } from '../actionTypes';\nimport { setLocalJWT } from '../../utils';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  hasLogin: false,\n  userInfo: null,\n  isLogining: false,\n  isRegistering: false,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst userReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case effectActionTypes.EFFECT_LOGIN: {\n      return state.set('isLogining', true);\n    }\n    case effectActionTypes.EFFECT_REGISTER: {\n      return state.set('isRegistering', true);\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isLogining: false }, loginInfo);\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return state.set('isLogining', false);\n    }\n    case actionTypes.LOGOUT: {\n      setLocalJWT(''); // 清空本地jwt\n      return state.merge({\n        hasLogin: false,\n        userInfo: null,\n        isLogining: false,\n        isRegistering: false,\n      });\n    }\n    case actionTypes.REGISTER_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isRegistering: false }, loginInfo);\n    }\n    case actionTypes.REGISTER_FAIL: {\n      return state.set('isRegistering', false);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux-immutable';\n\nimport globalReducer from './global/reducer';\nimport tasksReducer from './tasks/reducer';\nimport editingTaskReducer from './editingTask/reducer';\nimport userReducer from './user/reducer';\n\n\nconst reducers = combineReducers({\n  global: globalReducer,\n  task: tasksReducer,\n  editingTask: editingTaskReducer,\n  user: userReducer,\n});\n\n/* eslint-disable */\n\nexport default reducers;\n","import Axios from 'axios';\nimport { getRemoteHostUrl } from '../config';\nimport { getLocalJWT, uniqueId } from '.';\n\nexport const request = Axios.create({\n  baseURL: getRemoteHostUrl(),\n  timeout: 1000,\n});\n\nexport const foo = ';';\n\nrequest.interceptors.request.use(\n  (config) => {\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return config;\n    const changedConfig = config;\n    changedConfig.headers.Authorization = `Bearer ${jwt}`;\n    return changedConfig;\n  },\n  (err) => Promise.reject(err),\n);\n\nrequest.interceptors.response.use(\n  (config) => config,\n  (err) => {\n    const { data: errorResp } = err.response;\n    errorResp.type = 'error';\n    errorResp.key = uniqueId('error');\n    return Promise.reject(errorResp);\n  },\n);\n","import { isDev } from \"./env\";\n\nexport function getRemoteHostUrl() {\n  if (isDev()) return 'http://localhost:3031/';\n  return 'http://101.37.174.138/';\n}\n","import {\n  call, put, takeEvery, takeLatest,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { userActionTypes } from '../actionTypes';\nimport { request } from '../../utils/request';\nimport { setLocalJWT, uniqueId } from '../../utils';\nimport { userActions, globalActions } from '../actions';\n\nfunction* getUserInfo() {\n  try {\n    const { data: userInfo } = yield call(request.get, '/users');\n    yield put(userActions.loginSuccess({\n      userInfo: fromJS(userInfo),\n    }));\n  } catch (err) {\n    console.error(err);\n    setLocalJWT('');\n  }\n}\n\nfunction* login(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: loginResp } = yield call(\n      request.post,\n      '/users/login',\n      userInfo,\n    );\n    const { user: userInfoResp = null, token, ...rest } = loginResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.loginSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '登陆成功',\n      key: uniqueId('notifi'),\n    }));\n  } catch (errResp) {\n    yield put(userActions.loginFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* register(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: registerResp } = yield call(request.post, '/users', userInfo);\n    const { user: userInfoResp = null, token, ...rest } = registerResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.registerSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '注册成功',\n      message: '已经为您自动登录应用',\n    }));\n  } catch (errResp) {\n    yield put(userActions.registerFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nexport default [\n  takeEvery(userActionTypes.EFFECT_GET_USERINFO, getUserInfo),\n  takeLatest(userActionTypes.EFFECT_REGISTER, register),\n  takeLatest(userActionTypes.EFFECT_LOGIN, login),\n];\n","// 在这里抽离出公共的saga函数\nimport { fromJS } from 'immutable';\n\nimport { call, put } from 'redux-saga/effects';\nimport { request } from '../../utils/request';\n\nimport { normalize, denormalize } from '../../utils';\nimport { globalActions } from '../actions';\n\nexport function* get$TaskById(taskId) {\n  try {\n    const { data: rawTask } = yield call(request.get, `/tasks/${taskId}`);\n    const { items, ...rest } = rawTask;\n    const $task = fromJS({\n      ...rest,\n      items: normalize(items),\n    });\n    return $task;\n  } catch (errResp) {\n    const { data: errorInfo } = errResp;\n    errorInfo.type = 'error';\n    errorInfo.title = '获取任务信息失败，你可能未登录或访问了他人的任务';\n    yield put(globalActions.addOneNitification(errorInfo));\n    return null;\n    // eslint-disable-next-line no-console\n    // throw err;\n  }\n}\n\nexport function* updateTaskBy$task($task) {\n  try {\n    const { items, ...rest } = $task.toJS();\n    const task = {\n      ...rest,\n      items: denormalize(items),\n      timestamp: Date.now(),\n    };\n    const { data: updatedTask } = yield call(\n      request.put,\n      `/tasks/${task.id}`,\n      task,\n    );\n    const { items: updatedItems, ...updatedRest } = updatedTask;\n    const $updatedTask = fromJS({\n      ...updatedRest,\n      items: normalize(updatedItems),\n    });\n\n    return $updatedTask;\n  } catch (errResp) {\n    const { data: errorInfo } = errResp;\n    errorInfo.type = 'error';\n    errorInfo.title = '编辑任务失败';\n    yield put(globalActions.addOneNitification(errorInfo));\n    return null;\n    // eslint-disable-next-line no-console\n    // throw err;\n  }\n}\n\nexport const foo = ' foo';\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { request } from '../../utils/request';\nimport { normalize } from '../../utils';\nimport { taskActions } from '../actions';\nimport { taskActionTypes } from '../actionTypes';\nimport { get$TaskById } from '../effect/sagas';\n\nfunction* getTaskList() {\n  try {\n    const { data: rowTaskList } = yield call(request.get, '/tasks');\n    const $tasks = fromJS(\n      normalize(\n        rowTaskList.map(({ items, ...rest }) => ({\n          ...rest,\n          items: fromJS(normalize(items)),\n        })),\n      ),\n    );\n    yield put(taskActions.changeTasks($tasks));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* deleteTaskById({ payload: taskId }) {\n  try {\n    yield call(request.delete, `/tasks/${taskId}`);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* get$TaskThenChangeAndUpdate({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(taskActions.changeCurrentTodoTask($task));\n  yield put(taskActions.updateTaskInTasks($task));\n}\n\n\nexport default [\n  takeEvery(taskActionTypes.EFFECT_GET_TASK_LIST, getTaskList),\n  takeEvery(taskActionTypes.EFFECT_DELETE_TASK, deleteTaskById),\n  takeEvery(taskActionTypes.EFFECT_GET_TASK, get$TaskThenChangeAndUpdate),\n];\n","import { call, takeEvery, put } from 'redux-saga/effects';\n\nimport { editingTaskActionTypes } from '../actionTypes';\nimport { taskActions, editingTaskActions } from '../actions';\nimport { get$TaskById, updateTaskBy$task } from '../effect/sagas';\n\nfunction* updateTaskThenSyncInTasks({ payload: $task }) {\n  const $updatedTask = yield call(updateTaskBy$task, $task);\n  if ($updatedTask == null) return;\n  yield put(taskActions.updateTaskInTasks($updatedTask));\n}\n\nfunction* get$TaskThenChange({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(editingTaskActions.changeCurrentTask($task));\n}\n\nexport default [\n  takeEvery(editingTaskActionTypes.EFFECT_UPDATE_TASK, updateTaskThenSyncInTasks),\n  takeEvery(editingTaskActionTypes.EFFECT_GET_TASK, get$TaskThenChange),\n];\n","import {\n  call, put, takeEvery,\n} from 'redux-saga/effects';\nimport { globalActionTypes } from '../actionTypes';\nimport { globalActions } from '../actions';\n\nconst timeout = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction* removeTheTopNotificationAfterWhile() {\n  yield call(timeout, 3000);\n  yield put(globalActions.removeTheTopNitification());\n}\n\nexport default [\n  takeEvery(\n    globalActionTypes.ADD_ONE_NOTIFICATION,\n    removeTheTopNotificationAfterWhile,\n  ),\n];\n","import {\n  call, put, takeEvery, all,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport { effectActionTypes } from './actionTypes';\nimport { request } from '../utils/request';\nimport { taskActions, globalActions } from './actions';\nimport { normalize } from '../utils';\n\nimport userSagas from './user/saga';\nimport taskSagas from './tasks/saga';\nimport editingTaskSagas from './editingTask/saga';\nimport globalSagas from './global/sagas';\n\n\n// function* login(action) {\n//   try {\n//     const { payload: userInfo } = action;\n//     const { data: loginResp } = yield call(\n//       request.post,\n//       '/users/login',\n//       userInfo,\n//     );\n//     const { user: userInfoResp = null, token, ...rest } = loginResp;\n//     setLocalJWT(token);\n//     yield put(\n//       userActions.loginSuccess(\n//         fromJS({\n//           token,\n//           userInfo: userInfoResp,\n//           ...rest,\n//         }),\n//       ),\n//     );\n//   } catch (e) {\n//     yield put(userActions.loginFail(e));\n//   }\n// }\n\n// function* register(action) {\n//   try {\n//     const { payload: userInfo } = action;\n//     const { data: registerResp } = yield call(request.post, '/users', userInfo);\n//     const { user: userInfoResp = null, token, ...rest } = registerResp;\n//     setLocalJWT(token);\n//     yield put(\n//       userActions.registerSuccess(\n//         fromJS({\n//           token,\n//           userInfo: userInfoResp,\n//           ...rest,\n//         }),\n//       ),\n//     );\n//   } catch (errResp) {\n//     yield put(userActions.registerFail());\n//   }\n// }\n\nfunction* createTask(action) {\n  try {\n    const { payload: task } = action;\n    const { data: taskResp } = yield call(request.post, '/tasks', task);\n    const { items } = taskResp;\n    yield put(\n      taskActions.addTaskToTasks(\n        fromJS({\n          ...taskResp,\n          items: normalize(items),\n        }),\n      ),\n    );\n  } catch (errResp) {\n    // eslint-disable-next-line no-console\n    console.error('createTask', errResp);\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* mySaga() {\n  // yield takeLatest(effectActionTypes.EFFECT_REGISTER, register);\n  // yield takeLatest(effectActionTypes.EFFECT_LOGIN, login);\n\n  // tasks\n\n  yield takeEvery(effectActionTypes.EFFECT_CREATE_TASK, createTask);\n\n  yield all([\n    ...userSagas,\n    ...taskSagas,\n    ...editingTaskSagas,\n    ...globalSagas,\n  ]);\n}\n\nexport default mySaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\n\nimport * as constants from './actionTypes';\nimport * as actions from './actions';\nimport reducers from './reducer';\n\nimport rootSaga from './rootSaga';\n\nimport { isDev } from '../env';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n// eslint-disable-next-line import/no-mutable-exports\nlet store;\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (isDev()) {\n  // eslint-disable-next-line no-console\n  console.log('正处于develoment模式');\n  store = createStore(\n    reducers,\n    /* eslint-disable */\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n} else {\n  store = createStore(reducers, applyMiddleware(...middlewares));\n}\n\nsagaMiddleware.run(rootSaga)\n\n// const store = createStore(persistedReducer);\n\nexport { store, constants, actions };\n","import { useState, useEffect } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Store } from 'redux';\nimport { is } from 'immutable';\n\n/**\n *\n * @param {Store} store\n */\nexport function createUseStore(store) {\n  return function useStore(\n    stateFilter = (state) => state,\n    // mapDispatchToProps = null,\n  ) {\n    const [filtedState, setFiltedState] = useState(\n      stateFilter(store.getState()),\n    );\n    useEffect(() => {\n      const unsub = store.subscribe(() => {\n        const changedState = stateFilter(store.getState());\n        setFiltedState((prevState) => {\n          // setState的值与先前state的值不一样时，react才会触发充渲染，注意react的前后state的比较仅仅是引用比较\n          // 因此这里实现的比较，可以根据的自己的需求，可以任何时候直接返回新state，或者浅比较再选择性返回，由于我\n          // 整个state tree都是immutable的，所以直接使用immutable提供的比较is函数，当状态没变时，返回先前的state的\n          // 由于引用相等，不会重渲染，而当改变时，返回新的state，引用改变，触发重渲染，结合immutable的特性和容器型组件的特点，有以下几个好处\n          // - 容器型组件仅仅从redux接受状态，在使用useStore的情况下，相当于隐式实现了memo功能\n          // - 结合整个state tree 都是 immutable 的特点，这里is比较函数，是相当高效率的，远高于浅比较。\n          if (!is(prevState, changedState)) {\n            return changedState;\n          }\n          return prevState;\n        });\n      });\n      return () => {\n        unsub();\n      };\n    }, [setFiltedState, stateFilter]);\n\n    return {\n      ...filtedState,\n      dispatch: store.dispatch, // 语法糖，方便使用dispatch，不用单独写个useDispatch方法了\n    };\n  };\n}\n\nexport const foo = 'foo';\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { store } from '../store';\nimport { createUseStore } from './helper';\n\nexport const useStore = createUseStore(store);\n\nexport function useIsOnline() {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const onlineListener = useCallback(() => {\n    setIsOnline(true);\n  }, []);\n  const offlineListener = useCallback(() => {\n    setIsOnline(false);\n  }, [setIsOnline]);\n  useEffect(() => {\n    window.addEventListener('online', onlineListener);\n    window.addEventListener('offline', offlineListener);\n    return () => {\n      window.removeEventListener('online', onlineListener);\n      window.removeEventListener('offline', offlineListener);\n    };\n  }, [setIsOnline, onlineListener, offlineListener]);\n  return isOnline;\n}\n\nexport const foo = 'oo';\n","import React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { taskActions, globalActions } from '../store/actions';\n\nimport TaskList from '../components/TaskList';\nimport { useIsOnline } from '../hooks';\n\nfunction TaskListContainer(props) {\n  const {\n    $tasks, dispatch, history, hasLogin,\n  } = props;\n  const $tasksEntity = $tasks.get('entity');\n  const $tasksRefs = $tasks.get('refs');\n  const $taskList = useMemo(\n    () => $tasksRefs.map((taskId) => $tasksEntity.get(taskId)),\n    [$tasksEntity, $tasksRefs],\n  );\n\n  const isOnline = useIsOnline();\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const toggleIsEditable = useCallback(() => {\n    if (isOnline) {\n      setIsEditable((prevFlag) => !prevFlag);\n    }\n    // setIsEditable(!isEditable);\n  }, [setIsEditable, isOnline]);\n\n  const onClickEditTaskButton = useCallback(\n    ($task) => {\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/edit/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  const onClickRemoveTaskButton = useCallback(\n    ($task) => {\n      dispatch(taskActions.effectDeleteTask($task.get('id')));\n      dispatch(taskActions.removeTaskInTasks($task));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      // 防止编辑模式点击，然后进入到任务模式，只能在非编辑模式下进入任务\n      if (isEditable) return;\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history, isEditable],\n  );\n\n  return (\n    <TaskList\n      onClickEditTaskButton={onClickEditTaskButton}\n      onClickRemoveTaskButton={onClickRemoveTaskButton}\n      onClickTask={onClickTask}\n      isEditable={isOnline && hasLogin && isEditable}\n      onClickSwitchButton={toggleIsEditable}\n      $tasks={$taskList}\n    />\n  );\n}\n\nTaskListContainer.propTypes = {\n  $tasks: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasks: $task.get('tasks'),\n    hasLogin: $state.getIn(['user', 'hasLogin']),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TaskListContainer),\n);\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport PropTypes from 'prop-types';\n\nimport List from './List';\n\nfunction MenuList(props) {\n  const { children } = props;\n  return (\n    <List title=\"菜单项\">\n      <Divider />\n      {React.Children.map(children, (node, index) => (\n        <ListItem key={index}>{node}</ListItem>\n      ))}\n    </List>\n  );\n}\n\nMenuList.propTypes = {\n  children: PropTypes.node,\n};\n\nMenuList.defaultProps = {\n  children: null,\n};\n\nexport default MenuList;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextInput(props) {\n\n  const { onEnter, ...rest } = props;\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER) {\n        onEnter(evt);\n      }\n    },\n    [onEnter],\n  );\n\n  return <TextField onKeyUp={onKeyEnterUp} {...rest} />;\n}\n\nTextInput.propTypes = {\n  onEnter: PropTypes.func.isRequired,\n};\n\nTextInput.defaultProps = {};\n\nexport default TextInput;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport MenuList from '../../components/MenuList';\nimport { uniqueId } from '../../utils';\nimport { globalActions, effectActions } from '../../store/actions';\nimport TextInput from '../../components/TextInput';\nimport { COLOR_GREEN, COLOR_ORANGE } from '../../utils/constants';\n\nfunction MenuListContainer(props) {\n  const { dispatch, hasLogin } = props;\n\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const handleCreateTaskInputChange = useCallback(\n    (evt) => setNewTaskTitle(evt.target.value),\n    [setNewTaskTitle],\n  );\n\n  const handleEnterUp = useCallback(\n    function createNewTaskByTitle(evt) {\n      const title = evt.target.value.trim();\n      if (title !== '') {\n        const task = {\n          title,\n          id: uniqueId(),\n          items: [],\n          timestamp: Date.now(),\n        };\n        dispatch(effectActions.createTask(task));\n\n        setNewTaskTitle('');\n      }\n    },\n    [dispatch, setNewTaskTitle],\n  );\n\n  const handleClickLoginBtn = useCallback(\n    function showLoginAndRegisterModel() {\n      dispatch(globalActions.hideSideMenu());\n      dispatch(globalActions.showAccountManager());\n    },\n    [dispatch],\n  );\n\n  return (\n    <MenuList>\n      <TextInput\n        label={hasLogin ? '创建新任务' : '请先登录'}\n        disabled={!hasLogin}\n        onEnter={handleEnterUp}\n        onChange={handleCreateTaskInputChange}\n        type=\"text\"\n        value={newTaskTitle}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n      />\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        style={{\n          backgroundColor: hasLogin ? COLOR_GREEN : COLOR_ORANGE,\n          color: '#fff',\n        }}\n        onClick={handleClickLoginBtn}\n      >\n        {hasLogin ? '已登录' : '登录|云同步'}\n      </Button>\n    </MenuList>\n  );\n}\n\nMenuListContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(MenuListContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Drawer(props) {\n  const { show, children } = props;\n\n  return (\n    <CSSTransition\n      classNames=\"ani-slide-right\"\n      timeout={300}\n      in={show}\n      appear\n      mountOnEnter\n      unmountOnExit\n    >\n      <div\n        style={{\n          position: 'absolute',\n          width: '65%',\n          maxWidth: '375px',\n          height: '100vh',\n          backgroundColor: '#fff',\n          overflowY: 'scroll', //* 防止子margin-top影响父margin-top *\n          overflowX: 'hidden',\n          opacity: '1',\n          zIndex: '3000',\n        }}\n        className=\"transition-slide-right-self\"\n      >\n        {children}\n      </div>\n    </CSSTransition>\n  );\n}\n\nDrawer.propTypes = {\n  show: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDrawer.defaultProps = {\n  show: true,\n  children: '',\n};\n\nexport default Drawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Mask(props) {\n  const { show, onClick } = props;\n\n  return (\n    <CSSTransition classNames=\"ani-fade\" in={show} timeout={300} mountOnEnter unmountOnExit>\n      <div\n        onClick={onClick}\n        role=\"button\"\n        style={{\n          // display: show ? 'block' : 'none',\n          position: 'absolute',\n          backgroundColor: 'rgba(0, 0, 0, 0.75)',\n          top: '0',\n          left: '0',\n          height: '100vh',\n          width: '100%',\n          zIndex: '2000',\n        }}\n        className=\"transition-fade-self\"\n      />\n    </CSSTransition>\n  );\n}\n\nMask.propTypes = {\n  onClick: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n};\n\nMask.defaultProps = {\n  onClick: () => {\n    /*eslint-disable*/\n    console.log('Mask:onClick');\n  },\n};\n\nexport default Mask;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { hideSideMenu } from '../../store/actions';\n\nimport TaskListContainer from '../TaskListContainer';\nimport MenuListContainer from '../MenuListContainer';\nimport Drawer from '../../components/Drawer';\nimport Mask from '../../components/mask';\n\nfunction SideMenuContainer(props) {\n  const { dispatch, showSideMenu } = props;\n  const onClickSideMenuMask = useCallback(() => {\n    dispatch(hideSideMenu());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Mask show={showSideMenu} onClick={onClickSideMenuMask} />\n      <Drawer show={showSideMenu}>\n        <TaskListContainer />\n        <MenuListContainer />\n      </Drawer>\n    </>\n  );\n}\n\nSideMenuContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showSideMenu: PropTypes.bool.isRequired,\n};\n\n// SideMenuContainer.defaultProps = {\n//   showSideMenu: true,\n// };\n\nconst mapState = ($state) => ({\n  showSideMenu: $state.getIn(['global', 'showSideMenu']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(SideMenuContainer);\n","/* eslint-disable arrow-parens */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction NotFound(props) {\n  const { message, time } = props;\n  const [isTimeout, setIsTimeout] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsTimeout(true);\n    }, time);\n\n    const intervalId = setInterval(() => {\n      setSeconds((prev) => prev + 1);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [time, setIsTimeout, setSeconds]);\n\n  return isTimeout ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div\n      style={{\n        padding: '20px',\n      }}\n    >\n      <h1>{message}</h1>\n      <h2>\n        {Math.round(time / 1000) - seconds}\n        秒后回到主页\n      </h2>\n    </div>\n  );\n}\n\nNotFound.propTypes = {\n  message: PropTypes.string,\n  time: PropTypes.number,\n};\n\nNotFound.defaultProps = {\n  message: '404 Not Found',\n  time: 3000,\n};\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AntdCheckbox from 'antd/es/checkbox';\nimport 'antd/es/checkbox/style/css.js';\n\nfunction Checkbox(props) {\n  return <AntdCheckbox {...props} />;\n}\n\nCheckbox.propTypes = {\n  onClick: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nCheckbox.defaultProps = {\n  onClick: null,\n  checked: false,\n  disabled: false,\n};\n\nexport default Checkbox;\n","import React, { useState, useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport Input from '@material-ui/core/Input';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\n\nimport Checkbox from './Checkbox';\nimport { uniqueId } from '../utils';\n\nfunction TaskItemList(props) {\n  const {\n    $task, onCreateNewTaskItem, onClickRemoveButton, isEditable, onClickCheckbox,\n  } = props;\n  const [newTaskItemTitle, setNewTaskItemTitle] = useState('');\n\n  const onInputNewTaskItem = useCallback((evt) => {\n    setNewTaskItemTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      const taksItemTitle = evt.target.value;\n      if (taksItemTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateNewTaskItem(\n          Map({\n            id: uniqueId(),\n            title: taksItemTitle,\n            checked: false,\n          }),\n        );\n        setNewTaskItemTitle('');\n      }\n    },\n    [setNewTaskItemTitle, onCreateNewTaskItem],\n  );\n\n  return (\n    <List>\n      <ListItem dense>\n        <Typography variant=\"h4\" gutterBottom>\n          {$task.get('title')}\n        </Typography>\n      </ListItem>\n      <TransitionGroup className=\"transition-fade\">\n        {$task.getIn(['items', 'refs']).map((taskItemId) => {\n          const $item = $task.getIn(['items', 'entity', taskItemId]);\n          return (\n            <CSSTransition key={$item.get('id')} timeout={300} classNames=\"ani-fade\">\n              <React.Fragment key={$item.get('id')}>\n                <ListItem>\n                  <IconButton onClick={() => onClickCheckbox($item)}>\n                    <Checkbox disabled={isEditable} edge=\"start\" checked={$item.get('checked')} />\n                  </IconButton>\n                  <ListItemText primary={$item.get('title')} />\n                  {isEditable ? (\n                    <IconButton onClick={() => onClickRemoveButton($item)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  ) : null}\n                </ListItem>\n                <Divider variant=\"middle\" />\n              </React.Fragment>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n      {isEditable ? (\n        <ListItem>\n          <Input\n            value={newTaskItemTitle}\n            onKeyUp={onKeyEnterUp}\n            onChange={onInputNewTaskItem}\n            placeholder=\"新增待做事项\"\n            fullWidth\n          />\n        </ListItem>\n      ) : null}\n    </List>\n  );\n}\n\nTaskItemList.propTypes = {\n  $task: PropTypes.instanceOf(Map).isRequired,\n  onCreateNewTaskItem: PropTypes.func,\n  onClickRemoveButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  onClickCheckbox: PropTypes.func,\n};\n\nTaskItemList.defaultProps = {\n  onCreateNewTaskItem: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickRemoveButton: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickCheckbox: () => {\n    /* eslint-disable */\n    console.log('onClickCheckbox');\n  },\n  isEditable: false,\n};\n\nexport default TaskItemList;\n\n// export default TaskItemList;\n","import React, { useCallback, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport NotFound from '../../components/NotFound';\nimport TaskItemList from '../../components/TaskItemList';\nimport { taskActions } from '../../store/actions';\n\nfunction TodoListContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    $currentTodoTask,\n    dispatch,\n  } = props;\n\n  useEffect(() => {\n    dispatch(taskActions.effectGetTask(taskId));\n    return () => {\n      // 离开当前任务页面时，重置状态树中的currentTodoTask为null，保持状态树整洁\n      dispatch(taskActions.changeCurrentTodoTask(null));\n    };\n  }, [dispatch, taskId]);\n\n  // useEffect(() => {\n  //   dispatch(taskActions.changeCurrentTodoTaskById(taskId));\n  // }, [taskId, dispatch]);\n\n  const toggleTaskItemPropChecked = useCallback(\n    ($taskItem) => {\n      dispatch(taskActions.toggleTaskItemPropChecked($taskItem));\n    },\n    [dispatch],\n  );\n\n  if ($currentTodoTask == null) return <NotFound message=\"Loding...\" time={5000} />;\n\n  return (\n    <TaskItemList\n      onClickCheckbox={toggleTaskItemPropChecked}\n      $task={$currentTodoTask}\n      isEditable={false}\n    />\n  );\n}\n\nTodoListContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n      action: PropTypes.string,\n    }),\n  }).isRequired,\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $currentTodoTask: PropTypes.instanceOf(Map),\n  dispatch: PropTypes.func.isRequired,\n};\n\nTodoListContainer.defaultProps = {\n  $currentTodoTask: null,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentTodoTask: $task.get('currentTodoTask'),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(TodoListContainer);\n\n// export default TodoListContainer;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\nfunction PinnedTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"置顶任务\">\n      <Divider />\n      <TransitionGroup className=\"transition-fade\">\n        {$tasks.map($task => (\n          <CSSTransition key={$task.get('id')} timeout={600} classNames=\"ani-fade\">\n            <React.Fragment>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                <IconButton onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                  <StarIcon />\n                </IconButton>\n              </ListItem>\n            </React.Fragment>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nPinnedTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nPinnedTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default PinnedTaskList;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\nfunction RecentTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"最近任务\">\n      <Divider />\n      <TransitionGroup className=\"transition-fade\">\n        {$tasks.map($task => (\n          <CSSTransition key={$task.get('id')} timeout={300} classNames=\"ani-fade\">\n            <React.Fragment>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                {$task.get('isPinned') ? null : (\n                  <IconButton\n                    onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}\n                  >\n                    <StarBorderIcon />\n                  </IconButton>\n                )}\n              </ListItem>\n            </React.Fragment>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nRecentTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nRecentTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default RecentTaskList;\n","/* eslint-disable function-paren-newline */\nimport React, { useCallback, useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Map, List } from 'immutable';\nimport { connect } from 'react-redux';\n\nimport PinnedTaskList from '../components/PinnedTaskList';\n\nimport { editingTaskActions } from '../store/actions';\nimport RecentTaskList from '../components/RecentTaskList';\n\nfunction HomeContainer(props) {\n  const {\n    $tasksRefs,\n    dispatch,\n    history,\n    $tasksEntity,\n  } = props;\n\n  const $recentTasks = useMemo(\n    () =>\n      $tasksRefs.map(ref => $tasksEntity.get(ref)).sort(($taskA, $taskB) => {\n        const taskATime = $taskA.get('lastVisitTime') || 0;\n        const taskBTime = $taskB.get('lastVisitTime') || 0;\n        return taskBTime - taskATime;\n      }),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const $pinnedTasks = useMemo(\n    () => $tasksRefs.map(ref => $tasksEntity.get(ref)).filter($task => $task.get('isPinned')),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const pinOneTask = useCallback(\n    ($task) => {\n      const $pinndTask = $task.set('isPinned', true);\n      dispatch(editingTaskActions.effectUpdateTask($pinndTask));\n    },\n    [dispatch],\n  );\n\n  const unpinOneTask = useCallback(\n    ($task) => {\n      const $unpinndTask = $task.set('isPinned', false);\n      dispatch(editingTaskActions.effectUpdateTask($unpinndTask));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [history],\n  );\n\n  return (\n    <React.Fragment>\n      <PinnedTaskList\n        onClickIconButton={unpinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$pinnedTasks}\n      />\n      <RecentTaskList\n        onClickIconButton={pinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$recentTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nHomeContainer.propTypes = {\n  // $recentTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  // $pinnedTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $tasksRefs: PropTypes.instanceOf(List).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nHomeContainer.defaultProps = {};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $recentTaskIds: $task.get('recentTaskIds'),\n    $pinnedTaskIds: $task.get('pinnedTaskIds'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $tasksRefs: $task.getIn(['tasks', 'refs']),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(HomeContainer);\n","/* eslint-disable nonblock-statement-body-position */\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport TaskItemList from '../components/TaskItemList';\nimport { taskActions, editingTaskActions } from '../store/actions';\nimport NotFound from '../components/NotFound';\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  const $editingTask = $state.get('editingTask');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentEditingTask: $editingTask.get('currentTask'),\n  };\n};\n\nfunction EditingTaskPageContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    dispatch,\n    // $tasksEntity,\n    $currentEditingTask,\n  } = props;\n\n  const [isTaskLoaded, setIsTaskLoaded] = useState(false);\n  const [isTaskTaskChanged, setIsTaskTaskChanged] = useState(false);\n\n  useEffect(() => {\n    // 根据taskid加载对应的将要被编辑的任务\n    if (!isTaskLoaded) {\n      // const $target = $tasksEntity.get(taskId) || null;\n      dispatch(editingTaskActions.effectGetTask(taskId));\n      if ($currentEditingTask != null) setIsTaskLoaded(true);\n    }\n  }, [dispatch, taskId, isTaskLoaded, setIsTaskLoaded, $currentEditingTask]);\n\n  useEffect(\n    () => () => {\n      // 因为根据taskId加载任务，所以taskId变化，即任务变化，所以每次切换任务，就要重置编辑历史，重置redo，undo按钮状态\n      // 即使退出也要重置状态，保持状态树的干净\n      dispatch(editingTaskActions.clearAllEdtingHistory());\n      // 退出任务, 重置为null，\n      dispatch(editingTaskActions.changeCurrentTask(null));\n    },\n    [taskId, dispatch],\n  );\n\n  useEffect(() => {\n    if (isTaskLoaded && isTaskTaskChanged) {\n      // 同步到云端 // 乐观更新\n      dispatch(editingTaskActions.effectUpdateTask($currentEditingTask));\n      // 将编辑后的任务保存到原任务上\n      dispatch(taskActions.updateTaskInTasks($currentEditingTask));\n    }\n  }, [isTaskLoaded, isTaskTaskChanged, dispatch, $currentEditingTask]);\n\n  const onCreateNewTaskItem = useCallback(\n    ($newTaskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.addTaskItemInCurrentTask($newTaskItem));\n      // 因为添加了新任务，所以清空重做任务列表，重置 重做 按钮状态，为了避免编辑状态混乱\n      dispatch(editingTaskActions.clearFutureTasks());\n      setIsTaskTaskChanged(true);\n    },\n    [dispatch],\n  );\n\n  const onClickRemoveButton = useCallback(\n    ($taskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.removeTaskItemInCurrentTask($taskItem));\n      setIsTaskTaskChanged(true);\n    },\n    [dispatch],\n  );\n\n  if ($currentEditingTask == null) return <NotFound />;\n\n  return (\n    <TaskItemList\n      onCreateNewTaskItem={onCreateNewTaskItem}\n      onClickRemoveButton={onClickRemoveButton}\n      $task={$currentEditingTask}\n      isEditable\n    />\n  );\n}\n\nEditingTaskPageContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  $currentEditingTask: PropTypes.instanceOf(Map),\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nEditingTaskPageContainer.defaultProps = {\n  $currentEditingTask: null,\n};\n\nexport default connect(\n  mapState,\n  null,\n)(EditingTaskPageContainer);\n\n// export default EditingTaskPageContainer;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\n\nfunction LoginArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onLogin, disabled } = props;\n\n  const isLogining = disabled;\n\n  const handleClickButton = useCallback(() => {\n    onLogin({\n      username,\n      password,\n    });\n  }, [username, password, onLogin]);\n\n  const isDisabled = isLogining || username.trim() === '' || password.trim() === '';\n\n  const buttonText = isLogining ? '登录中...' : '登录';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <TextField value={password} onChange={handleInputPassword} type=\"password\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={handleClickButton} fullWidth>\n          {buttonText}\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nLoginArea.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLoginArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default LoginArea;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\n\nfunction RegisterArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onRegister, disabled } = props;\n\n  const handleClickButton = useCallback(() => {\n    onRegister({\n      username,\n      password,\n    });\n  }, [username, password, onRegister]);\n\n  const isDisabled = disabled || username.trim() === '' || password.trim() === '';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField placeholder=\"请输入4到16位字母，数字\" value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <TextField placeholder=\"请输入4到16位字母，数字\" value={password} onChange={handleInputPassword} type=\"password\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={handleClickButton} fullWidth>\n          注册\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nRegisterArea.propTypes = {\n  onRegister: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nRegisterArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default RegisterArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\nimport List from '@material-ui/core/List';\nimport { ListItem } from '@material-ui/core';\n\nfunction UserInfo(props) {\n  const { $userInfo } = props;\n\n  return (\n    <List>\n      <ListItem>\n        已经登录，欢迎您!\n      </ListItem>\n      <ListItem>\n        {`用户名: ${$userInfo.get('username')}`}\n      </ListItem>\n    </List>\n  );\n}\n\nUserInfo.propTypes = {\n  $userInfo: PropTypes.instanceOf(Map).isRequired,\n};\n\nUserInfo.defaultProps = {};\n\nexport default UserInfo;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { Map } from 'immutable';\n\nimport LoginArea from '../components/LoginArea';\nimport RegisterArea from '../components/RegisterArea';\nimport { globalActions, userActions } from '../store/actions';\nimport { stopEventPropagation, uniqueId } from '../utils';\nimport LoginStatus from '../components/LoginStatus';\n\nconst usernamePattern = /^[a-zA-Z0-9_-]{4,16}$/;\nconst passwordPattern = /^[a-zA-Z0-9_-]{4,16}$/;\n\n\nfunction AccountManagerContainer(props) {\n  const {\n    dispatch,\n    showAccountManager,\n    hasLogin,\n    $userInfo,\n    isLogining,\n    isRegistering,\n  } = props;\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleClickMask = useCallback(() => {\n    dispatch(globalActions.hideAccountManager());\n  }, [dispatch]);\n\n  const handleTabChange = useCallback((evt, tabIndexChangedTo) => {\n    setTabIndex(tabIndexChangedTo);\n  }, []);\n\n  const handleLogin = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectLogin(userInfo));\n      } else {\n        dispatch(globalActions.addOneNitification({\n          type: 'error',\n          title: '登录失败',\n          message: '非法用户名或密码，请输入4到16位的字母或数字',\n          key: uniqueId('notify'),\n        }));\n      }\n    },\n    [dispatch],\n  );\n\n  const handleRegister = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectRegister(userInfo));\n      } else {\n        dispatch(globalActions.addOneNitification({\n          type: 'error',\n          title: '注册失败',\n          message: '非法用户名或密码，请输入4到16位的字母或数字',\n          key: uniqueId('notify'),\n        }));\n      }\n    },\n    [dispatch],\n  );\n\n  const handleClickLogoutButton = useCallback(() => {\n    dispatch(userActions.logout());\n  }, [dispatch]);\n\n  const loginArea = useMemo(\n    () => <LoginArea disabled={isLogining} onLogin={handleLogin} />,\n    [isLogining, handleLogin],\n  );\n  const registerArea = useMemo(\n    () => <RegisterArea disabled={isRegistering} onRegister={handleRegister} />,\n    [handleRegister, isRegistering],\n  );\n\n  const tabContentItems = [loginArea, registerArea];\n\n  if (!showAccountManager) return null;\n\n  return (\n    <>\n      <div\n        className=\"AccountManager\"\n        onClick={handleClickMask}\n        style={{\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          top: '0',\n          left: '0',\n          height: '100%',\n          width: '100%',\n          zIndex: '3000',\n          boxSizing: 'border-box',\n          padding: '0 50px',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n        }}\n      >\n        <Paper onClick={stopEventPropagation}>\n          {hasLogin ? (\n            <>\n              <LoginStatus $userInfo={$userInfo} />\n              <Button fullWidth variant=\"outlined\" onClick={handleClickLogoutButton}>退出</Button>\n            </>\n          ) : (\n            <>\n              <Tabs\n                value={tabIndex}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleTabChange}\n                centered\n              >\n                <Tab label=\"登录\" />\n                <Tab label=\"注册\" />\n              </Tabs>\n              <div>{tabContentItems[tabIndex]}</div>\n            </>\n          )}\n        </Paper>\n      </div>\n    </>\n  );\n}\n\nAccountManagerContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showAccountManager: PropTypes.bool.isRequired,\n  isLogining: PropTypes.bool.isRequired,\n  isRegistering: PropTypes.bool.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  $userInfo: PropTypes.instanceOf(Map),\n};\n\nAccountManagerContainer.defaultProps = {\n  $userInfo: null,\n};\n\nconst mapState = ($state) => ({\n  showAccountManager: $state.getIn(['global', 'showAccountManager']),\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n  isLogining: $state.getIn(['user', 'isLogining']),\n  isRegistering: $state.getIn(['user', 'isRegistering']),\n  $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(AccountManagerContainer);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport ErrorIcon from '@material-ui/icons/Clear';\nimport SuccessIcon from '@material-ui/icons/Done';\nimport WarnIcon from '@material-ui/icons/PriorityHigh';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader } from '@material-ui/core';\nimport { List } from 'immutable';\n\nimport { COLOR_GREEN, COLOR_RED, COLOR_YELLOW } from '../utils/constants';\n\nconst TYPE_COLOR_MAPPING = {\n  success: COLOR_GREEN,\n  error: COLOR_RED,\n  warn: COLOR_YELLOW,\n};\n\nfunction Notification(props) {\n  const {\n    type, title, style, subtitle,\n  } = props;\n  const iconStyle = {\n    borderRadius: '50%',\n    overflow: 'hidden',\n    color: '#fff',\n    width: '48px',\n    height: '48px',\n    backgroundColor: TYPE_COLOR_MAPPING[type],\n  };\n  let icon = <WarnIcon style={iconStyle} />;\n  if (type === 'error') icon = <ErrorIcon style={iconStyle} />;\n  if (type === 'success') icon = <SuccessIcon style={iconStyle} />;\n\n  return (\n    <Card style={style}>\n      <CardHeader\n        avatar={icon}\n        title={title}\n        subheader={subtitle}\n        // subheader=\"status: 401\"\n      />\n    </Card>\n  );\n}\n\nNotification.propTypes = {\n  type: PropTypes.oneOf(['error', 'success', 'warn']),\n  title: PropTypes.node.isRequired,\n  subtitle: PropTypes.node,\n  style: PropTypes.objectOf(PropTypes.string),\n};\n\nNotification.defaultProps = {\n  type: 'none',\n  subtitle: null,\n  style: {},\n};\n\nfunction NotificationsPanelContainer(props) {\n  const { $notifications } = props;\n  return (\n    <>\n      <div\n        className=\"NotificationsPanelContainer\"\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: '100%',\n          zIndex: '4000',\n          boxSizing: 'border-box',\n          padding: '0 20px',\n        }}\n      >\n        {$notifications.map(({\n          title, key, detail = null, type = 'warn',\n        }) => (\n          <Notification\n            key={key}\n            style={{ marginTop: '20px' }}\n            type={type}\n            title={title}\n            subtitle={detail}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nNotificationsPanelContainer.propTypes = {\n  // dispatch: PropTypes.func.isRequired,\n  // showAccountManager: PropTypes.bool.isRequired,\n  // isLogining: PropTypes.bool.isRequired,\n  // isRegistering: PropTypes.bool.isRequired,\n  // hasLogin: PropTypes.bool.isRequired,\n  $notifications: PropTypes.instanceOf(List).isRequired,\n};\n\nNotificationsPanelContainer.defaultProps = {};\n\nconst mapState = ($state) => ({\n  $notifications: $state.getIn(['global', 'notifications']),\n  // hasLogin: $state.getIn(['user', 'hasLogin']),\n  // isLogining: $state.getIn(['user', 'isLogining']),\n  // isRegistering: $state.getIn(['user', 'isRegistering']),\n  // $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(NotificationsPanelContainer);\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBarContainer from '../../containers/AppBarContainer';\n\nimport SideMenuContainer from '../../containers/SideMenuContainer';\nimport TodoListContainer from '../../containers/TodoListContainer';\nimport HomeContainer from '../../containers/HomeContainer';\nimport EditingTaskPageContainer from '../../containers/EditingTaskPageContainer';\nimport AccountManagerContainer from '../../containers/AccountManagerContainer';\nimport NotificationsPanelContainer from '../../containers/NotificationsPanelContainer';\n\nfunction Index() {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: '100vh',\n        display: 'flex',\n        flexFlow: 'column nowrap',\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          flex: '1',\n          overflowY: 'scroll',\n          overflowX: 'hidden',\n        }}\n      >\n        <Switch>\n          <Route path=\"/todo/:id\" component={TodoListContainer} />\n          <Route path=\"/edit/:id\" component={EditingTaskPageContainer} />\n          <Route component={HomeContainer} />\n        </Switch>\n      </div>\n      <NotificationsPanelContainer />\n      <AppBarContainer />\n      <SideMenuContainer />\n      <AccountManagerContainer />\n    </div>\n  );\n}\n\n// Index.propTypes = {\n//   // dispatch: PropTypes.func.isRequired,\n//   // children: PropTypes.node,\n// };\n\n// Index.defaultProps = {\n//   // children: '',\n// };\n\nexport default Index;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLocalJWT } from '../utils';\nimport { userActions, taskActions } from '../store/actions';\n\nfunction InitWrapperContainer(props) {\n  const { children, dispatch, hasLogin } = props;\n  useEffect(() => {\n    // 自动登录\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return;\n    dispatch(userActions.effectGetUserInfo());\n  }, [dispatch]);\n  useEffect(() => {\n    if (hasLogin) {\n      dispatch(taskActions.effectGetTaskList());\n    }\n  }, [dispatch, hasLogin]);\n  return <>{children}</>;\n}\n\nInitWrapperContainer.propTypes = {\n  hasLogin: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(InitWrapperContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Index from './Layout/Index';\n// import TodoListContainer from './containers/TodoListContainer';\n\n// import { isDev } from './env';\n\nimport { store } from './store';\nimport InitWrapperContainer from './containers/InitWrapperContainer';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <InitWrapperContainer>\n        <Router>\n          <Route path=\"/\" component={Index} />\n        </Router>\n      </InitWrapperContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\n// import * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './index.scss';\n// import 'antd/dist/antd.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}