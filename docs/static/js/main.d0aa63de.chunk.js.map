{"version":3,"sources":["store/tasks/actionTypes.js","store/tasks/actions.js","store/global/actionTypes.js","store/global/actions.js","store/editingTask/actionTypes.js","store/editingTask/actions.js","store/effect/actionTypes.js","store/effect/actions.js","store/user/actionTypes.js","store/user/actions.js","utils/constants.js","containers/CompleteTaskButtonContainer.jsx","containers/EdtingTaskButtonContainer.jsx","containers/AppBarContainer/index.jsx","components/List.jsx","components/transitions/transitionEnhancer.jsx","components/transitions/Fade.jsx","components/transitions/TransitionGroup.jsx","components/TaskList.jsx","store/global/reducer.js","utils/index.js","store/tasks/reducer.js","env.js","store/editingTask/reducer.js","store/user/reducer.js","store/reducer.js","utils/request.js","config.js","store/user/saga.js","store/effect/sagas.js","store/tasks/saga.js","store/editingTask/saga.js","store/global/sagas.js","store/rootSaga.js","store/index.js","hooks/helper.js","hooks/index.js","containers/TaskListContainer.jsx","components/MenuList.jsx","components/InputOnEnter.jsx","containers/MenuListContainer/index.jsx","components/transitions/Slide.jsx","components/Drawer.jsx","components/mask.jsx","containers/SideMenuContainer/index.jsx","components/NotFound.jsx","components/Checkbox.jsx","components/TaskItemList.jsx","containers/TodoListContainer/index.jsx","components/PinnedTaskList.jsx","components/RecentTaskList.jsx","containers/HomeContainer.jsx","containers/EditingTaskPageContainer.jsx","components/LoginArea.jsx","components/RegisterArea.jsx","components/LoginStatus.jsx","containers/AccountManagerContainer.jsx","components/NotificationCard.jsx","components/transitions/Zoom.jsx","containers/NotificationsPanelContainer.jsx","Layout/Index/index.jsx","containers/InitWrapperContainer.jsx","App.jsx","index.js"],"names":["CHANGE_TASKS","ADD_TASK_TO_TASKS","REMOVE_TASK_IN_TASKS","CHANGE_CURRENT_TODO_TASK","CHANGE_CURRENT_TODO_TASK_BY_ID","CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID","TOGGLE_TASK_ITEM_CHECKED","UPDATE_TASK_IN_TASKS","EFFECT_GET_TASK_LIST","EFFECT_DELETE_TASK","EFFECT_GET_TASK","changeTasks","$tasks","type","actionTypes","payload","addTaskToTasks","task","removeTaskInTasks","changeCurrentTodoTask","$task","changeCurrentTodoTaskById","taskId","checkTaskItemInTaskItemsByTaskId","toggleTaskItemPropChecked","$taskItem","updateTaskInTasks","effectGetTaskList","effectDeleteTask","effectGetTask","SHOW_SIDE_MENU","HIDE_SIDE_MENU","SHOW_ACCOUNT_MANAGER","HIDE_ACCOUNT_MANAGER","ADD_ONE_NOTIFICATION","REMOVE_THE_TOP_NOTIFICATION","showSideMenu","hideSideMenu","showAccountManager","hideAccountManager","addOneNitification","info","removeTheTopNitification","CHANGE_CURRENT_TASK","ADD_TASK_ITEM_IN_CURRENT_TASK","REMOVE_TASK_ITEM_IN_CURRENT_TASK","SNAPSHOT_CURRENT_TASK","UNDO_CURRENT_TASK","REDO_CURRENT_TASK","CLEAR_FUTURE_TASKS","CLEAR_EDITNG_HISTORY","EFFECT_UPDATE_TASK","changeCurrentTask","addTaskItemInCurrentTask","removeTaskItemInCurrentTask","undoCurrentTask","redoCurrentTask","snapshotCurrentTask","clearFutureTasks","clearAllEdtingHistory","effectUpdateTask","EFFECT_CREATE_TASK","createTask","updateTask","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REGISTER_SUCCESS","REGISTER_FAIL","EFFECT_GET_USERINFO","EFFECT_LOGIN","EFFECT_REGISTER","loginSuccess","$loginInfo","loginFail","err","logout","registerSuccess","$registerInfo","registerFail","effectGetUserInfo","effectLogin","userInfo","effectRegister","COLOR_GREEN","COLOR_ORANGE","CompleteTaskButton","props","buttonText","buttonColor","$tasksItemsEntity","$tasksItemsRefs","dispatch","history","$unchckedTaskItems","useMemo","filter","getIn","map","get","numOfAllTaskItem","size","numOfCheckedItem","isAllComleted","hasZeroTaskItem","onClickCompleteButton","useCallback","push","concat","taskActions","react_default","a","createElement","Button","style","flex","backgroundColor","color","transition","aria-label","onClick","defaultProps","List","Map","connect","$state","$editingTask","$futureTasks","$oldTasks","withRouter","isUndoBtnDisabled","isRedoBtnDisabled","undoEditing","editingTaskActions","redoEditing","ButtonGroup","fullWidth","variant","disabled","StartOneTaskButton","AppBarContainer","onClickMenuButton","onClickStartOneTaskButton","onClickHomeButton","AppBar","position","Toolbar","IconButton","edge","Menu_default","react_router","path","component","EdtingTaskButtonContainer","CompleteTaskButtonContainer","render","AppBarContainer_StartOneTaskButton","Home_default","$currentTaskItems","ListWrapper","title","children","subsubheader","ListSubheader","id","width","subheader","EnhancedTransitionComponentBase","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","React","Component","transitionEnhancer","TransitionComponent","EnhancedTransitionComponent","_EnhancedTransitionCo","_this","call","state","show","_this$props$timeout","timeout","Error","createClass","key","value","willShow","setState","nextProps","_this$props","rest","objectWithoutProperties","assign","in","Children","only","MaterialFade","TransitionGroup","lastChildKeysRef","useRef","keysOfChildGoingToBeRemovedRef","Set","childsMapRef","childKeys","forEach","child","_child$key","current","set","cloneElement","_useState","useState","_useState2","slicedToArray","childKeysToBeShown","setChildKeysToBeShown","isChildKeysChanged","lastChildKeys","length","every","currentChildKey","index","useEffect","keysOfChildGoingToBeRemoved","childKeysGoingToBeRemoved","lastChildKey","has","includes","newChildKeysToBeShown","slice","splice","childKeyGoingToBeRemoved","add","childsMap","oringinalElement","updatedChildElment","ref","setTimeout","delete","prevChildKeys","pck","Fragment","propTypes","propName","componentName","constructor","renderTask","_ref","onClickTask","onClickEditTaskButton","onClickRemoveTaskButton","isEditable","transitions_Fade","ListItem","height","button","ListItemText","primary","evt","BorderColor_default","DeleteForever_default","TaskList","onClickSwitchButton","withStopEvtPropagation","callback","stopPropagation","_len","args","Array","_key","subHeader","display","justifyContent","alignItems","className","Typography","Switch","checked","components_List","Divider","transitions_TransitionGroup","console","log","defaultState","fromJS","notifications","globalReducer","undefined","action","_action$type","_action$payload","rawInfo","shift","uniqueId","count","timestamp","Date","now","toString","prefix","ramdomNumsStr","String","Math","round","random","withStopEventtPropagation","func","stopEventPropagation","normalize","arr","name","result","entity","refs","oriObj","identityKey","denormalize","obj","entityName","refsName","getLocalJWT","localStorage","getItem","setLocalJWT","jwt","setItem","host","tasks","currentTodoTask","TasksReducer","tasksEntity","tasksRefs","tasksTobeChangedTo","newTask","merge","targetId","todoTask","propPath","setIn","userActionTypes","clear","currentTask","futureTasks","oldTasks","editingTaskReducer","taskItems","taskItemsEntity","taskItemsRefs","tid","oldTask","last","pop","futureTask","hasLogin","isLogining","isRegistering","userReducer","loginInfo","reducers","combineReducers","global","tasksReducer","editingTask","user","isDev","location","some","hs","request","Axios","create","baseURL","interceptors","use","config","changedConfig","headers","Authorization","Promise","reject","response","errorResp","data","getUserInfo","login","register","regenerator_default","wrap","_context","prev","next","sent","put","userActions","t0","error","stop","_marked","_ref2","loginResp","_loginResp$user","userInfoResp","token","_context2","post","objectSpread","globalActions","_marked2","_ref3","registerResp","_registerResp$user","_context3","message","_marked3","saga","takeEvery","takeLatest","get$TaskById","updateTaskBy$task","rawTask","items","abrupt","sagas_marked","_$task$toJS","updatedTask","updatedItems","updatedRest","$updatedTask","errorInfo","toJS","sagas_marked2","getTaskList","deleteTaskById","get$TaskThenChangeAndUpdate","rowTaskList","saga_marked","saga_marked2","_ref4","saga_marked3","tasks_saga","taskActionTypes","updateTaskThenSyncInTasks","get$TaskThenChange","editingTask_saga_marked","editingTask_saga_marked2","editingTask_saga","editingTaskActionTypes","removeTheTopNotificationAfterWhile","ms","resolve","global_sagas_marked","sagas","globalActionTypes","mySaga","taskResp","rootSaga_marked","effectActionTypes","all","toConsumableArray","userSagas","taskSagas","editingTaskSagas","globalSagas","rootSaga_marked2","store","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","rootSaga","$global","$tasksEntity","$tasksRefs","$taskList","isOnline","navigator","onLine","setIsOnline","onlineListener","offlineListener","addEventListener","removeEventListener","useIsOnline","setIsEditable","toggleIsEditable","prevFlag","components_TaskList","MenuList","node","InputOnEnter","onEnter","onKeyEnterUp","_evt$keyCode","keyCode","TextField","onKeyUp","newTaskTitle","setNewTaskTitle","handleCreateTaskInputChange","target","handleEnterUp","trim","effectActions","handleClickLoginBtn","components_MenuList","components_InputOnEnter","label","onChange","margin","MaterialSlide","Drawer","transitions_Slide","direction","maxWidth","overflowY","overflowX","opacity","zIndex","Mask","role","top","left","onClickSideMenuMask","mask","components_Drawer","containers_TaskListContainer","containers_MenuListContainer","NotFound","time","isTimeout","setIsTimeout","_useState3","_useState4","seconds","setSeconds","timeoutId","intervalId","setInterval","clearTimeout","clearInterval","to","padding","Checkbox","es_checkbox","TaskItemList","onCreateNewTaskItem","onClickRemoveButton","onClickCheckbox","newTaskItemTitle","setNewTaskItemTitle","onInputNewTaskItem","keyUp","taksItemTitle","dense","gutterBottom","taskItemId","$item","components_Checkbox","Input","placeholder","TodoListContainer","match","params","$currentTodoTask","components_NotFound","components_TaskItemList","PinnedTaskList","onClickIconButton","onClickIconButtonWithStopEvtPropagation","Star_default","RecentTaskList","StarBorder_default","HomeContainer","$recentTasks","sort","$taskA","$taskB","taskATime","$pinnedTasks","pinOneTask","$pinndTask","unpinOneTask","$unpinndTask","components_PinnedTaskList","components_RecentTaskList","$recentTaskIds","$pinnedTaskIds","EditingTaskPageContainer","$currentEditingTask","isTaskLoaded","setIsTaskLoaded","isTaskTaskChanged","setIsTaskTaskChanged","$newTaskItem","LoginArea","_React$useState","_React$useState2","username","setUsername","_React$useState3","_React$useState4","password","setPassword","handleInputUsername","handleInputPassword","onLogin","tryLogin","isDisabled","RegisterArea","onRegister","tryRegister","UserInfo","$userInfo","usernamePattern","passwordPattern","AccountManagerContainer","tabIndex","setTabIndex","handleClickMask","handleTabChange","tabIndexChangedTo","handleLogin","_userInfo$username","_userInfo$password","test","detail","handleRegister","_userInfo$username2","_userInfo$password2","handleClickLogoutButton","tabContentItems","components_LoginArea","components_RegisterArea","boxSizing","Paper","LoginStatus","Tabs","indicatorColor","textColor","centered","Tab","SUCCESS","ERROR","TYPE_COLOR_MAPPING","_TYPE_COLOR_MAPPING","defineProperty","NotificationCard","subtitle","iconStyle","borderRadius","overflow","icon","PriorityHigh_default","Clear_default","Done_default","Card","CardHeader","avatar","types","WARN","MaterialZoom","NotificationsPanelContainer","$notifications","_ref$detail","_ref$type","transitions_Zoom","components_NotificationCard","marginTop","Index","flexFlow","containers_NotificationsPanelContainer","containers_AppBarContainer","containers_SideMenuContainer","containers_AccountManagerContainer","InitWrapperContainer","PropTypes","bool","isRequired","App","es","containers_InitWrapperContainer","react_router_dom","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d0aa63de.chunk.js","sourcesContent":["/* eslint-disable operator-linebreak */\n\nexport const CHANGE_TASKS = 'tasks/CHANGE_TASKS';\n\nexport const ADD_TASK_TO_TASKS = 'tasks/ADD_TASK_TO_TASKS';\n\nexport const REMOVE_TASK_IN_TASKS = 'tasks/REMOVE_TASK_IN_TASKS';\n\nexport const CHANGE_CURRENT_TODO_TASK = 'tasks/CHANGE_CURRENT_TODO_TASK';\n\nexport const CHANGE_CURRENT_TODO_TASK_BY_ID =\n  'tasks/CHANGE_CURRENT_TODO_TASK_BY_ID';\n\n// -- task item\n\n// export const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX =\n//   'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX';\n\nexport const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID =\n  'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID';\n\nexport const TOGGLE_TASK_ITEM_CHECKED = 'tasks/TOGGLE_TASK_ITEM_CHECKED';\n\n// editing task\n\n// export const UPDARE_TASK_FROM_EDTING = 'tasks/UPDARE_TASK_FROM_EDTING';\n\nexport const UPDATE_TASK_IN_TASKS = 'tasks/UPDATE_TASK_IN_TASKS';\n\n// effect\n\nexport const EFFECT_GET_TASK_LIST = 'tasks/EFFECT_GET_TASK_LIST';\n\nexport const EFFECT_DELETE_TASK = 'tasks/EFFECT_DELETE_TASK';\n\nexport const EFFECT_GET_TASK = 'tasks/EFFECT_GET_TASK';\n\n// export const EFFECT_UPDATE_TASK = 'tasks/EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\nexport const changeTasks = ($tasks) => ({\n  type: actionTypes.CHANGE_TASKS,\n  payload: $tasks,\n});\n\nexport const addTaskToTasks = (task) => ({\n  type: actionTypes.ADD_TASK_TO_TASKS,\n  payload: task,\n});\n\nexport const removeTaskInTasks = (task) => ({\n  type: actionTypes.REMOVE_TASK_IN_TASKS,\n  payload: task,\n});\n\nexport const changeCurrentTodoTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK,\n  payload: $task,\n});\n\nexport const changeCurrentTodoTaskById = (taskId) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID,\n  payload: taskId,\n});\n\n// -- task item\n\n// export const checkTaskItemInTaskItemsByIndex = (index) => ({\n//   type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX,\n//   payload: index,\n// });\n\nexport const checkTaskItemInTaskItemsByTaskId = (taskId) => ({\n  type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID,\n  payload: taskId,\n});\n\nexport const toggleTaskItemPropChecked = ($taskItem) => ({\n  type: actionTypes.TOGGLE_TASK_ITEM_CHECKED,\n  payload: $taskItem,\n});\n\n// edting task\n\n// export const updateTaskFromEdting = ($task) => ({\n//   type: actionTypes.UPDARE_TASK_FROM_EDTING,\n//   payload: $task,\n// });\n\nexport const updateTaskInTasks = ($task) => ({\n  type: actionTypes.UPDATE_TASK_IN_TASKS,\n  payload: $task,\n});\n\n// effect\n\nexport const effectGetTaskList = () => ({\n  type: actionTypes.EFFECT_GET_TASK_LIST,\n});\n\nexport const effectDeleteTask = (taskId) => ({\n  type: actionTypes.EFFECT_DELETE_TASK,\n  payload: taskId,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n\n// export const effectUpdateTask = ($task) => ({\n//   type: actionTypes.EFFECT_UPDATE_TASK,\n//   payload: $task,\n// });\n","export const SHOW_SIDE_MENU = 'global/SHOW_SIDE_MENU';\n\nexport const HIDE_SIDE_MENU = 'global/HIDE_SIDE_MENU';\n\nexport const SHOW_ACCOUNT_MANAGER = 'SHOW_ACCOUNT_MANAGER';\n\nexport const HIDE_ACCOUNT_MANAGER = 'HIDE_ACCOUNT_MANAGER';\n\nexport const ADD_ONE_NOTIFICATION = 'ADD_ONE_NOTIFICATION';\n\nexport const REMOVE_THE_TOP_NOTIFICATION = 'REMOVE_THE_TOP_NOTIFICATION';\n\n// export const CHANGE_CURRENT_PATH = 'global/CHANGE_CURRENT_PATH';\n","import * as actionTypes from './actionTypes';\n\nexport const showSideMenu = () => ({\n  type: actionTypes.SHOW_SIDE_MENU,\n});\n\nexport const hideSideMenu = () => ({\n  type: actionTypes.HIDE_SIDE_MENU,\n});\n\nexport const showAccountManager = () => ({\n  type: actionTypes.SHOW_ACCOUNT_MANAGER,\n});\n\nexport const hideAccountManager = () => ({\n  type: actionTypes.HIDE_ACCOUNT_MANAGER,\n});\n\n/**\n *\n * @param {{\n *  title: string;\n *  message?: string;\n *  type: 'warn' | 'error' | 'success';\n *  key: string;\n * }} info\n */\nexport const addOneNitification = (info) => ({\n  type: actionTypes.ADD_ONE_NOTIFICATION,\n  payload: info,\n});\n\nexport const removeTheTopNitification = () => ({\n  type: actionTypes.REMOVE_THE_TOP_NOTIFICATION,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","/* eslint-disable operator-linebreak */\nexport const CHANGE_CURRENT_TASK = 'editingTask/CHANGE_CURRENT_TASK';\n\nexport const ADD_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/ADD_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const REMOVE_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/REMOVE_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const SNAPSHOT_CURRENT_TASK = 'editingTask/SNAPSHOT_CURRENT_TASK';\n\nexport const UNDO_CURRENT_TASK = 'editingTask/UNDO_CURRENT_TASK';\n\nexport const REDO_CURRENT_TASK = 'editingTask/REDO_CURRENT_TASK';\n\nexport const CLEAR_FUTURE_TASKS = 'editingTask/CLEAR_FUTURE_TASKS';\n\nexport const CLEAR_EDITNG_HISTORY = 'editingTask/CLEAR_EDITNG_HISTORY';\n\n// effect\n\nexport const EFFECT_UPDATE_TASK = 'editingtask/EFFECT_UPDATE_TASK';\n\nexport const EFFECT_GET_TASK = 'editingTask/EFFECT_GET_TASK';\n","/* eslint-disable arrow-parens */\nimport * as actionTypes from './actionTypes';\n\nexport const changeCurrentTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TASK,\n  payload: $task,\n});\n\nexport const addTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const removeTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const undoCurrentTask = () => ({\n  type: actionTypes.UNDO_CURRENT_TASK,\n});\n\nexport const redoCurrentTask = () => ({\n  type: actionTypes.REDO_CURRENT_TASK,\n});\n\nexport const snapshotCurrentTask = () => ({\n  type: actionTypes.SNAPSHOT_CURRENT_TASK,\n});\n\nexport const clearFutureTasks = () => ({\n  type: actionTypes.CLEAR_FUTURE_TASKS,\n});\n\nexport const clearAllEdtingHistory = () => ({\n  type: actionTypes.CLEAR_EDITNG_HISTORY,\n});\n\n// effect\n\nexport const effectUpdateTask = ($task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: $task,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n","export const EFFECT_CREATE_TASK = 'EFFECT_CREATE_TASK';\n\nexport const EFFECT_UPDATE_TASK = 'EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\nexport const createTask = (task) => ({\n  type: actionTypes.EFFECT_CREATE_TASK,\n  payload: task,\n});\n\nexport const updateTask = (task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: task,\n});\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n// effect\n\nexport const EFFECT_GET_USERINFO = 'EFFECT_GET_USERINFO';\n\nexport const EFFECT_LOGIN = 'EFFECT_LOGIN';\n\nexport const EFFECT_REGISTER = 'EFFECT_REGISTER';\n","import * as actionTypes from './actionTypes';\n\nexport const loginSuccess = ($loginInfo) => ({\n  type: actionTypes.LOGIN_SUCCESS,\n  payload: $loginInfo,\n});\n\nexport const loginFail = (err) => ({\n  type: actionTypes.LOGIN_FAIL,\n  payload: err,\n});\n\nexport const logout = () => ({\n  type: actionTypes.LOGOUT,\n});\n\nexport const registerSuccess = ($registerInfo) => ({\n  type: actionTypes.REGISTER_SUCCESS,\n  payload: $registerInfo,\n});\n\nexport const registerFail = (err) => ({\n  type: actionTypes.REGISTER_FAIL,\n  payload: err,\n});\n\n// effect\n\nexport const effectGetUserInfo = () => ({\n  type: actionTypes.EFFECT_GET_USERINFO,\n});\n\nexport const effectLogin = (userInfo) => ({\n  type: actionTypes.EFFECT_LOGIN,\n  payload: userInfo,\n});\n\nexport const effectRegister = (userInfo) => ({\n  type: actionTypes.EFFECT_REGISTER,\n  payload: userInfo,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","export const COLOR_BLUE = '#2196f3';\n\nexport const COLOR_GREEN = '#43a047';\n\nexport const COLOR_YELLOW = '#fdd835';\n\nexport const COLOR_GREY = '#9e9e9e';\n\nexport const COLOR_ORANGE = '#ff5722';\n\nexport const COLOR_RED = '#f44336';\n\nexport const ROOT_URL = '/monica/';\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { List, Map } from 'immutable';\n\nimport { COLOR_ORANGE, COLOR_GREEN, COLOR_RED } from '../utils/constants';\nimport { taskActions } from '../store/actions';\n\nconst CompleteTaskButton = (props) => {\n  const {\n    $task,\n    $tasksItemsEntity,\n    $tasksItemsRefs,\n    dispatch,\n    history,\n  } = props;\n\n  const $unchckedTaskItems = useMemo(\n    () =>\n      $tasksItemsRefs\n        .filter((taskId) => !$tasksItemsEntity.getIn([taskId, 'checked']))\n        .map((taskId) => $tasksItemsEntity.get(taskId)),\n    [$tasksItemsEntity, $tasksItemsRefs],\n  );\n  const numOfAllTaskItem = $tasksItemsRefs.size;\n  const numOfUncheckedItem = $unchckedTaskItems.size;\n  const numOfCheckedItem = numOfAllTaskItem - numOfUncheckedItem;\n  const isAllComleted = numOfAllTaskItem === numOfCheckedItem;\n  const hasZeroTaskItem = numOfAllTaskItem === 0;\n  const onClickCompleteButton = useCallback(() => {\n    if (hasZeroTaskItem) {\n      // 零个可完成任务项，提供跳转到编辑页面的快速方式\n      history.push(`/edit/${$task.get('id')}`);\n    } else if (isAllComleted) {\n      /* 所有任务项全部完成，跳转到APP主页 */\n      history.push('/');\n    } else {\n      dispatch(\n        taskActions.checkTaskItemInTaskItemsByTaskId(\n          $unchckedTaskItems.getIn(['0', 'id']),\n        ),\n      );\n    }\n  }, [\n    $task,\n    hasZeroTaskItem,\n    isAllComleted,\n    $unchckedTaskItems,\n    history,\n    dispatch,\n  ]);\n\n  let buttonText;\n  let buttonColor;\n  if (hasZeroTaskItem) {\n    buttonText = '添加任务项';\n    buttonColor = COLOR_RED;\n  } else if (isAllComleted) {\n    buttonText = `全部完成(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_GREEN;\n  } else {\n    buttonText = `完成一个任务项(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_ORANGE;\n  }\n\n  return (\n    <Button\n      style={{\n        flex: '1',\n        backgroundColor: buttonColor,\n        color: '#fff',\n        transition: 'background-color 300ms',\n      }}\n      size=\"medium\"\n      aria-label=\"add\"\n      onClick={onClickCompleteButton}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nCompleteTaskButton.propTypes = {\n  $tasksItemsEntity: Proptypes.instanceOf(Map),\n  $tasksItemsRefs: Proptypes.instanceOf(List),\n  $task: Proptypes.instanceOf(Map),\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n};\n\nCompleteTaskButton.defaultProps = {\n  $tasksItemsRefs: new List(),\n  $tasksItemsEntity: new Map(),\n  $task: null,\n};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $tasksItemsEntity: $task.getIn(['currentTodoTask', 'items', 'entity']),\n    $tasksItemsRefs: $task.getIn(['currentTodoTask', 'items', 'refs']),\n    $task: $task.get('currentTodoTask'),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(CompleteTaskButton);\n","import React, { useCallback } from 'react';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router-dom';\nimport { List } from 'immutable';\nimport { editingTaskActions } from '../store/actions';\n\nconst EdtingTaskButtonContainer = (props) => {\n  const { $futureTasks, $oldTasks, dispatch } = props;\n  const isUndoBtnDisabled = $oldTasks.size === 0;\n  const isRedoBtnDisabled = $futureTasks.size === 0;\n\n  const undoEditing = useCallback(() => {\n    dispatch(editingTaskActions.undoCurrentTask());\n  }, [dispatch]);\n\n  const redoEditing = useCallback(() => {\n    dispatch(editingTaskActions.redoCurrentTask());\n  }, [dispatch]);\n\n  return (\n    <ButtonGroup fullWidth variant=\"outlined\">\n      <Button onClick={undoEditing} disabled={isUndoBtnDisabled}>\n        Undo\n      </Button>\n      <Button onClick={redoEditing} disabled={isRedoBtnDisabled}>\n        Redo\n      </Button>\n    </ButtonGroup>\n  );\n};\nEdtingTaskButtonContainer.propTypes = {\n  $futureTasks: Proptypes.instanceOf(List).isRequired,\n  $oldTasks: Proptypes.instanceOf(List).isRequired,\n  dispatch: Proptypes.func.isRequired,\n  // isEditingTaskEdited: Proptypes.bool.isRequired,\n};\n\nconst mapState = ($state) => {\n  const $editingTask = $state.get('editingTask');\n  return {\n    $futureTasks: $editingTask.get('futureTasks'),\n    $oldTasks: $editingTask.get('oldTasks'),\n  };\n};\nexport default connect(\n  mapState,\n  null,\n)(withRouter(EdtingTaskButtonContainer));\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\n// import MoreIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n\nimport { showSideMenu } from '../../store/actions';\nimport { COLOR_BLUE } from '../../utils/constants';\nimport CompleteTaskButtonContainer from '../CompleteTaskButtonContainer';\n\nimport EdtingTaskButtonContainer from '../EdtingTaskButtonContainer';\n\nconst StartOneTaskButton = (props) => {\n  const { onClick } = props;\n  return (\n    <Button\n      style={{ backgroundColor: COLOR_BLUE, color: '#fff' }}\n      size=\"medium\"\n      fullWidth\n      // variant=\"outlined\"\n      color=\"primary\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'开始一项任务'}\n    </Button>\n  );\n};\n\nStartOneTaskButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n};\n\nfunction AppBarContainer(props) {\n  const { dispatch, history } = props;\n  const onClickMenuButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickStartOneTaskButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickHomeButton = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n        flex: '0 0 60px',\n      }}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <Switch>\n          <Route path=\"/edit/:id\" component={EdtingTaskButtonContainer} />\n          <Route path=\"/todo\" component={CompleteTaskButtonContainer} />\n          <Route\n            render={() => (\n              <StartOneTaskButton onClick={onClickStartOneTaskButton} />\n            )}\n          />\n        </Switch>\n\n        <IconButton onClick={onClickHomeButton} edge=\"end\">\n          <HomeIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\nAppBarContainer.propTypes = {\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n  // $currentTaskItems: Proptypes.instanceOf(List),\n};\n\nAppBarContainer.defaultProps = {\n  // $currentTaskItems: new List(),\n};\n\nconst mapState = ($state) => ({\n  $currentTaskItems: $state.getIn(['global', '$currentTask', '$items']),\n});\nexport default connect(\n  mapState,\n  null,\n)(withRouter(AppBarContainer));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PropTypes from 'prop-types';\n\nfunction ListWrapper(props) {\n  const { title, children } = props;\n\n  const subsubheader = title === '' ? null : (\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n      {title}\n    </ListSubheader>\n  );\n\n  return (\n    <div>\n      <List\n        style={{\n          width: '100%',\n        }}\n        component=\"nav\"\n        // aria-label=\"secondary mailbox folders\"\n        subheader={subsubheader}\n      >\n        {children}\n      </List>\n    </div>\n  );\n}\n\nListWrapper.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nListWrapper.defaultProps = {\n  title: '',\n  children: <div>default props</div>,\n};\n\nexport default ListWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class EnhancedTransitionComponentBase extends React.Component {}\n\nfunction transitionEnhancer(TransitionComponent) {\n  class EnhancedTransitionComponent extends EnhancedTransitionComponentBase {\n    constructor(props) {\n      super(props);\n      this.state = {\n        show: false,\n      };\n      const { timeout = null } = this.props;\n      if (timeout == null) throw new Error('你必须提供一个带有属性timeout的组件来enhance');\n      this.timeout = timeout;\n    }\n\n    componentDidMount() {\n      const { show: willShow } = this.props;\n      // console.log('已经挂载组件，准备展示', this.state, 'willShow', willShow);\n      this.setState({\n        show: willShow,\n      });\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const { show: willShow } = nextProps;\n      // console.log('update组件，准备展示', this.state, 'willShow', willShow);\n      this.setState({\n        show: willShow,\n      });\n    }\n\n    render() {\n      // show是个常用名字，且是本组件的保留属性，防止错误传递到TransitionComponent上，造成冲突\n      const {\n        show: willShow, children, timeout, ...rest\n      } = this.props;\n\n      const { show } = this.state;\n\n      // console.log('render', this.state);\n      // console.warn('Children 必须能够接受style属性');\n\n      return (\n        <TransitionComponent\n          {...rest}\n          timeout={timeout}\n          in={show}\n        >\n          {React.Children.only(children)}\n        </TransitionComponent>\n      );\n    }\n  }\n\n  EnhancedTransitionComponent.propTypes = {\n    children: PropTypes.node.isRequired,\n    show: PropTypes.bool,\n    timeout: PropTypes.number,\n  };\n\n  EnhancedTransitionComponent.defaultProps = {\n    timeout: 300,\n    show: false,\n  };\n\n  return EnhancedTransitionComponent;\n}\n\nexport default transitionEnhancer;\n","\nimport MaterialFade from '@material-ui/core/Fade';\nimport transitionEnhancer from './transitionEnhancer';\n\nexport default transitionEnhancer(MaterialFade);\n","import React, {\n  useState, useEffect, useMemo, useRef,\n} from 'react';\nimport { EnhancedTransitionComponentBase } from './transitionEnhancer';\n\n// let lastChildsRef.current = null;\n// const keysOfChildGoingToBeRemovedRef.current = new Set();\n\nfunction TransitionGroup(props) {\n  const lastChildKeysRef = useRef(null);\n  const keysOfChildGoingToBeRemovedRef = useRef(new Set());\n  const childsMapRef = useRef(new Map());\n  // init\n  const { children } = props;\n  const childKeys = []; // currentChildKeys\n  React.Children.forEach(children, child => {\n    const { key = null } = child;\n    if (key == null) throw new Error('组件必须要有一个key属性');\n    childKeys.push(key);\n    childsMapRef.current.set(key, React.cloneElement(child, { show: true }));\n  });\n  const [childKeysToBeShown, setChildKeysToBeShown] = useState(childKeys);\n\n  const isChildKeysChanged = useMemo(() => {\n    const lastChildKeys = lastChildKeysRef.current;\n    if (lastChildKeys == null) return false;\n    if (lastChildKeys.length !== childKeys.length) return true;\n\n    const isChildsNotChanged = childKeys.every(\n      (currentChildKey, index) => currentChildKey === lastChildKeys[index],\n    );\n    return !isChildsNotChanged;\n  }, [childKeys]);\n\n  useEffect(() => {\n    if (lastChildKeysRef.current == null) lastChildKeysRef.current = childKeys;\n    // 仅仅应当在childs改变时触发\n    if (isChildKeysChanged) {\n      const keysOfChildGoingToBeRemoved = keysOfChildGoingToBeRemovedRef.current;\n      const lastChildKeys = lastChildKeysRef.current;\n      // 确定被移除的子组件\n      const childKeysGoingToBeRemoved = lastChildKeys.filter(\n        (lastChildKey) =>\n          (\n            !keysOfChildGoingToBeRemoved.has(lastChildKey)\n            && !childKeys.includes(lastChildKey)\n          ),\n      );\n      const newChildKeysToBeShown = childKeysToBeShown.slice();\n      childKeys.forEach((currentChildKey, index) => {\n        // 将新增加的子组件放到展示数组对应的位置上\n        const isNewChildKey = (\n          !keysOfChildGoingToBeRemoved.has(currentChildKey) // 不是已经被移除的\n          && !lastChildKeys.includes(currentChildKey) // 在上一次的childKeys里找不到\n        );\n        if (!isNewChildKey) return;\n        newChildKeysToBeShown.splice(index, 0, currentChildKey);\n      });\n      // 得到即将被展示组件的一份拷贝\n      // 设置消失动画\n      childKeysGoingToBeRemoved.forEach((childKeyGoingToBeRemoved) => {\n        // 将已经设置好的存储在set里，防止重复设置已经设置过的元素\n        keysOfChildGoingToBeRemoved.add(childKeyGoingToBeRemoved);\n        // 使用ref回调来确保一定得到实例对象，从而得到实例上的timeout时间\n        const childsMap = childsMapRef.current;\n        const oringinalElement = childsMap.get(childKeyGoingToBeRemoved);\n        const updatedChildElment = React.cloneElement(oringinalElement, {\n          show: false,\n          ref: function makeSureDeleteSelf(ref) {\n            // 注意当组件umount时或者ref属性本身发生变化时，回调会被再次执行，但是此时ref参数为null\n            const isMounted = ref != null;\n            if (!isMounted) return;\n            if (ref.timeout == null) {\n              throw new Error(\n                '被包裹的Transtion组件没有提供timeout属性，TransitionGroup组件需要这个属性来判断何时删除对应的组件',\n              );\n            }\n            setTimeout(() => {\n              keysOfChildGoingToBeRemoved.delete(updatedChildElment.key); // 删除掉自己\n              childsMap.delete(updatedChildElment.key); // 防止内存泄漏\n              setChildKeysToBeShown(prevChildKeys =>\n                prevChildKeys.filter((pck) => pck !== updatedChildElment.key));\n            }, ref.timeout);\n          },\n        });\n        childsMap.set(childKeyGoingToBeRemoved, updatedChildElment);\n      });\n      setChildKeysToBeShown(newChildKeysToBeShown);\n      lastChildKeysRef.current = childKeys; // 本次的key在渲染后就变成上次的key了\n    }\n  }, [childKeys, childKeysToBeShown, isChildKeysChanged]);\n\n  return <>{childKeysToBeShown.map(key => childsMapRef.current.get(key))}</>;\n}\n\nTransitionGroup.propTypes = {\n  children: function checkIfIs(props, propName, componentName) {\n    const children = props[propName];\n    React.Children.forEach(children, child => {\n      const parentClass = Object.getPrototypeOf(child.type);\n      // console.log('parentClass', parentClass, parentClass === EnhancedTransitionComponentBase);\n      if (parentClass !== EnhancedTransitionComponentBase) {\n        throw Error(`${componentName}的子元素必须是经过transitionEnhancer的自定义动画组件，或是自带的动画组件， 却得到了${child.constructor}`);\n      }\n    });\n  },\n};\n\nTransitionGroup.defaultProps = {\n  children: null,\n};\n\nexport default TransitionGroup;\n","import React, { useCallback } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  Switch as SwitchButton,\n  Typography,\n} from '@material-ui/core';\n\nimport List from './List';\nimport Fade from './transitions/Fade';\nimport TransitionGroup from './transitions/TransitionGroup';\n\n/* eslint-disable */\nconst renderTask = ({\n  $task,\n  onClickTask,\n  onClickEditTaskButton,\n  onClickRemoveTaskButton,\n  isEditable,\n}) => (\n  <Fade timeout={300} key={$task.get('id')}>\n    <ListItem\n      style={{ height: '48px' }}\n      onClick={() => onClickTask($task)}\n      button={!isEditable}\n    >\n      <ListItemText primary={$task.get('title')} />\n      {isEditable ? (\n        <React.Fragment>\n          <IconButton onClick={(evt) => onClickEditTaskButton(evt, $task)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton onClick={(evt) => onClickRemoveTaskButton(evt, $task)}>\n            <DeleteIcon />\n          </IconButton>\n        </React.Fragment>\n      ) : null}\n    </ListItem>\n  </Fade>\n);\n/* eslint-enable */\n\nfunction TaskList(props) {\n  const {\n    onClickTask,\n    onClickEditTaskButton,\n    onClickRemoveTaskButton,\n    $tasks,\n    isEditable,\n    onClickSwitchButton,\n  } = props;\n\n  const withStopEvtPropagation = useCallback(\n    (callback) => (evt, ...args) => {\n      evt.stopPropagation();\n      callback(...args);\n    },\n    [],\n  );\n\n  const subHeader = (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"left\">\n        <Typography>任务列表</Typography>\n      </div>\n      <div className=\"right\">\n        <Typography>\n          {'编辑'}\n          <SwitchButton\n            onClick={onClickSwitchButton}\n            checked={isEditable}\n            color=\"primary\"\n          />\n        </Typography>\n      </div>\n    </div>\n  );\n\n  return (\n    <List title={subHeader}>\n      <Divider />\n      <TransitionGroup>\n        {$tasks.map(($task) =>\n          renderTask({\n            $task,\n            isEditable,\n            onClickTask,\n            onClickRemoveTaskButton: withStopEvtPropagation(\n              onClickRemoveTaskButton,\n            ),\n            onClickEditTaskButton: withStopEvtPropagation(\n              onClickEditTaskButton,\n            ),\n          }))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickTask: PropTypes.func,\n  onClickRemoveTaskButton: PropTypes.func,\n  onClickEditTaskButton: PropTypes.func,\n  onClickSwitchButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  // children: PropTypes.element\n};\n\nTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickRemoveTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickRemoveTaskButton');\n  },\n  onClickEditTaskButton: () => {\n    /*eslint-disable*/\n    console.log('onClickEditTaskButton');\n  },\n  onClickSwitchButton: () => {\n    /*eslint-disable*/\n    console.log('onClickSwitchButton');\n  },\n  isEditable: false,\n  // children: <div>default menu content</div>\n};\n\nexport default TaskList;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  showSideMenu: false,\n  showAccountManager: false,\n  notifications: [], // 存储原生js的对象，非immutable\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst globalReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  // const { type = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.SHOW_SIDE_MENU: {\n      return state.set('showSideMenu', true);\n    }\n    case actionTypes.HIDE_SIDE_MENU: {\n      return state.set('showSideMenu', false);\n    }\n    case actionTypes.SHOW_ACCOUNT_MANAGER: {\n      return state.set('showAccountManager', true);\n    }\n    case actionTypes.HIDE_ACCOUNT_MANAGER: {\n      return state.set('showAccountManager', false);\n    }\n    case actionTypes.ADD_ONE_NOTIFICATION: {\n      const rawInfo = payload;\n      return state.set('notifications', state.get('notifications').push(rawInfo));\n    }\n    case actionTypes.REMOVE_THE_TOP_NOTIFICATION: {\n      return state.set('notifications', state.get('notifications').shift());\n    }\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","// import { isDev } from '../env';\n\nexport const uniqueId = (function saveNextId() {\n  let count = -1;\n  const timestamp = Date.now().toString();\n  return function generatorOfUniqueId(prefix = '') {\n    count += 1;\n    const ramdomNumsStr = `${String(Math.round(Math.random() * 100000000))}-${String(Math.round(Math.random() * 100000000))}`;\n    const id = `${ramdomNumsStr}-${timestamp}-${count}`;\n    if (prefix.length === 0) return id;\n    return `${prefix}-${id}`;\n  };\n}());\n\n// export function deepCopy(obj) {\n//   return JSON.parse(JSON.stringify(obj));\n// }\n\nexport function withStopEventtPropagation(func) {\n  return (evt, ...args) => {\n    evt.stopPropagation();\n    return func(...args);\n  };\n}\n\nexport function stopEventPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n *\n * @param {Array} arr\n * @param {String} name\n * @param {String} key\n */\nexport function normalize(arr, name = 'entity', key = 'id') {\n  const result = {};\n  const entity = {};\n  const refs = [];\n  const refsName = 'refs';\n  result[name] = entity;\n  result[refsName] = refs;\n  arr.forEach((oriObj) => {\n    const identityKey = oriObj[key];\n    refs.push(identityKey);\n    entity[identityKey] = oriObj;\n  });\n  return result;\n}\n\nexport function denormalize(obj, entityName = 'entity', refsName = 'refs') {\n  const result = obj[refsName].map((ref) => obj[entityName][ref]);\n  return result;\n}\n\nexport function getLocalJWT() {\n  return localStorage.getItem('__jwt') || '';\n}\n\nexport function setLocalJWT(jwt) {\n  localStorage.setItem('__jwt', jwt);\n}\n// window.getLocalJWT = getLocalJWT;\n// window.setLocalJWT = setLocalJWT;\n","/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { normalize } from '../../utils';\nimport { userActionTypes } from '../actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  tasks: normalize([]),\n  currentTodoTask: null,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst TasksReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n  // 快捷访问方式\n  /** @type Map<String, any> */\n  const tasks = state.get('tasks');\n  /** @type Map<String, any> */\n  const tasksEntity = state.getIn(['tasks', 'entity']);\n  /** @type List<String> */\n  const tasksRefs = state.getIn(['tasks', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_TASKS: {\n      const tasksTobeChangedTo = payload;\n      return state.set('tasks', tasksTobeChangedTo);\n    }\n    case actionTypes.ADD_TASK_TO_TASKS: {\n      const { payload: newTask } = action;\n      const id = newTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.set(id, newTask),\n          refs: tasksRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_IN_TASKS: {\n      const targetTask = payload;\n      const targetId = targetTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.delete(targetId),\n          refs: tasksRefs.filter((id) => id !== targetId),\n        }),\n      );\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK: {\n      const todoTask = payload;\n      return state.set('currentTodoTask', todoTask);\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID: {\n      const id = payload;\n      return state.set('currentTodoTask', state.getIn(['tasks', 'entity', id]));\n    }\n\n    // editing task item\n\n    case actionTypes.TOGGLE_TASK_ITEM_CHECKED: {\n      const taskItem = payload;\n      const propPath = [\n        'currentTodoTask',\n        'items',\n        'entity',\n        taskItem.get('id'),\n        'checked',\n      ];\n      return state.setIn(propPath, !state.getIn(propPath));\n    }\n\n    // case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX: {\n    //   const taskItemIndex = payload;\n    //   const targetTaskItemId = state.getIn([\n    //     'currentTodoTask',\n    //     'items',\n    //     'refs',\n    //     taskItemIndex,\n    //   ]);\n    //   return state.setIn(\n    //     ['currentTodoTask', 'items', 'entity', targetTaskItemId, 'checked'],\n    //     true,\n    //   );\n    // }\n\n    case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID: {\n      const taskId = payload;\n      return state.setIn(\n        ['currentTodoTask', 'items', 'entity', taskId, 'checked'],\n        true,\n      );\n    }\n\n    // case actionTypes.UPDARE_TASK_FROM_EDTING: {\n    //   const task = payload;\n    //   const id = task.get('id');\n    //   return state.setIn(['tasks', 'entity', id], task);\n    // }\n    case actionTypes.UPDATE_TASK_IN_TASKS: {\n      const task = payload;\n      const id = task.get('id');\n      return state.setIn(['tasks', 'entity', id], task);\n    }\n\n    // user\n\n    case userActionTypes.LOGOUT: {\n      return state.set('tasks', state.get('tasks').merge({\n        entity: tasksEntity.clear(),\n        refs: tasksRefs.clear(),\n      }));\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default TasksReducer;\n","/**\n * @param {String} host\n */\nconst createIsDev = host => () => {\n  const hosts = ['localhost', '127.0.0.1'];\n  return hosts.some(hs => host.includes(hs));\n};\n\n// eslint-disable-next-line no-restricted-globals\nexport const isDev = createIsDev(location.host);\n// export const isDev = () => false;\nexport const foo = 'nothing';\n","/* eslint-disable arrow-parens */\n/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  currentTask: null,\n  futureTasks: [],\n  oldTasks: [],\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst editingTaskReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n\n  const taskItems = state.getIn(['currentTask', 'items']);\n  const taskItemsEntity = state.getIn(['currentTask', 'items', 'entity']);\n  const taskItemsRefs = state.getIn(['currentTask', 'items', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_CURRENT_TASK: {\n      const task = payload;\n      return state.set('currentTask', task);\n    }\n    case actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.set(id, $taskItem),\n          refs: taskItemsRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.delete(id),\n          refs: taskItemsRefs.filter((tid) => tid !== id),\n        }),\n      );\n    }\n    case actionTypes.UNDO_CURRENT_TASK: {\n      const oldTasks = state.get('oldTasks');\n      if (oldTasks.length !== 0) {\n        const futureTasks = state.get('futureTasks');\n        const currentTask = state.get('currentTask');\n        const oldTask = oldTasks.last();\n        return state.merge({\n          currentTask: oldTask,\n          futureTasks: futureTasks.push(currentTask),\n          oldTasks: oldTasks.pop(),\n        });\n      }\n      return state;\n    }\n    case actionTypes.REDO_CURRENT_TASK: {\n      const futureTasks = state.get('futureTasks');\n      if (futureTasks.length !== 0) {\n        const oldTasks = state.get('oldTasks');\n        const currentTask = state.get('currentTask');\n        const futureTask = futureTasks.last();\n        return state.merge({\n          currentTask: futureTask,\n          futureTasks: futureTasks.pop(),\n          oldTasks: oldTasks.push(currentTask),\n        });\n      }\n      return state;\n    }\n    case actionTypes.SNAPSHOT_CURRENT_TASK: {\n      const currentTask = state.get('currentTask');\n      if (currentTask != null) {\n        const oldTasks = state.get('oldTasks');\n        return state.set('oldTasks', oldTasks.push(currentTask));\n      }\n      return state;\n    }\n    case actionTypes.CLEAR_FUTURE_TASKS: {\n      return state.set('futureTasks', state.get('futureTasks').clear());\n    }\n    case actionTypes.CLEAR_EDITNG_HISTORY: {\n      return state.merge({\n        futureTasks: state.get('futureTasks').clear(),\n        oldTasks: state.get('oldTasks').clear(),\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default editingTaskReducer;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { setLocalJWT } from '../../utils';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  hasLogin: false,\n  userInfo: null,\n  isLogining: false,\n  isRegistering: false,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst userReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.EFFECT_LOGIN: {\n      return state.set('isLogining', true);\n    }\n    case actionTypes.EFFECT_REGISTER: {\n      return state.set('isRegistering', true);\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isLogining: false }, loginInfo);\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return state.set('isLogining', false);\n    }\n    case actionTypes.LOGOUT: {\n      setLocalJWT(''); // 清空本地jwt\n      return state.merge({\n        hasLogin: false,\n        userInfo: null,\n        isLogining: false,\n        isRegistering: false,\n      });\n    }\n    case actionTypes.REGISTER_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isRegistering: false }, loginInfo);\n    }\n    case actionTypes.REGISTER_FAIL: {\n      return state.set('isRegistering', false);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux-immutable';\n\nimport globalReducer from './global/reducer';\nimport tasksReducer from './tasks/reducer';\nimport editingTaskReducer from './editingTask/reducer';\nimport userReducer from './user/reducer';\n\n\nconst reducers = combineReducers({\n  global: globalReducer,\n  task: tasksReducer,\n  editingTask: editingTaskReducer,\n  user: userReducer,\n});\n\n/* eslint-disable */\n\nexport default reducers;\n","import Axios from 'axios';\nimport { getRemoteHostUrl } from '../config';\nimport { getLocalJWT, uniqueId } from '.';\n\nexport const request = Axios.create({\n  baseURL: getRemoteHostUrl(),\n  timeout: 1000,\n});\n\nexport const foo = ';';\n\nrequest.interceptors.request.use(\n  (config) => {\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return config;\n    const changedConfig = config;\n    changedConfig.headers.Authorization = `Bearer ${jwt}`;\n    return changedConfig;\n  },\n  (err) => Promise.reject(err),\n);\n\nrequest.interceptors.response.use(\n  (config) => config,\n  (err) => {\n    const { data: errorResp } = err.response;\n    errorResp.type = 'error';\n    errorResp.key = uniqueId('error');\n    return Promise.reject(errorResp);\n  },\n);\n","import { isDev } from \"./env\";\n\nexport function getRemoteHostUrl() {\n  if (isDev()) return 'http://localhost:3031/';\n  return 'http://101.37.174.138/';\n}\n","import {\n  call, put, takeEvery, takeLatest,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { userActionTypes } from '../actionTypes';\nimport { request } from '../../utils/request';\nimport { setLocalJWT, uniqueId } from '../../utils';\nimport { userActions, globalActions } from '../actions';\n\nfunction* getUserInfo() {\n  try {\n    const { data: userInfo } = yield call(request.get, '/users');\n    yield put(userActions.loginSuccess({\n      userInfo: fromJS(userInfo),\n    }));\n  } catch (err) {\n    console.error(err);\n    setLocalJWT('');\n  }\n}\n\nfunction* login(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: loginResp } = yield call(\n      request.post,\n      '/users/login',\n      userInfo,\n    );\n    const { user: userInfoResp = null, token, ...rest } = loginResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.loginSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '登陆成功',\n      key: uniqueId('notifi'),\n    }));\n  } catch (errResp) {\n    yield put(userActions.loginFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* register(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: registerResp } = yield call(request.post, '/users', userInfo);\n    const { user: userInfoResp = null, token, ...rest } = registerResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.registerSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '注册成功',\n      message: '已经为您自动登录应用',\n    }));\n  } catch (errResp) {\n    yield put(userActions.registerFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nexport default [\n  takeEvery(userActionTypes.EFFECT_GET_USERINFO, getUserInfo),\n  takeLatest(userActionTypes.EFFECT_REGISTER, register),\n  takeLatest(userActionTypes.EFFECT_LOGIN, login),\n];\n","// 在这里抽离出公共的saga函数\nimport { fromJS } from 'immutable';\n\nimport { call, put } from 'redux-saga/effects';\nimport { request } from '../../utils/request';\n\nimport { normalize, denormalize } from '../../utils';\nimport { globalActions } from '../actions';\n\nexport function* get$TaskById(taskId) {\n  try {\n    const { data: rawTask } = yield call(request.get, `/tasks/${taskId}`);\n    const { items, ...rest } = rawTask;\n    const $task = fromJS({\n      ...rest,\n      items: normalize(items),\n    });\n    return $task;\n  } catch (errResp) {\n    yield put(globalActions.addOneNitification(errResp));\n    return null;\n  }\n}\n\nexport function* updateTaskBy$task($task) {\n  try {\n    const { items, ...rest } = $task.toJS();\n    const task = {\n      ...rest,\n      items: denormalize(items),\n      timestamp: Date.now(),\n    };\n    const { data: updatedTask } = yield call(\n      request.put,\n      `/tasks/${task.id}`,\n      task,\n    );\n    const { items: updatedItems, ...updatedRest } = updatedTask;\n    const $updatedTask = fromJS({\n      ...updatedRest,\n      items: normalize(updatedItems),\n    });\n\n    return $updatedTask;\n  } catch (errResp) {\n    const { data: errorInfo } = errResp;\n    errorInfo.type = 'error';\n    errorInfo.title = '编辑任务失败';\n    yield put(globalActions.addOneNitification(errorInfo));\n    return null;\n  }\n}\n\nexport const foo = ' foo';\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { request } from '../../utils/request';\nimport { normalize } from '../../utils';\nimport { taskActions } from '../actions';\nimport { taskActionTypes } from '../actionTypes';\nimport { get$TaskById } from '../effect/sagas';\n\nfunction* getTaskList() {\n  try {\n    const { data: rowTaskList } = yield call(request.get, '/tasks');\n    const $tasks = fromJS(\n      normalize(\n        rowTaskList.map(({ items, ...rest }) => ({\n          ...rest,\n          items: fromJS(normalize(items)),\n        })),\n      ),\n    );\n    yield put(taskActions.changeTasks($tasks));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* deleteTaskById({ payload: taskId }) {\n  try {\n    yield call(request.delete, `/tasks/${taskId}`);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* get$TaskThenChangeAndUpdate({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(taskActions.changeCurrentTodoTask($task));\n  yield put(taskActions.updateTaskInTasks($task));\n}\n\n\nexport default [\n  takeEvery(taskActionTypes.EFFECT_GET_TASK_LIST, getTaskList),\n  takeEvery(taskActionTypes.EFFECT_DELETE_TASK, deleteTaskById),\n  takeEvery(taskActionTypes.EFFECT_GET_TASK, get$TaskThenChangeAndUpdate),\n];\n","import { call, takeEvery, put } from 'redux-saga/effects';\n\nimport { editingTaskActionTypes } from '../actionTypes';\nimport { taskActions, editingTaskActions } from '../actions';\nimport { get$TaskById, updateTaskBy$task } from '../effect/sagas';\n\nfunction* updateTaskThenSyncInTasks({ payload: $task }) {\n  const $updatedTask = yield call(updateTaskBy$task, $task);\n  if ($updatedTask == null) return;\n  yield put(taskActions.updateTaskInTasks($updatedTask));\n}\n\nfunction* get$TaskThenChange({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(editingTaskActions.changeCurrentTask($task));\n}\n\nexport default [\n  takeEvery(editingTaskActionTypes.EFFECT_UPDATE_TASK, updateTaskThenSyncInTasks),\n  takeEvery(editingTaskActionTypes.EFFECT_GET_TASK, get$TaskThenChange),\n];\n","import {\n  call, put, takeEvery,\n} from 'redux-saga/effects';\nimport { globalActionTypes } from '../actionTypes';\nimport { globalActions } from '../actions';\n\nconst timeout = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction* removeTheTopNotificationAfterWhile() {\n  yield call(timeout, 3000);\n  yield put(globalActions.removeTheTopNitification());\n}\n\nexport default [\n  takeEvery(\n    globalActionTypes.ADD_ONE_NOTIFICATION,\n    removeTheTopNotificationAfterWhile,\n  ),\n];\n","import {\n  call, put, takeEvery, all,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport { effectActionTypes } from './actionTypes';\nimport { request } from '../utils/request';\nimport { taskActions, globalActions } from './actions';\nimport { normalize } from '../utils';\n\nimport userSagas from './user/saga';\nimport taskSagas from './tasks/saga';\nimport editingTaskSagas from './editingTask/saga';\nimport globalSagas from './global/sagas';\n\n\n// function* login(action) {\n//   try {\n//     const { payload: userInfo } = action;\n//     const { data: loginResp } = yield call(\n//       request.post,\n//       '/users/login',\n//       userInfo,\n//     );\n//     const { user: userInfoResp = null, token, ...rest } = loginResp;\n//     setLocalJWT(token);\n//     yield put(\n//       userActions.loginSuccess(\n//         fromJS({\n//           token,\n//           userInfo: userInfoResp,\n//           ...rest,\n//         }),\n//       ),\n//     );\n//   } catch (e) {\n//     yield put(userActions.loginFail(e));\n//   }\n// }\n\n// function* register(action) {\n//   try {\n//     const { payload: userInfo } = action;\n//     const { data: registerResp } = yield call(request.post, '/users', userInfo);\n//     const { user: userInfoResp = null, token, ...rest } = registerResp;\n//     setLocalJWT(token);\n//     yield put(\n//       userActions.registerSuccess(\n//         fromJS({\n//           token,\n//           userInfo: userInfoResp,\n//           ...rest,\n//         }),\n//       ),\n//     );\n//   } catch (errResp) {\n//     yield put(userActions.registerFail());\n//   }\n// }\n\nfunction* createTask(action) {\n  try {\n    const { payload: task } = action;\n    const { data: taskResp } = yield call(request.post, '/tasks', task);\n    const { items } = taskResp;\n    yield put(\n      taskActions.addTaskToTasks(\n        fromJS({\n          ...taskResp,\n          items: normalize(items),\n        }),\n      ),\n    );\n  } catch (errResp) {\n    // eslint-disable-next-line no-console\n    console.error('createTask', errResp);\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* mySaga() {\n  // yield takeLatest(effectActionTypes.EFFECT_REGISTER, register);\n  // yield takeLatest(effectActionTypes.EFFECT_LOGIN, login);\n\n  // tasks\n\n  yield takeEvery(effectActionTypes.EFFECT_CREATE_TASK, createTask);\n\n  yield all([\n    ...userSagas,\n    ...taskSagas,\n    ...editingTaskSagas,\n    ...globalSagas,\n  ]);\n}\n\nexport default mySaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\n\nimport * as constants from './actionTypes';\nimport * as actions from './actions';\nimport reducers from './reducer';\n\nimport rootSaga from './rootSaga';\n\nimport { isDev } from '../env';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n// eslint-disable-next-line import/no-mutable-exports\nlet store;\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (isDev()) {\n  // eslint-disable-next-line no-console\n  console.log('正处于develoment模式');\n  store = createStore(\n    reducers,\n    /* eslint-disable */\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n} else {\n  store = createStore(reducers, applyMiddleware(...middlewares));\n}\n\nsagaMiddleware.run(rootSaga)\n\n// const store = createStore(persistedReducer);\n\nexport { store, constants, actions };\n","import { useState, useEffect } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Store } from 'redux';\nimport { is } from 'immutable';\n\n/**\n *\n * @param {Store} store\n */\nexport function createUseStore(store) {\n  return function useStore(\n    stateFilter = (state) => state,\n    // mapDispatchToProps = null,\n  ) {\n    const [filtedState, setFiltedState] = useState(\n      stateFilter(store.getState()),\n    );\n    useEffect(() => {\n      const unsub = store.subscribe(() => {\n        const changedState = stateFilter(store.getState());\n        setFiltedState((prevState) => {\n          // setState的值与先前state的值不一样时，react才会触发充渲染，注意react的前后state的比较仅仅是引用比较\n          // 因此这里实现的比较，可以根据的自己的需求，可以任何时候直接返回新state，或者浅比较再选择性返回，由于我\n          // 整个state tree都是immutable的，所以直接使用immutable提供的比较is函数，当状态没变时，返回先前的state的\n          // 由于引用相等，不会重渲染，而当改变时，返回新的state，引用改变，触发重渲染，结合immutable的特性和容器型组件的特点，有以下几个好处\n          // - 容器型组件仅仅从redux接受状态，在使用useStore的情况下，相当于隐式实现了memo功能\n          // - 结合整个state tree 都是 immutable 的特点，这里is比较函数，是相当高效率的，远高于浅比较。\n          if (!is(prevState, changedState)) {\n            return changedState;\n          }\n          return prevState;\n        });\n      });\n      return () => {\n        unsub();\n      };\n    }, [setFiltedState, stateFilter]);\n\n    return {\n      ...filtedState,\n      dispatch: store.dispatch, // 语法糖，方便使用dispatch，不用单独写个useDispatch方法了\n    };\n  };\n}\n\nexport const foo = 'foo';\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { store } from '../store';\nimport { createUseStore } from './helper';\n\nexport const useStore = createUseStore(store);\n\nexport function useIsOnline() {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const onlineListener = useCallback(() => {\n    setIsOnline(true);\n  }, []);\n  const offlineListener = useCallback(() => {\n    setIsOnline(false);\n  }, [setIsOnline]);\n  useEffect(() => {\n    window.addEventListener('online', onlineListener);\n    window.addEventListener('offline', offlineListener);\n    return () => {\n      window.removeEventListener('online', onlineListener);\n      window.removeEventListener('offline', offlineListener);\n    };\n  }, [setIsOnline, onlineListener, offlineListener]);\n  return isOnline;\n}\n\nexport function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, [setIsMounted]);\n\n  return isMounted;\n}\n\nexport function useForceUpdate() {\n  const [updateCount, setUpdateCount] = useState(0);\n  const forceUpdate = useCallback(() => {\n    setUpdateCount(prevCount => prevCount + 1);\n  }, [setUpdateCount]);\n  return forceUpdate;\n}\n\nexport const foo = 'oo';\n","import React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { taskActions, globalActions } from '../store/actions';\n\nimport TaskList from '../components/TaskList';\nimport { useIsOnline } from '../hooks';\n\nfunction TaskListContainer(props) {\n  const {\n    $tasks, dispatch, history, hasLogin,\n  } = props;\n  const $tasksEntity = $tasks.get('entity');\n  const $tasksRefs = $tasks.get('refs');\n  const $taskList = useMemo(\n    () => $tasksRefs.map((taskId) => $tasksEntity.get(taskId)),\n    [$tasksEntity, $tasksRefs],\n  );\n\n  const isOnline = useIsOnline();\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const toggleIsEditable = useCallback(() => {\n    if (isOnline) {\n      setIsEditable((prevFlag) => !prevFlag);\n    }\n    // setIsEditable(!isEditable);\n  }, [setIsEditable, isOnline]);\n\n  const onClickEditTaskButton = useCallback(\n    ($task) => {\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/edit/${$task.get('id')}`);\n    },\n    [dispatch, history],\n  );\n\n  const onClickRemoveTaskButton = useCallback(\n    ($task) => {\n      dispatch(taskActions.effectDeleteTask($task.get('id')));\n      dispatch(taskActions.removeTaskInTasks($task));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      // 防止编辑模式点击，然后进入到任务模式，只能在非编辑模式下进入任务\n      if (isEditable) return;\n      dispatch(globalActions.hideSideMenu());\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [dispatch, history, isEditable],\n  );\n    // console.log('isOnline && hasLogin && isEditable', isOnline && hasLogin && isEditable);\n  return (\n    <TaskList\n      onClickEditTaskButton={onClickEditTaskButton}\n      onClickRemoveTaskButton={onClickRemoveTaskButton}\n      onClickTask={onClickTask}\n      isEditable={isOnline && hasLogin && isEditable}\n      onClickSwitchButton={toggleIsEditable}\n      $tasks={$taskList}\n    />\n  );\n}\n\nTaskListContainer.propTypes = {\n  $tasks: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasks: $task.get('tasks'),\n    hasLogin: $state.getIn(['user', 'hasLogin']),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TaskListContainer),\n);\n","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport PropTypes from 'prop-types';\n\nimport List from './List';\n\nfunction MenuList(props) {\n  const { children } = props;\n  return (\n    <List title=\"菜单项\">\n      <Divider />\n      {React.Children.map(children, (node, index) => (\n        <ListItem key={index}>{node}</ListItem>\n      ))}\n    </List>\n  );\n}\n\nMenuList.propTypes = {\n  children: PropTypes.node,\n};\n\nMenuList.defaultProps = {\n  children: null,\n};\n\nexport default MenuList;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nfunction InputOnEnter(props) {\n  const { onEnter, ...rest } = props;\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER) {\n        onEnter(evt);\n      }\n    },\n    [onEnter],\n  );\n\n  return <TextField onKeyUp={onKeyEnterUp} {...rest} />;\n}\n\nInputOnEnter.propTypes = {\n  onEnter: PropTypes.func.isRequired,\n};\n\nInputOnEnter.defaultProps = {};\n\nexport default InputOnEnter;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport MenuList from '../../components/MenuList';\nimport { uniqueId } from '../../utils';\nimport { globalActions, effectActions } from '../../store/actions';\nimport InputOnEnter from '../../components/InputOnEnter';\nimport { COLOR_GREEN, COLOR_ORANGE } from '../../utils/constants';\n\nfunction MenuListContainer(props) {\n  const { dispatch, hasLogin } = props;\n\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const handleCreateTaskInputChange = useCallback(\n    (evt) => setNewTaskTitle(evt.target.value),\n    [setNewTaskTitle],\n  );\n\n  const handleEnterUp = useCallback(\n    function createNewTaskByTitle(evt) {\n      const title = evt.target.value.trim();\n      if (title !== '') {\n        const task = {\n          title,\n          id: uniqueId(),\n          items: [],\n          timestamp: Date.now(),\n        };\n        dispatch(effectActions.createTask(task));\n\n        setNewTaskTitle('');\n      }\n    },\n    [dispatch, setNewTaskTitle],\n  );\n\n  const handleClickLoginBtn = useCallback(\n    function showLoginAndRegisterModel() {\n      dispatch(globalActions.hideSideMenu());\n      dispatch(globalActions.showAccountManager());\n    },\n    [dispatch],\n  );\n\n  return (\n    <MenuList>\n      <InputOnEnter\n        label={hasLogin ? '创建新任务' : '请先登录'}\n        disabled={!hasLogin}\n        onEnter={handleEnterUp}\n        onChange={handleCreateTaskInputChange}\n        type=\"text\"\n        value={newTaskTitle}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n      />\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        style={{\n          backgroundColor: hasLogin ? COLOR_GREEN : COLOR_ORANGE,\n          color: '#fff',\n        }}\n        onClick={handleClickLoginBtn}\n      >\n        {hasLogin ? '已登录' : '登录|云同步'}\n      </Button>\n    </MenuList>\n  );\n}\n\nMenuListContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(MenuListContainer);\n","// import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport MaterialSlide from '@material-ui/core/Slide';\n// import { useIsMounted } from '../../hooks';\nimport transitionEnhancer from './transitionEnhancer';\n\nexport default transitionEnhancer(MaterialSlide);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slide from './transitions/Slide';\n\nfunction Drawer(props) {\n  const { show, children } = props;\n\n  return (\n    <Slide show={show} direction=\"right\">\n      <div\n        style={{\n          position: 'absolute',\n          width: '65%',\n          maxWidth: '375px',\n          height: '100vh',\n          backgroundColor: '#fff',\n          overflowY: 'scroll', //* 防止子margin-top影响父margin-top *\n          overflowX: 'hidden',\n          opacity: '1',\n          zIndex: '3000',\n        }}\n        className=\"transition-slide-right-self\"\n      >\n        {children}\n      </div>\n    </Slide>\n  );\n}\n\nDrawer.propTypes = {\n  show: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDrawer.defaultProps = {\n  show: true,\n  children: '',\n};\n\nexport default Drawer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Fade from './transitions/Fade';\n\nfunction Mask(props) {\n  const { show, onClick } = props;\n\n  return (\n    <Fade show={show}>\n      <div\n        onClick={onClick}\n        role=\"button\"\n        style={{\n          // display: show ? 'block' : 'none',\n          position: 'absolute',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n          top: '0',\n          left: '0',\n          height: '100vh',\n          width: '100%',\n          zIndex: '2000',\n        }}\n        className=\"transition-fade-self\"\n      />\n    </Fade>\n  );\n}\n\nMask.propTypes = {\n  onClick: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n};\n\nMask.defaultProps = {\n  onClick: () => {\n    /*eslint-disable*/\n    console.log('Mask:onClick');\n  },\n};\n\nexport default Mask;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { hideSideMenu } from '../../store/actions';\n\nimport TaskListContainer from '../TaskListContainer';\nimport MenuListContainer from '../MenuListContainer';\nimport Drawer from '../../components/Drawer';\nimport Mask from '../../components/mask';\n\nfunction SideMenuContainer(props) {\n  const { dispatch, showSideMenu } = props;\n  const onClickSideMenuMask = useCallback(() => {\n    dispatch(hideSideMenu());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Mask show={showSideMenu} onClick={onClickSideMenuMask} />\n      <Drawer show={showSideMenu}>\n        <TaskListContainer />\n        <MenuListContainer />\n      </Drawer>\n    </>\n  );\n}\n\nSideMenuContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showSideMenu: PropTypes.bool.isRequired,\n};\n\n// SideMenuContainer.defaultProps = {\n//   showSideMenu: true,\n// };\n\nconst mapState = ($state) => ({\n  showSideMenu: $state.getIn(['global', 'showSideMenu']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(SideMenuContainer);\n","/* eslint-disable arrow-parens */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction NotFound(props) {\n  const { message, time } = props;\n  const [isTimeout, setIsTimeout] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsTimeout(true);\n    }, time);\n\n    const intervalId = setInterval(() => {\n      setSeconds((prev) => prev + 1);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [time, setIsTimeout, setSeconds]);\n\n  return isTimeout ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div\n      style={{\n        padding: '20px',\n      }}\n    >\n      <h1>{message}</h1>\n      <h2>\n        {Math.round(time / 1000) - seconds}\n        秒后回到主页\n      </h2>\n    </div>\n  );\n}\n\nNotFound.propTypes = {\n  message: PropTypes.string,\n  time: PropTypes.number,\n};\n\nNotFound.defaultProps = {\n  message: '404 Not Found',\n  time: 3000,\n};\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AntdCheckbox from 'antd/es/checkbox';\n\nimport 'antd/es/checkbox/style';\n\nfunction Checkbox(props) {\n  return <AntdCheckbox {...props} />;\n}\n\nCheckbox.propTypes = {\n  onClick: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nCheckbox.defaultProps = {\n  onClick: null,\n  checked: false,\n  disabled: false,\n};\n\nexport default Checkbox;\n","import React, { useState, useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport Input from '@material-ui/core/Input';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\n\nimport Checkbox from './Checkbox';\nimport { uniqueId } from '../utils';\nimport Fade from './transitions/Fade';\nimport TransitionGroup from './transitions/TransitionGroup';\n\n\nfunction TaskItemList(props) {\n  const {\n    $task, onCreateNewTaskItem, onClickRemoveButton, isEditable, onClickCheckbox,\n  } = props;\n  const [newTaskItemTitle, setNewTaskItemTitle] = useState('');\n\n  const onInputNewTaskItem = useCallback((evt) => {\n    setNewTaskItemTitle(evt.target.value);\n  }, []);\n\n  const onKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      const taksItemTitle = evt.target.value;\n      if (taksItemTitle.length !== 0 && keyUp === KEY_ENTER) {\n        onCreateNewTaskItem(\n          Map({\n            id: uniqueId(),\n            title: taksItemTitle,\n            checked: false,\n          }),\n        );\n        setNewTaskItemTitle('');\n      }\n    },\n    [setNewTaskItemTitle, onCreateNewTaskItem],\n  );\n\n  return (\n    <List>\n      <ListItem dense>\n        <Typography variant=\"h4\" gutterBottom>\n          {$task.get('title')}\n        </Typography>\n      </ListItem>\n      <TransitionGroup>\n        {$task.getIn(['items', 'refs']).map((taskItemId) => {\n          const $item = $task.getIn(['items', 'entity', taskItemId]);\n          return (\n            <Fade key={$item.get('id')} timeout={600}>\n              <div>\n                <ListItem>\n                  <IconButton onClick={() => onClickCheckbox($item)}>\n                    <Checkbox disabled={isEditable} edge=\"start\" checked={$item.get('checked')} />\n                  </IconButton>\n                  <ListItemText primary={$item.get('title')} />\n                  {isEditable ? (\n                    <IconButton onClick={() => onClickRemoveButton($item)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  ) : null}\n                </ListItem>\n                <Divider variant=\"middle\" />\n              </div>\n            </Fade>\n          );\n        })}\n      </TransitionGroup>\n      {isEditable ? (\n        <ListItem>\n          <Input\n            value={newTaskItemTitle}\n            onKeyUp={onKeyEnterUp}\n            onChange={onInputNewTaskItem}\n            placeholder=\"新增待做事项\"\n            fullWidth\n          />\n        </ListItem>\n      ) : null}\n    </List>\n  );\n}\n\nTaskItemList.propTypes = {\n  $task: PropTypes.instanceOf(Map).isRequired,\n  onCreateNewTaskItem: PropTypes.func,\n  onClickRemoveButton: PropTypes.func,\n  isEditable: PropTypes.bool,\n  onClickCheckbox: PropTypes.func,\n};\n\nTaskItemList.defaultProps = {\n  onCreateNewTaskItem: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickRemoveButton: () => {\n    /* eslint-disable */\n    console.log('onCreateNewTaskItem');\n  },\n  onClickCheckbox: () => {\n    /* eslint-disable */\n    console.log('onClickCheckbox');\n  },\n  isEditable: false,\n};\n\nexport default TaskItemList;\n\n// export default TaskItemList;\n","import React, { useCallback, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport NotFound from '../../components/NotFound';\nimport TaskItemList from '../../components/TaskItemList';\nimport { taskActions } from '../../store/actions';\n\nfunction TodoListContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    $currentTodoTask,\n    dispatch,\n  } = props;\n\n  useEffect(() => {\n    dispatch(taskActions.effectGetTask(taskId));\n    return () => {\n      // 离开当前任务页面时，重置状态树中的currentTodoTask为null，保持状态树整洁\n      dispatch(taskActions.changeCurrentTodoTask(null));\n    };\n  }, [dispatch, taskId]);\n\n  // useEffect(() => {\n  //   dispatch(taskActions.changeCurrentTodoTaskById(taskId));\n  // }, [taskId, dispatch]);\n\n  const toggleTaskItemPropChecked = useCallback(\n    ($taskItem) => {\n      dispatch(taskActions.toggleTaskItemPropChecked($taskItem));\n    },\n    [dispatch],\n  );\n\n  if ($currentTodoTask == null) return <NotFound message=\"Loding...\" time={5000} />;\n\n  return (\n    <TaskItemList\n      onClickCheckbox={toggleTaskItemPropChecked}\n      $task={$currentTodoTask}\n      isEditable={false}\n    />\n  );\n}\n\nTodoListContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n      action: PropTypes.string,\n    }),\n  }).isRequired,\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $currentTodoTask: PropTypes.instanceOf(Map),\n  dispatch: PropTypes.func.isRequired,\n};\n\nTodoListContainer.defaultProps = {\n  $currentTodoTask: null,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentTodoTask: $task.get('currentTodoTask'),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(TodoListContainer);\n\n// export default TodoListContainer;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\nimport TransitionGroup from './transitions/TransitionGroup';\nimport Fade from './transitions/Fade';\n\nfunction PinnedTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"置顶任务\">\n      <Divider />\n      <TransitionGroup>\n        {$tasks.map($task => (\n          <Fade show key={$task.get('id')} timeout={300}>\n            <div>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                <IconButton onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                  <StarIcon />\n                </IconButton>\n              </ListItem>\n            </div>\n          </Fade>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nPinnedTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nPinnedTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default PinnedTaskList;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\n\nimport List from './List';\n\nimport { withStopEventtPropagation } from '../utils';\n\nfunction RecentTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List title=\"最近任务\">\n      <Divider />\n      {$tasks.map(($task) => (\n        <React.Fragment key={$task.get('id')}>\n          <ListItem onClick={() => onClickTask($task)} button>\n            <ListItemText primary={$task.get('title')} />\n            {$task.get('isPinned') ? null : (\n              <IconButton onClick={(evt) => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                <StarBorderIcon />\n              </IconButton>\n            )}\n          </ListItem>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n\nRecentTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nRecentTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  }\n};\n\nexport default RecentTaskList;\n","/* eslint-disable function-paren-newline */\nimport React, { useCallback, useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Map, List } from 'immutable';\nimport { connect } from 'react-redux';\n\nimport PinnedTaskList from '../components/PinnedTaskList';\n\nimport { editingTaskActions } from '../store/actions';\nimport RecentTaskList from '../components/RecentTaskList';\n\nfunction HomeContainer(props) {\n  const {\n    $tasksRefs,\n    dispatch,\n    history,\n    $tasksEntity,\n  } = props;\n\n  const $recentTasks = useMemo(\n    () =>\n      $tasksRefs.map(ref => $tasksEntity.get(ref)).sort(($taskA, $taskB) => {\n        const taskATime = $taskA.get('lastVisitTime') || 0;\n        const taskBTime = $taskB.get('lastVisitTime') || 0;\n        return taskBTime - taskATime;\n      }),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const $pinnedTasks = useMemo(\n    () => $tasksRefs.map(ref => $tasksEntity.get(ref)).filter($task => $task.get('isPinned')),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const pinOneTask = useCallback(\n    ($task) => {\n      const $pinndTask = $task.set('isPinned', true);\n      dispatch(editingTaskActions.effectUpdateTask($pinndTask));\n    },\n    [dispatch],\n  );\n\n  const unpinOneTask = useCallback(\n    ($task) => {\n      const $unpinndTask = $task.set('isPinned', false);\n      dispatch(editingTaskActions.effectUpdateTask($unpinndTask));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [history],\n  );\n\n  return (\n    <React.Fragment>\n      <PinnedTaskList\n        onClickIconButton={unpinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$pinnedTasks}\n      />\n      <RecentTaskList\n        onClickIconButton={pinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$recentTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nHomeContainer.propTypes = {\n  // $recentTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  // $pinnedTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $tasksRefs: PropTypes.instanceOf(List).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nHomeContainer.defaultProps = {};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $recentTaskIds: $task.get('recentTaskIds'),\n    $pinnedTaskIds: $task.get('pinnedTaskIds'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $tasksRefs: $task.getIn(['tasks', 'refs']),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(HomeContainer);\n","/* eslint-disable nonblock-statement-body-position */\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\n\nimport TaskItemList from '../components/TaskItemList';\nimport { taskActions, editingTaskActions } from '../store/actions';\nimport NotFound from '../components/NotFound';\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  const $editingTask = $state.get('editingTask');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentEditingTask: $editingTask.get('currentTask'),\n  };\n};\n\nfunction EditingTaskPageContainer(props) {\n  const {\n    match: {\n      params: { id: taskId },\n    },\n    dispatch,\n    // $tasksEntity,\n    $currentEditingTask,\n  } = props;\n\n  const [isTaskLoaded, setIsTaskLoaded] = useState(false);\n  const [isTaskTaskChanged, setIsTaskTaskChanged] = useState(false);\n\n  useEffect(() => {\n    // 根据taskid加载对应的将要被编辑的任务\n    if (!isTaskLoaded) {\n      // const $target = $tasksEntity.get(taskId) || null;\n      dispatch(editingTaskActions.effectGetTask(taskId));\n      if ($currentEditingTask != null) setIsTaskLoaded(true);\n    }\n  }, [dispatch, taskId, isTaskLoaded, setIsTaskLoaded, $currentEditingTask]);\n\n  useEffect(\n    () => () => {\n      // 因为根据taskId加载任务，所以taskId变化，即任务变化，所以每次切换任务，就要重置编辑历史，重置redo，undo按钮状态\n      // 即使退出也要重置状态，保持状态树的干净\n      dispatch(editingTaskActions.clearAllEdtingHistory());\n      // 退出任务, 重置为null，\n      dispatch(editingTaskActions.changeCurrentTask(null));\n    },\n    [taskId, dispatch],\n  );\n\n  useEffect(() => {\n    if (isTaskLoaded && isTaskTaskChanged) {\n      // 同步到云端 // 乐观更新\n      dispatch(editingTaskActions.effectUpdateTask($currentEditingTask));\n      // 将编辑后的任务保存到原任务上\n      dispatch(taskActions.updateTaskInTasks($currentEditingTask));\n    }\n  }, [isTaskLoaded, isTaskTaskChanged, dispatch, $currentEditingTask]);\n\n  const onCreateNewTaskItem = useCallback(\n    ($newTaskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.addTaskItemInCurrentTask($newTaskItem));\n      // 因为添加了新任务，所以清空重做任务列表，重置 重做 按钮状态，为了避免编辑状态混乱\n      dispatch(editingTaskActions.clearFutureTasks());\n      setIsTaskTaskChanged(true);\n    },\n    [dispatch],\n  );\n\n  const onClickRemoveButton = useCallback(\n    ($taskItem) => {\n      dispatch(editingTaskActions.snapshotCurrentTask());\n      dispatch(editingTaskActions.removeTaskItemInCurrentTask($taskItem));\n      setIsTaskTaskChanged(true);\n    },\n    [dispatch],\n  );\n\n  if ($currentEditingTask == null) return <NotFound message=\"Loding...\" />;\n\n  return (\n    <TaskItemList\n      onCreateNewTaskItem={onCreateNewTaskItem}\n      onClickRemoveButton={onClickRemoveButton}\n      $task={$currentEditingTask}\n      isEditable\n    />\n  );\n}\n\nEditingTaskPageContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  $currentEditingTask: PropTypes.instanceOf(Map),\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nEditingTaskPageContainer.defaultProps = {\n  $currentEditingTask: null,\n};\n\nexport default connect(\n  mapState,\n  null,\n)(EditingTaskPageContainer);\n\n// export default EditingTaskPageContainer;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport InputOnEnter from './InputOnEnter';\n\n\nfunction LoginArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onLogin, disabled } = props;\n\n  const isLogining = disabled;\n\n  const tryLogin = useCallback(() => {\n    // handleClickButton\n    onLogin({\n      username,\n      password,\n    });\n  }, [username, password, onLogin]);\n\n  const isDisabled = isLogining || username.trim() === '' || password.trim() === '';\n\n  const buttonText = isLogining ? '登录中...' : '登录';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <InputOnEnter onEnter={tryLogin} value={password} onChange={handleInputPassword} type=\"password\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={tryLogin} fullWidth>\n          {buttonText}\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nLoginArea.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nLoginArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default LoginArea;\n","import React, { useCallback } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport InputOnEnter from './InputOnEnter';\n\n\nfunction RegisterArea(props) {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleInputUsername = useCallback((evt) => setUsername(evt.target.value), [setUsername]);\n  const handleInputPassword = useCallback((evt) => setPassword(evt.target.value), [setPassword]);\n\n  const { onRegister, disabled } = props;\n\n  const tryRegister = useCallback(() => {\n    // handle click register button\n    onRegister({\n      username,\n      password,\n    });\n  }, [username, password, onRegister]);\n\n  const isDisabled = disabled || username.trim() === '' || password.trim() === '';\n\n  return (\n    <List>\n      <ListItem>\n        <TextField placeholder=\"请输入4到16位字母，数字\" value={username} onChange={handleInputUsername} type=\"text\" label=\"用户名\" fullWidth />\n      </ListItem>\n      <ListItem>\n        {/* 这里密码输入用type=text是为了用户视觉上可以确认所输入的密码 */}\n        <InputOnEnter onEnter={tryRegister} placeholder=\"请输入4到16位字母，数字\" value={password} onChange={handleInputPassword} type=\"text\" label=\"密码\" fullWidth />\n      </ListItem>\n      <ListItem>\n        <Button disabled={isDisabled} variant=\"outlined\" onClick={tryRegister} fullWidth>\n          注册\n        </Button>\n      </ListItem>\n    </List>\n  );\n}\n\nRegisterArea.propTypes = {\n  onRegister: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nRegisterArea.defaultProps = {\n  disabled: false,\n};\n\n\nexport default RegisterArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\nimport List from '@material-ui/core/List';\nimport { ListItem } from '@material-ui/core';\n\nfunction UserInfo(props) {\n  const { $userInfo } = props;\n\n  return (\n    <List>\n      <ListItem>\n        已经登录，欢迎您!\n      </ListItem>\n      <ListItem>\n        {`用户名: ${$userInfo.get('username')}`}\n      </ListItem>\n    </List>\n  );\n}\n\nUserInfo.propTypes = {\n  $userInfo: PropTypes.instanceOf(Map).isRequired,\n};\n\nUserInfo.defaultProps = {};\n\nexport default UserInfo;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Map } from 'immutable';\n\nimport LoginArea from '../components/LoginArea';\nimport RegisterArea from '../components/RegisterArea';\nimport { globalActions, userActions } from '../store/actions';\nimport { stopEventPropagation, uniqueId } from '../utils';\nimport LoginStatus from '../components/LoginStatus';\nimport Fade from '../components/transitions/Fade';\n\nconst usernamePattern = /^[a-zA-Z0-9_-]{4,16}$/;\nconst passwordPattern = /^[a-zA-Z0-9_-]{4,16}$/;\n\nfunction AccountManagerContainer(props) {\n  const {\n    dispatch,\n    showAccountManager,\n    hasLogin,\n    $userInfo,\n    isLogining,\n    isRegistering,\n  } = props;\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleClickMask = useCallback(() => {\n    dispatch(globalActions.hideAccountManager());\n  }, [dispatch]);\n\n  const handleTabChange = useCallback((evt, tabIndexChangedTo) => {\n    setTabIndex(tabIndexChangedTo);\n  }, []);\n\n  const handleLogin = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectLogin(userInfo));\n      } else {\n        dispatch(\n          globalActions.addOneNitification({\n            type: 'error',\n            title: '登录失败',\n            detail: '非法用户名或密码，请输入4到16位的字母或数字',\n            key: uniqueId('notify'),\n          }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleRegister = useCallback(\n    (userInfo) => {\n      const { username = '', password = '' } = userInfo;\n      if (usernamePattern.test(username) && passwordPattern.test(password)) {\n        dispatch(userActions.effectRegister(userInfo));\n      } else {\n        dispatch(\n          globalActions.addOneNitification({\n            type: 'error',\n            title: '注册失败',\n            detail: '非法用户名或密码，请输入4到16位的字母或数字',\n            key: uniqueId('notify'),\n          }),\n        );\n      }\n    },\n    [dispatch],\n  );\n\n  const handleClickLogoutButton = useCallback(() => {\n    dispatch(userActions.logout());\n  }, [dispatch]);\n\n  const loginArea = useMemo(\n    () => <LoginArea disabled={isLogining} onLogin={handleLogin} />,\n    [isLogining, handleLogin],\n  );\n  const registerArea = useMemo(\n    () => <RegisterArea disabled={isRegistering} onRegister={handleRegister} />,\n    [handleRegister, isRegistering],\n  );\n\n  const tabContentItems = [loginArea, registerArea];\n\n  return (\n    <Fade show={showAccountManager}>\n      <div\n        className=\"AccountManager\"\n        onClick={handleClickMask}\n        style={{\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          top: '0',\n          left: '0',\n          height: '100%',\n          width: '100%',\n          zIndex: '3000',\n          boxSizing: 'border-box',\n          padding: '0 50px',\n          backgroundColor: 'rgba(0, 0, 0, 0.25)',\n        }}\n      >\n        <Paper onClick={stopEventPropagation}>\n          {hasLogin ? (\n            <>\n              <LoginStatus $userInfo={$userInfo} />\n              <Button\n                fullWidth\n                variant=\"outlined\"\n                onClick={handleClickLogoutButton}\n              >\n                退出\n              </Button>\n            </>\n          ) : (\n            <>\n              <Tabs\n                value={tabIndex}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleTabChange}\n                centered\n              >\n                <Tab label=\"登录\" />\n                <Tab label=\"注册\" />\n              </Tabs>\n              <div>{tabContentItems[tabIndex]}</div>\n            </>\n          )}\n        </Paper>\n      </div>\n    </Fade>\n  );\n}\n\nAccountManagerContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  showAccountManager: PropTypes.bool.isRequired,\n  isLogining: PropTypes.bool.isRequired,\n  isRegistering: PropTypes.bool.isRequired,\n  hasLogin: PropTypes.bool.isRequired,\n  $userInfo: PropTypes.instanceOf(Map),\n};\n\nAccountManagerContainer.defaultProps = {\n  $userInfo: null,\n};\n\nconst mapState = ($state) => ({\n  showAccountManager: $state.getIn(['global', 'showAccountManager']),\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n  isLogining: $state.getIn(['user', 'isLogining']),\n  isRegistering: $state.getIn(['user', 'isRegistering']),\n  $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(AccountManagerContainer);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport ErrorIcon from '@material-ui/icons/Clear';\nimport SuccessIcon from '@material-ui/icons/Done';\nimport WarnIcon from '@material-ui/icons/PriorityHigh';\n\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader } from '@material-ui/core';\n\nimport { COLOR_GREEN, COLOR_RED, COLOR_YELLOW } from '../utils/constants';\n\nconst SUCCESS = 'success';\nconst ERROR = 'error';\nconst WARN = 'warn';\n\nconst TYPE_COLOR_MAPPING = {\n  [SUCCESS]: COLOR_GREEN,\n  [ERROR]: COLOR_RED,\n  [WARN]: COLOR_YELLOW,\n};\n\nfunction NotificationCard(props) {\n  const {\n    type, title, style, subtitle,\n  } = props;\n  const iconStyle = {\n    borderRadius: '50%',\n    overflow: 'hidden',\n    color: '#fff',\n    width: '48px',\n    height: '48px',\n    backgroundColor: TYPE_COLOR_MAPPING[type],\n  };\n  let icon = <WarnIcon style={iconStyle} />;\n  if (type === ERROR) icon = <ErrorIcon style={iconStyle} />;\n  if (type === SUCCESS) icon = <SuccessIcon style={iconStyle} />;\n\n  return (\n    <Card style={style}>\n      <CardHeader\n        avatar={icon}\n        title={title}\n        subheader={subtitle}\n        // subheader=\"status: 401\"\n      />\n    </Card>\n  );\n}\n\nNotificationCard.types = {\n  SUCCESS,\n  ERROR,\n  WARN,\n};\n\nNotificationCard.propTypes = {\n  type: PropTypes.oneOf([WARN, ERROR, SUCCESS]),\n  title: PropTypes.node.isRequired,\n  subtitle: PropTypes.node,\n  style: PropTypes.objectOf(PropTypes.string),\n};\n\nNotificationCard.defaultProps = {\n  type: 'none',\n  subtitle: null,\n  style: undefined,\n};\n\n\nexport default NotificationCard;\n","// import React, { useState, useEffect } from 'react';\nimport MaterialZoom from '@material-ui/core/Zoom';\n\nimport transitionEnhancer from './transitionEnhancer';\n\nexport default transitionEnhancer(MaterialZoom);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { List } from 'immutable';\n\nimport NotificationCard from '../components/NotificationCard';\nimport Zoom from '../components/transitions/Zoom';\nimport TransitionGroup from '../components/transitions/TransitionGroup';\n\nfunction NotificationsPanelContainer(props) {\n  const { $notifications } = props;\n  return (\n    <>\n      <div\n        className=\"NotificationsPanelContainer\"\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: '100%',\n          zIndex: '4000',\n          boxSizing: 'border-box',\n          padding: '0 20px',\n        }}\n      >\n        <TransitionGroup>\n          {$notifications.map(({\n            title, key, detail = null, type = 'warn',\n          }) => (\n            <Zoom key={key}>\n              <NotificationCard\n                style={{ marginTop: '20px' }}\n                type={type}\n                title={title}\n                subtitle={detail}\n              />\n            </Zoom>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n}\n\nNotificationsPanelContainer.propTypes = {\n  // dispatch: PropTypes.func.isRequired,\n  // showAccountManager: PropTypes.bool.isRequired,\n  // isLogining: PropTypes.bool.isRequired,\n  // isRegistering: PropTypes.bool.isRequired,\n  // hasLogin: PropTypes.bool.isRequired,\n  $notifications: PropTypes.instanceOf(List).isRequired,\n};\n\nNotificationsPanelContainer.defaultProps = {};\n\nconst mapState = ($state) => ({\n  $notifications: $state.getIn(['global', 'notifications']),\n  // hasLogin: $state.getIn(['user', 'hasLogin']),\n  // isLogining: $state.getIn(['user', 'isLogining']),\n  // isRegistering: $state.getIn(['user', 'isRegistering']),\n  // $userInfo: $state.getIn(['user', 'userInfo']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(NotificationsPanelContainer);\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBarContainer from '../../containers/AppBarContainer';\n\nimport SideMenuContainer from '../../containers/SideMenuContainer';\nimport TodoListContainer from '../../containers/TodoListContainer';\nimport HomeContainer from '../../containers/HomeContainer';\nimport EditingTaskPageContainer from '../../containers/EditingTaskPageContainer';\nimport AccountManagerContainer from '../../containers/AccountManagerContainer';\nimport NotificationsPanelContainer from '../../containers/NotificationsPanelContainer';\n\nfunction Index() {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: '100vh',\n        display: 'flex',\n        flexFlow: 'column nowrap',\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          flex: '1',\n          overflowY: 'scroll',\n          overflowX: 'hidden',\n        }}\n      >\n        <Switch>\n          <Route path=\"/todo/:id\" component={TodoListContainer} />\n          <Route path=\"/edit/:id\" component={EditingTaskPageContainer} />\n          <Route component={HomeContainer} />\n        </Switch>\n      </div>\n      <NotificationsPanelContainer />\n      <AppBarContainer />\n      <SideMenuContainer />\n      <AccountManagerContainer />\n    </div>\n  );\n}\n\n// Index.propTypes = {\n//   // dispatch: PropTypes.func.isRequired,\n//   // children: PropTypes.node,\n// };\n\n// Index.defaultProps = {\n//   // children: '',\n// };\n\nexport default Index;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLocalJWT } from '../utils';\nimport { userActions, taskActions } from '../store/actions';\n\nfunction InitWrapperContainer(props) {\n  const { children, dispatch, hasLogin } = props;\n  useEffect(() => {\n    // 自动登录\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return;\n    dispatch(userActions.effectGetUserInfo());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (hasLogin) {\n      dispatch(taskActions.effectGetTaskList());\n    }\n  }, [dispatch, hasLogin]);\n\n  return <>{children}</>;\n}\n\nInitWrapperContainer.propTypes = {\n  hasLogin: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapState = ($state) => ({\n  hasLogin: $state.getIn(['user', 'hasLogin']),\n});\n\nexport default connect(\n  mapState,\n  null,\n)(InitWrapperContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Index from './Layout/Index';\n// import TodoListContainer from './containers/TodoListContainer';\n\n// import { isDev } from './env';\n\nimport { store } from './store';\nimport InitWrapperContainer from './containers/InitWrapperContainer';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <InitWrapperContainer>\n        <Router>\n          <Route path=\"/\" component={Index} />\n        </Router>\n      </InitWrapperContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\n// import * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './index.scss';\n// import 'antd/dist/antd.css';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}