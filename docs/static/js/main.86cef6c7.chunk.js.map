{"version":3,"sources":["utils/index.js","env.js","store/global/reducer.js","store/tasks/reducer.js","store/editingTask/reducer.js","store/user/reducer.js","store/reducer.js","utils/request.js","config.js","store/user/saga.js","store/effect/sagas.js","store/tasks/saga.js","store/editingTask/saga.js","store/global/sagas.js","store/rootSaga.js","store/index.js","pages/AccountPage/index.jsx","components/Checkbox.jsx","components/FullScreenLoading.jsx","containers/TodoListContainer/ui/TodoListHeader.jsx","containers/TodoListContainer/ui/TaskItem.jsx","containers/TodoListContainer/index.jsx","containers/PinnedAndRecentTaskList/components/PinnedTaskList.jsx","containers/PinnedAndRecentTaskList/components/RecentTaskList.jsx","containers/PinnedAndRecentTaskList/index.jsx","components/HomeButton.jsx","containers/CompleteTaskButton.jsx","containers/TaskEditorButton.jsx","containers/AppBar/ui/StartTaskButton.jsx","containers/AppBar/AppBarButton.jsx","containers/AppBar/index.jsx","containers/NotificationsPanelContainer/ui/NotificationCard.jsx","containers/NotificationsPanelContainer/index.jsx","layouts/CommonLayout.jsx","containers/TaskEditor/ui/TaskEditorHeader.jsx","containers/TaskEditor/ui/EditableTaskItemCollection.jsx","containers/TaskEditor/ui/TaskItemCreator.jsx","containers/TaskEditor/index.jsx","pages/HomePage/index.jsx","routes/RootRoutes.jsx","App.jsx","Entry.jsx","index.js","store/editingTask/actionTypes.js","store/tasks/actionTypes.js","store/user/actionTypes.js","store/global/actionTypes.js","utils/constants.js","store/effect/actionTypes.js","store/tasks/actions.js","store/global/actions.js","store/editingTask/actions.js","store/effect/actions.js","store/user/actions.js","store/actions.js","components/TextFieldOnKeyEnterUp.jsx","hooks/index.js"],"names":["__webpack_require__","d","__webpack_exports__","uniqueId","withStopEventtPropagation","stopEventPropagation","normalize","denormalize","getLocalJWT","setLocalJWT","makeDebounced","count","timestamp","Date","now","toString","prefix","arguments","length","undefined","ramdomNumsStr","concat","String","Math","round","random","id","func","evt","stopPropagation","_len","args","Array","_key","apply","arr","name","key","result","entity","refs","forEach","oriObj","identityKey","push","obj","entityName","refsName","map","ref","localStorage","getItem","jwt","setItem","fn","timeout","timerId","_len2","_key2","clearTimeout","setTimeout","host","defaultState","fromJS","showSideMenu","showAccountManager","notifications","globalReducer","state","action","_action$type","type","_action$payload","payload","Error","actionTypes","set","rawInfo","get","shift","tasks","currentTodoTask","TasksReducer","tasksEntity","getIn","tasksRefs","tasksTobeChangedTo","newTask","merge","targetId","delete","filter","todoTask","propPath","setIn","taskId","task","userActionTypes","LOGOUT","clear","currentTask","futureTasks","oldTasks","editingTaskReducer","taskItems","taskItemsEntity","taskItemsRefs","$taskItem","tid","newTitle","oldTask","last","pop","futureTask","hasLogin","userInfo","isLogining","isRegistering","userReducer","loginInfo","reducers","combineReducers","global","tasksReducer","editingTask","user","isDev","location","some","hs","includes","request","Axios","create","baseURL","interceptors","use","config","changedConfig","headers","Authorization","err","Promise","reject","serverError","title","detail","response","axiosError","errorResp","data","getUserInfo","login","loginByJWT","register","_ref","regenerator_default","a","wrap","_context","prev","next","call","sent","put","userActions","loginSuccess","t0","console","error","stop","_marked","_ref2","loginResp","_loginResp$user","userInfoResp","token","rest","_context2","post","Object","objectWithoutProperties","objectSpread","globalActions","addOneNitification","loginFail","_marked2","_ref3","_context3","_marked3","_ref4","registerResp","_registerResp$user","_context4","registerSuccess","message","registerFail","_marked4","saga","takeEvery","EFFECT_GET_USERINFO","takeLatest","EFFECT_LOGIN_BY_JWT","EFFECT_REGISTER","EFFECT_LOGIN","get$TaskById","updateTaskBy$task","rawTask","items","$task","abrupt","sagas_marked","_$task$toJS","updatedTask","updatedItems","updatedRest","$updatedTask","errorInfo","toJS","sagas_marked2","getTaskList","deleteTaskById","get$TaskThenChangeAndUpdate","rowTaskList","$tasks","taskActions","changeTasks","saga_marked","saga_marked2","changeCurrentTodoTask","updateTaskInTasks","saga_marked3","tasks_saga","taskActionTypes","EFFECT_GET_TASK_LIST","EFFECT_DELETE_TASK","EFFECT_GET_TASK","updateTaskThenSyncInTasks","get$TaskThenChange","editingTask_saga_marked","editingTaskActions","changeCurrentTask","editingTask_saga_marked2","editingTask_saga","editingTaskActionTypes","EFFECT_UPDATE_TASK","removeTheTopNotificationAfterWhile","ms","resolve","removeTheTopNitification","global_sagas_marked","sagas","globalActionTypes","ADD_ONE_NOTIFICATION","createTask","mySaga","taskResp","addTaskToTasks","rootSaga_marked","effectActionTypes","EFFECT_CREATE_TASK","all","toConsumableArray","userSagas","taskSagas","editingTaskSagas","globalSagas","rootSaga_marked2","store","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","log","createStore","applyMiddleware","run","rootSaga","LazyAccountManagerContainer","React","lazy","e","then","bind","AccountPage","react_default","createElement","react","fallback","Checkbox","props","defaultProps","onClick","checked","disabled","FullScreenLoading","style","display","height","justifyContent","alignItems","CircularProgress","TodoListHeader","memo","onClickEditButton","List","ListItem","dense","Typography","variant","IconButton","BorderColor_default","TaskItem","doOnClick","useCallback","isChecked","opacity","Fragment","button","components_Checkbox","edge","ListItemText","primary","Divider","TodoListContainer","$currentTodoTask","useParams","history","useHistory","dispatch","useDispatch","useEffect","effectGetTask","_useMemo","useMemo","unfinished","finished","taskItemId","_useMemo2","slicedToArray","unfinishedTaskItemRefs","finishedTaskItemRefs","toggleTaskItemPropChecked","jumpToEditingPage","ui_TodoListHeader","TransitionGroup","$item","Slide","direction","ui_TaskItem","withRouter","connect","$state","$global","$tasksEntity","PinnedTaskList","onClickTask","onClickIconButton","onClickIconButtonWithStopEvtPropagation","subheader","ListSubheader","component","Fade","Star_default","RecentTaskList","StarBorder_default","PinnedAndRecentTaskList","$tasksRefs","$recentTasks","sort","$taskA","$taskB","taskATime","$pinnedTasks","pinOneTask","$pinndTask","effectUpdateTask","unpinOneTask","$unpinndTask","components_PinnedTaskList","components_RecentTaskList","$recentTaskIds","$pinnedTaskIds","HomeButton","needDoubleClick","forceUpdate","useForceUpdate","clickCountRef","useRef","timerIdRef","current","clickCountSoFar","backgroundColor","transition","Home_default","CompleteTaskButton","buttonText","buttonColor","$tasksItemsEntity","$tasksItemsRefs","$unchckedTaskItems","numOfAllTaskItem","size","numOfCheckedItem","isAllComleted","hasZeroTaskItem","onClickCompleteButton","checkTaskItemInTaskItemsByTaskId","COLOR_RED","COLOR_GREEN","COLOR_ORANGE","Button","color","fullWidth","aria-label","Map","$editingTask","$futureTasks","$oldTasks","isUndoBtnDisabled","isRedoBtnDisabled","undoEditing","undoCurrentTask","redoEditing","redoCurrentTask","ButtonGroup","StartTaskButton","COLOR_BLUE","hasLoginSelector","isLoginingSelecotr","AppBarButton","useSelector","onClickStartOneTaskButton","jumpToLoginPage","react_router","path","TaskEditorButton","CompleteTaskButtonContainer","render","ui_StartTaskButton","AppBarContainer","onClickMenuButton","onClickHomeButton","AppBar","position","Toolbar","Menu_default","className","flex","padding","AppBar_AppBarButton","components_HomeButton","SUCCESS","ERROR","TYPE_COLOR_MAPPING","_TYPE_COLOR_MAPPING","defineProperty","COLOR_YELLOW","NotificationCard","forwardRef","subtitle","iconStyle","borderRadius","overflow","width","icon","PriorityHigh_default","Clear_default","Done_default","Card","CardHeader","avatar","types","WARN","propTypes","PropTypes","oneOf","node","isRequired","objectOf","oneOfType","string","number","notificationsSelector","NotificationsPanelContainer","$notifications","top","left","zIndex","boxSizing","_ref$detail","_ref$type","Zoom","ui_NotificationCard","marginTop","SideMenuContainer","CommonLayout","children","isShowSideMenu","hasSideMenuShowed","useHasBeenTrued","flexFlow","overflowY","overflowX","containers_AppBar","containers_NotificationsPanelContainer","TaskEditorHeader","onChange","TextFieldOnKeyEnterUp","value","onKeyEnterUp","placeholder","EditableTaskItemList","$items","onClickDeleteButton","DeleteForever_default","TaskItemCreator","onCreateTaskItem","_useState","useState","_useState2","itemTitle","setItemTitle","handleChange","target","doOnCreateTaskItem","trim","$newTaskItem","currentEditingTaskSelector","TaskEditor","$currentEditingTask","debouncedEffectUpdateTask","clearAllEdtingHistory","addNewTaskItem","snapshotCurrentTask","addTaskItemInCurrentTask","clearFutureTasks","removeTaskItem","removeTaskItemInCurrentTask","$taskItems","ImmutableList","changeTaskTitle","changeCurrentTaskTitle","TaskEditor_ui_TaskEditorHeader","EditableTaskItemCollection","ui_TaskItemCreator","HomePage","effectGetTaskList","layouts_CommonLayout","RootRoutes","App","effectLoginByJWT","react_router_dom","routes_RootRoutes","Entry","es","src_App","ReactDOM","document","getElementById","r","CHANGE_CURRENT_TASK","ADD_TASK_ITEM_IN_CURRENT_TASK","REMOVE_TASK_ITEM_IN_CURRENT_TASK","CHANGE_CURRENT_TASK_TITLE","SNAPSHOT_CURRENT_TASK","UNDO_CURRENT_TASK","REDO_CURRENT_TASK","CLEAR_FUTURE_TASKS","CLEAR_EDITNG_HISTORY","CHANGE_TASKS","ADD_TASK_TO_TASKS","REMOVE_TASK_IN_TASKS","CHANGE_CURRENT_TODO_TASK","CHANGE_CURRENT_TODO_TASK_BY_ID","CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID","TOGGLE_TASK_ITEM_CHECKED","UPDATE_TASK_IN_TASKS","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","SHOW_SIDE_MENU","HIDE_SIDE_MENU","REMOVE_THE_TOP_NOTIFICATION","removeTaskInTasks","changeCurrentTodoTaskById","effectDeleteTask","hideSideMenu","info","updateTask","$loginInfo","logout","$registerInfo","effectGetUserInfo","effectLogin","effectRegister","actions_showSideMenu","actions_hideSideMenu","actions_namespaceObject","global_actions_namespaceObject","editingTask_actions_namespaceObject","user_actions_namespaceObject","effect_actions_namespaceObject","_mnt_e_docs_gitcodes_monica_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","doOnKeyEnterUp","_evt$keyCode","keyCode","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2__","assign","onKeyUp","useIsOnline","navigator","onLine","_mnt_e_docs_gitcodes_monica_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOnline","setIsOnline","onlineListener","offlineListener","addEventListener","removeEventListener","status","initialStausRef","_useState3","setUpdateCount","prevCount"],"mappings":"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","file":"static/js/main.86cef6c7.chunk.js","sourcesContent":["// import { isDev } from '../env';\n\nexport const uniqueId = (function saveNextId() {\n  let count = -1;\n  const timestamp = Date.now().toString();\n  return function generatorOfUniqueId(prefix = '') {\n    count += 1;\n    const ramdomNumsStr = `${String(Math.round(Math.random() * 100000000))}-${String(Math.round(Math.random() * 100000000))}`;\n    const id = `${ramdomNumsStr}-${timestamp}-${count}`;\n    if (prefix.length === 0) return id;\n    return `${prefix}-${id}`;\n  };\n}());\n\n// export function deepCopy(obj) {\n//   return JSON.parse(JSON.stringify(obj));\n// }\n\nexport function withStopEventtPropagation(func) {\n  return (evt, ...args) => {\n    evt.stopPropagation();\n    return func(...args);\n  };\n}\n\nexport function stopEventPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n *\n * @param {Array} arr\n * @param {String} name\n * @param {String} key\n */\nexport function normalize(arr, name = 'entity', key = 'id') {\n  const result = {};\n  const entity = {};\n  const refs = [];\n  const refsName = 'refs';\n  result[name] = entity;\n  result[refsName] = refs;\n  arr.forEach((oriObj) => {\n    const identityKey = oriObj[key];\n    refs.push(identityKey);\n    entity[identityKey] = oriObj;\n  });\n  return result;\n}\n\nexport function denormalize(obj, entityName = 'entity', refsName = 'refs') {\n  const result = obj[refsName].map((ref) => obj[entityName][ref]);\n  return result;\n}\n\nexport function getLocalJWT() {\n  return localStorage.getItem('__jwt') || '';\n}\n\nexport function setLocalJWT(jwt) {\n  localStorage.setItem('__jwt', jwt);\n}\n\nexport function makeDebounced(fn, timeout = 1000) {\n  let timerId = null;\n  return (...args) => {\n    if (timerId != null) {\n      clearTimeout(timerId);\n      timerId = null;\n    }\n    timerId = setTimeout(() => {\n      timerId = null;\n      fn(...args);\n    }, timeout);\n  };\n}\n\n// window.getLocalJWT = getLocalJWT;\n// window.setLocalJWT = setLocalJWT;\n","/**\n * @param {String} host\n */\nconst createIsDev = host => () => {\n  const hosts = ['localhost', '127.0.0.1'];\n  return hosts.some(hs => host.includes(hs));\n};\n\n// eslint-disable-next-line no-restricted-globals\nexport const isDev = createIsDev(location.host);\n// export const isDev = () => false;\nexport const foo = 'nothing';\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  showSideMenu: false,\n  showAccountManager: false,\n  notifications: [], // 存储原生js的对象，非immutable\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst globalReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  // const { type = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.SHOW_SIDE_MENU: {\n      return state.set('showSideMenu', true);\n    }\n    case actionTypes.HIDE_SIDE_MENU: {\n      return state.set('showSideMenu', false);\n    }\n    case actionTypes.ADD_ONE_NOTIFICATION: {\n      const rawInfo = payload;\n      return state.set('notifications', state.get('notifications').push(rawInfo));\n    }\n    case actionTypes.REMOVE_THE_TOP_NOTIFICATION: {\n      return state.set('notifications', state.get('notifications').shift());\n    }\n    default:\n      return state;\n  }\n};\n\nexport default globalReducer;\n","/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { normalize } from '../../utils';\nimport { userActionTypes } from '../actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  tasks: normalize([]),\n  currentTodoTask: null,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst TasksReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n  // 快捷访问方式\n  /** @type Map<String, any> */\n  const tasks = state.get('tasks');\n  /** @type Map<String, any> */\n  const tasksEntity = state.getIn(['tasks', 'entity']);\n  /** @type List<String> */\n  const tasksRefs = state.getIn(['tasks', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_TASKS: {\n      const tasksTobeChangedTo = payload;\n      return state.set('tasks', tasksTobeChangedTo);\n    }\n    case actionTypes.ADD_TASK_TO_TASKS: {\n      const { payload: newTask } = action;\n      const id = newTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.set(id, newTask),\n          refs: tasksRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_IN_TASKS: {\n      const targetTask = payload;\n      const targetId = targetTask.get('id');\n      return state.set(\n        'tasks',\n        tasks.merge({\n          entity: tasksEntity.delete(targetId),\n          refs: tasksRefs.filter((id) => id !== targetId),\n        }),\n      );\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK: {\n      const todoTask = payload;\n      return state.set('currentTodoTask', todoTask);\n    }\n    case actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID: {\n      const id = payload;\n      return state.set('currentTodoTask', state.getIn(['tasks', 'entity', id]));\n    }\n\n    // editing task item\n\n    case actionTypes.TOGGLE_TASK_ITEM_CHECKED: {\n      const taskItem = payload;\n      const propPath = [\n        'currentTodoTask',\n        'items',\n        'entity',\n        taskItem.get('id'),\n        'checked',\n      ];\n      return state.setIn(propPath, !state.getIn(propPath));\n    }\n\n    // case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX: {\n    //   const taskItemIndex = payload;\n    //   const targetTaskItemId = state.getIn([\n    //     'currentTodoTask',\n    //     'items',\n    //     'refs',\n    //     taskItemIndex,\n    //   ]);\n    //   return state.setIn(\n    //     ['currentTodoTask', 'items', 'entity', targetTaskItemId, 'checked'],\n    //     true,\n    //   );\n    // }\n\n    case actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID: {\n      const taskId = payload;\n      return state.setIn(\n        ['currentTodoTask', 'items', 'entity', taskId, 'checked'],\n        true,\n      );\n    }\n\n    // case actionTypes.UPDARE_TASK_FROM_EDTING: {\n    //   const task = payload;\n    //   const id = task.get('id');\n    //   return state.setIn(['tasks', 'entity', id], task);\n    // }\n    case actionTypes.UPDATE_TASK_IN_TASKS: {\n      const task = payload;\n      const id = task.get('id');\n      return state.setIn(['tasks', 'entity', id], task);\n    }\n\n    // user\n\n    case userActionTypes.LOGOUT: {\n      return state.set('tasks', state.get('tasks').merge({\n        entity: tasksEntity.clear(),\n        refs: tasksRefs.clear(),\n      }));\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default TasksReducer;\n","/* eslint-disable arrow-parens */\n/* eslint-disable */\nimport { fromJS, Map, List } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  currentTask: null,\n  futureTasks: [],\n  oldTasks: [],\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst editingTaskReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error('action: {action} does not has type!');\n  }\n\n  const taskItems = state.getIn(['currentTask', 'items']);\n  const taskItemsEntity = state.getIn(['currentTask', 'items', 'entity']);\n  const taskItemsRefs = state.getIn(['currentTask', 'items', 'refs']);\n\n  switch (action.type) {\n    case actionTypes.CHANGE_CURRENT_TASK: {\n      const task = payload;\n      return state.set('currentTask', task);\n    }\n    case actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.set(id, $taskItem),\n          refs: taskItemsRefs.push(id),\n        }),\n      );\n    }\n    case actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK: {\n      const $taskItem = payload;\n      const id = $taskItem.get('id');\n      return state.setIn(\n        ['currentTask', 'items'],\n        taskItems.merge({\n          entity: taskItemsEntity.delete(id),\n          refs: taskItemsRefs.filter((tid) => tid !== id),\n        }),\n      );\n    }\n    case actionTypes.CHANGE_CURRENT_TASK_TITLE: {\n      const newTitle = payload;\n      return state.setIn(['currentTask', 'title'], newTitle);\n    }\n    case actionTypes.UNDO_CURRENT_TASK: {\n      const oldTasks = state.get('oldTasks');\n      if (oldTasks.length !== 0) {\n        const futureTasks = state.get('futureTasks');\n        const currentTask = state.get('currentTask');\n        const oldTask = oldTasks.last();\n        return state.merge({\n          currentTask: oldTask,\n          futureTasks: futureTasks.push(currentTask),\n          oldTasks: oldTasks.pop(),\n        });\n      }\n      return state;\n    }\n    case actionTypes.REDO_CURRENT_TASK: {\n      const futureTasks = state.get('futureTasks');\n      if (futureTasks.length !== 0) {\n        const oldTasks = state.get('oldTasks');\n        const currentTask = state.get('currentTask');\n        const futureTask = futureTasks.last();\n        return state.merge({\n          currentTask: futureTask,\n          futureTasks: futureTasks.pop(),\n          oldTasks: oldTasks.push(currentTask),\n        });\n      }\n      return state;\n    }\n    case actionTypes.SNAPSHOT_CURRENT_TASK: {\n      const currentTask = state.get('currentTask');\n      if (currentTask != null) {\n        const oldTasks = state.get('oldTasks');\n        return state.set('oldTasks', oldTasks.push(currentTask));\n      }\n      return state;\n    }\n    case actionTypes.CLEAR_FUTURE_TASKS: {\n      return state.set('futureTasks', state.get('futureTasks').clear());\n    }\n    case actionTypes.CLEAR_EDITNG_HISTORY: {\n      return state.merge({\n        futureTasks: state.get('futureTasks').clear(),\n        oldTasks: state.get('oldTasks').clear(),\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default editingTaskReducer;\n","/* eslint-disable */\nimport { fromJS, Map } from 'immutable';\n/* eslint-enable */\n\nimport * as actionTypes from './actionTypes';\nimport { setLocalJWT } from '../../utils';\n\n/**\n * @type Map<string, any>;\n */\nconst defaultState = fromJS({\n  hasLogin: false,\n  userInfo: null,\n  isLogining: false,\n  isRegistering: false,\n});\n\n/**\n *\n * @param {Map<string, any>} state\n * @param {{type: string, action?: any}} action\n */\nconst userReducer = (state = defaultState, action) => {\n  const { type = null, payload = null } = action;\n  if (type == null) {\n    throw new Error(`action: ${action} does not has type!`);\n  }\n  switch (action.type) {\n    case actionTypes.EFFECT_LOGIN_BY_JWT:\n    case actionTypes.EFFECT_LOGIN: {\n      return state.set('isLogining', true);\n    }\n    case actionTypes.EFFECT_REGISTER: {\n      return state.set('isRegistering', true);\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isLogining: false }, loginInfo);\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return state.set('isLogining', false);\n    }\n    case actionTypes.LOGOUT: {\n      setLocalJWT(''); // 清空本地jwt\n      return state.merge({\n        hasLogin: false,\n        userInfo: null,\n        isLogining: false,\n        isRegistering: false,\n      });\n    }\n    case actionTypes.REGISTER_SUCCESS: {\n      const loginInfo = payload;\n      return state.merge({ hasLogin: true, isRegistering: false }, loginInfo);\n    }\n    case actionTypes.REGISTER_FAIL: {\n      return state.set('isRegistering', false);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux-immutable';\n\nimport globalReducer from './global/reducer';\nimport tasksReducer from './tasks/reducer';\nimport editingTaskReducer from './editingTask/reducer';\nimport userReducer from './user/reducer';\n\n\nconst reducers = combineReducers({\n  global: globalReducer,\n  task: tasksReducer,\n  editingTask: editingTaskReducer,\n  user: userReducer,\n});\n\n/* eslint-disable */\n\nexport default reducers;\n","import Axios from 'axios';\nimport { getRemoteHostUrl } from '../config';\nimport { getLocalJWT, uniqueId } from '.';\n\nexport const request = Axios.create({\n  baseURL: getRemoteHostUrl(),\n  timeout: 1000,\n});\n\nexport const foo = ';';\n\nrequest.interceptors.request.use(\n  (config) => {\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return config;\n    const changedConfig = config;\n    changedConfig.headers.Authorization = `Bearer ${jwt}`;\n    return changedConfig;\n  },\n  (err) => Promise.reject(err),\n);\n\nconst serverError = {\n  title: '网络请求失败',\n  detail: '请稍后再试',\n  type: 'error',\n  key: uniqueId('error'),\n};\n\nrequest.interceptors.response.use(\n  (config) => config,\n  (axiosError) => {\n    try {\n      const {\n        response: {\n          data: errorResp,\n        },\n      } = axiosError;\n      errorResp.type = 'error';\n      errorResp.key = uniqueId('error');\n      return Promise.reject(errorResp);\n    } catch (err) {\n      return Promise.reject(serverError);\n    }\n  },\n);\n","/* eslint-disable import/prefer-default-export */\nimport { isDev } from './env';\n\nexport function getRemoteHostUrl() {\n  if (isDev()) return 'http://localhost:3031/';\n  return 'http://101.37.174.138/';\n}\n","import {\n  call, put, takeEvery, takeLatest,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { userActionTypes } from '../actionTypes';\nimport { request } from '../../utils/request';\nimport { setLocalJWT, uniqueId } from '../../utils';\nimport { userActions, globalActions } from '../actions';\n\nfunction* getUserInfo() {\n  try {\n    const { data: userInfo } = yield call(request.get, '/users');\n    yield put(userActions.loginSuccess({\n      userInfo: fromJS(userInfo),\n    }));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('登录失败', err);\n    setLocalJWT('');\n  }\n}\n\nfunction* login(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: loginResp } = yield call(\n      request.post,\n      '/users/login',\n      userInfo,\n    );\n    const { user: userInfoResp = null, token, ...rest } = loginResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.loginSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '登陆成功',\n      key: uniqueId('notifi'),\n    }));\n  } catch (errResp) {\n    yield put(userActions.loginFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* loginByJWT() {\n  // request会自动带上jwt，不用手动传递\n  try {\n    const { data: userInfo } = yield call(request.get, '/users');\n    yield put(userActions.loginSuccess({\n      userInfo: fromJS(userInfo),\n    }));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('登录失败', err);\n    setLocalJWT('');\n  }\n}\n\nfunction* register(action) {\n  try {\n    const { payload: userInfo } = action;\n    const { data: registerResp } = yield call(request.post, '/users', userInfo);\n    const { user: userInfoResp = null, token, ...rest } = registerResp;\n    setLocalJWT(token);\n    yield put(\n      userActions.registerSuccess(\n        fromJS({\n          token,\n          userInfo: userInfoResp,\n          ...rest,\n        }),\n      ),\n    );\n    yield put(globalActions.addOneNitification({\n      type: 'success',\n      title: '注册成功',\n      message: '已经为您自动登录应用',\n    }));\n  } catch (errResp) {\n    yield put(userActions.registerFail());\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nexport default [\n  takeEvery(userActionTypes.EFFECT_GET_USERINFO, getUserInfo),\n  takeLatest(userActionTypes.EFFECT_LOGIN_BY_JWT, loginByJWT),\n  takeLatest(userActionTypes.EFFECT_REGISTER, register),\n  takeLatest(userActionTypes.EFFECT_LOGIN, login),\n];\n","// 在这里抽离出公共的saga函数\nimport { fromJS } from 'immutable';\n\nimport { call, put } from 'redux-saga/effects';\nimport { request } from '../../utils/request';\n\nimport { normalize, denormalize } from '../../utils';\nimport { globalActions } from '../actions';\n\nexport function* get$TaskById(taskId) {\n  try {\n    const { data: rawTask } = yield call(request.get, `/tasks/${taskId}`);\n    const { items, ...rest } = rawTask;\n    const $task = fromJS({\n      ...rest,\n      items: normalize(items),\n    });\n    return $task;\n  } catch (errResp) {\n    yield put(globalActions.addOneNitification(errResp));\n    return null;\n  }\n}\n\nexport function* updateTaskBy$task($task) {\n  try {\n    const { items, ...rest } = $task.toJS();\n    const task = {\n      ...rest,\n      items: denormalize(items),\n      timestamp: Date.now(),\n    };\n    const { data: updatedTask } = yield call(\n      request.put,\n      `/tasks/${task.id}`,\n      task,\n    );\n    const { items: updatedItems, ...updatedRest } = updatedTask;\n    const $updatedTask = fromJS({\n      ...updatedRest,\n      items: normalize(updatedItems),\n    });\n\n    return $updatedTask;\n  } catch (errResp) {\n    const { data: errorInfo } = errResp;\n    errorInfo.type = 'error';\n    errorInfo.title = '编辑任务失败';\n    yield put(globalActions.addOneNitification(errorInfo));\n    return null;\n  }\n}\n\nexport const foo = ' foo';\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\nimport { request } from '../../utils/request';\nimport { normalize } from '../../utils';\nimport { taskActions } from '../actions';\nimport { taskActionTypes } from '../actionTypes';\nimport { get$TaskById } from '../effect/sagas';\n\nfunction* getTaskList() {\n  try {\n    const { data: rowTaskList } = yield call(request.get, '/tasks');\n    const $tasks = fromJS(\n      normalize(\n        rowTaskList.map(({ items, ...rest }) => ({\n          ...rest,\n          items: fromJS(normalize(items)),\n        })),\n      ),\n    );\n    yield put(taskActions.changeTasks($tasks));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* deleteTaskById({ payload: taskId }) {\n  try {\n    yield call(request.delete, `/tasks/${taskId}`);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}\n\nfunction* get$TaskThenChangeAndUpdate({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(taskActions.changeCurrentTodoTask($task));\n  yield put(taskActions.updateTaskInTasks($task));\n}\n\n\nexport default [\n  takeEvery(taskActionTypes.EFFECT_GET_TASK_LIST, getTaskList),\n  takeEvery(taskActionTypes.EFFECT_DELETE_TASK, deleteTaskById),\n  takeEvery(taskActionTypes.EFFECT_GET_TASK, get$TaskThenChangeAndUpdate),\n];\n","import { call, takeEvery, put } from 'redux-saga/effects';\n\nimport { editingTaskActionTypes } from '../actionTypes';\nimport { taskActions, editingTaskActions } from '../actions';\nimport { get$TaskById, updateTaskBy$task } from '../effect/sagas';\n\nfunction* updateTaskThenSyncInTasks({ payload: $task }) {\n  const $updatedTask = yield call(updateTaskBy$task, $task);\n  if ($updatedTask == null) return;\n  yield put(taskActions.updateTaskInTasks($updatedTask));\n}\n\nfunction* get$TaskThenChange({ payload: taskId }) {\n  const $task = yield call(get$TaskById, taskId);\n  if ($task == null) return;\n  yield put(editingTaskActions.changeCurrentTask($task));\n}\n\nexport default [\n  takeEvery(editingTaskActionTypes.EFFECT_UPDATE_TASK, updateTaskThenSyncInTasks),\n  takeEvery(editingTaskActionTypes.EFFECT_GET_TASK, get$TaskThenChange),\n];\n","import {\n  call, put, takeEvery,\n} from 'redux-saga/effects';\nimport { globalActionTypes } from '../actionTypes';\nimport { globalActions } from '../actions';\n\nconst timeout = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction* removeTheTopNotificationAfterWhile() {\n  yield call(timeout, 3000);\n  yield put(globalActions.removeTheTopNitification());\n}\n\nexport default [\n  takeEvery(\n    globalActionTypes.ADD_ONE_NOTIFICATION,\n    removeTheTopNotificationAfterWhile,\n  ),\n];\n","import {\n  call, put, takeEvery, all,\n} from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport { effectActionTypes } from './actionTypes';\nimport { request } from '../utils/request';\nimport { taskActions, globalActions } from './actions';\nimport { normalize } from '../utils';\n\nimport userSagas from './user/saga';\nimport taskSagas from './tasks/saga';\nimport editingTaskSagas from './editingTask/saga';\nimport globalSagas from './global/sagas';\n\nfunction* createTask(action) {\n  try {\n    const { payload: task } = action;\n    const { data: taskResp } = yield call(request.post, '/tasks', task);\n    const { items } = taskResp;\n    yield put(\n      taskActions.addTaskToTasks(\n        fromJS({\n          ...taskResp,\n          items: normalize(items),\n        }),\n      ),\n    );\n  } catch (errResp) {\n    // eslint-disable-next-line no-console\n    console.error('createTask', errResp);\n    yield put(globalActions.addOneNitification(errResp));\n  }\n}\n\nfunction* mySaga() {\n  // yield takeLatest(effectActionTypes.EFFECT_REGISTER, register);\n  // yield takeLatest(effectActionTypes.EFFECT_LOGIN, login);\n\n  // tasks\n\n  yield takeEvery(effectActionTypes.EFFECT_CREATE_TASK, createTask);\n\n  yield all([\n    ...userSagas,\n    ...taskSagas,\n    ...editingTaskSagas,\n    ...globalSagas,\n  ]);\n}\n\nexport default mySaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\n\nimport * as constants from './actionTypes';\nimport * as actions from './actions';\nimport reducers from './reducer';\n\nimport rootSaga from './rootSaga';\n\nimport { isDev } from '../env';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n// eslint-disable-next-line import/no-mutable-exports\nlet store;\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (isDev()) {\n  // eslint-disable-next-line no-console\n  console.log('正处于develoment模式');\n  store = createStore(\n    reducers,\n    /* eslint-disable */\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n} else {\n  store = createStore(reducers, applyMiddleware(...middlewares));\n}\n\nsagaMiddleware.run(rootSaga)\n\n// const store = createStore(persistedReducer);\n\nexport { store, constants, actions };\n","import React, { Suspense } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useHasBeenTrued } from '../../hooks';\n\nconst LazyAccountManagerContainer = React.lazy(() => import('../../containers/AccountManagerContainer'));\n\n\nexport default function AccountPage() {\n  return (\n    <Suspense fallback={null}>\n      <LazyAccountManagerContainer />\n    </Suspense>\n\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialCheckbox from '@material-ui/core/Checkbox';\n\nfunction Checkbox(props) {\n  return <MaterialCheckbox {...props} />;\n}\n\nCheckbox.propTypes = {\n  onClick: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nCheckbox.defaultProps = {\n  onClick: null,\n  checked: false,\n  disabled: false,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function FullScreenLoading() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <CircularProgress />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n// import { Map, List } from 'immutable';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport {\n  List, IconButton, ListItem, Typography,\n} from '@material-ui/core';\n\nconst TodoListHeader = React.memo(function TodoListHeader(props) {\n  const {\n    title,\n    onClickEditButton,\n  } = props;\n\n  return (\n    <List>\n      <ListItem dense>\n        <Typography variant=\"h4\">\n          {title}\n        </Typography>\n        <IconButton onClick={onClickEditButton}>\n          <EditIcon />\n        </IconButton>\n      </ListItem>\n    </List>\n  );\n});\n\n\nTodoListHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClickEditButton: PropTypes.func.isRequired,\n};\n\nTodoListHeader.defaultProps = {\n};\n\n\nexport default TodoListHeader;\n","import React, { useCallback } from 'react';\n\nimport PropTypes from 'prop-types';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\nimport {\n  ListItemText, ListItem, Divider,\n} from '@material-ui/core';\n\nimport Checkbox from '../../../components/Checkbox';\n\nconst TaskItem = React.memo(function TaskItem(props) {\n  const { $taskItem, onClick } = props;\n\n  const doOnClick = useCallback(() => onClick($taskItem), [$taskItem, onClick]);\n\n  const isChecked = $taskItem.get('checked');\n\n  const style = {\n    opacity: isChecked ? '0.5' : '1',\n  };\n\n  return (\n    <>\n      <ListItem style={style} button onClick={doOnClick}>\n        <Checkbox edge=\"start\" checked={isChecked} />\n        <ListItemText primary={$taskItem.get('title')} />\n      </ListItem>\n      <Divider variant=\"middle\" />\n    </>\n  );\n});\n\nTaskItem.propTypes = {\n  $taskItem: PropTypes.instanceOf(Map).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nTaskItem.defaultProps = {\n};\n\nexport default TaskItem;\n\n// export default TodoListContainer;\n","import React, { useCallback, useEffect, useMemo } from 'react';\n\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, useHistory, useParams } from 'react-router-dom';\n// import { Map, List } from 'immutable';\nimport { Map } from 'immutable';\nimport {\n  List, ListItemText, ListItem, Divider, Typography, Slide,\n} from '@material-ui/core';\nimport { TransitionGroup } from 'react-transition-group';\nimport { taskActions } from '../../store/actions';\nimport Checkbox from '../../components/Checkbox';\nimport FullScreenLoading from '../../components/FullScreenLoading';\nimport TodoListHeader from './ui/TodoListHeader';\nimport TaskItem from './ui/TaskItem';\n\nfunction ListItemOfTaskItemWithCheckbox(props) {\n  const { $taskItem, onClick: rawOnClick, style } = props;\n\n  const onClick = useCallback(() => rawOnClick($taskItem), [$taskItem, rawOnClick]);\n\n  return (\n    <ListItem style={style} button onClick={onClick}>\n      <Checkbox edge=\"start\" checked={$taskItem.get('checked')} />\n      <ListItemText primary={$taskItem.get('title')} />\n    </ListItem>\n  );\n}\n\nListItemOfTaskItemWithCheckbox.propTypes = {\n  $taskItem: PropTypes.instanceOf(Map).isRequired,\n  onClick: PropTypes.func.isRequired,\n  style: PropTypes.objectOf(PropTypes.string),\n};\n\nListItemOfTaskItemWithCheckbox.defaultProps = {\n  style: null,\n};\n\nfunction TodoListContainer(props) {\n  const {\n    $currentTodoTask,\n  } = props;\n\n  const { id: taskId } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(taskActions.effectGetTask(taskId));\n    return () => {\n      // 离开当前任务页面时，重置状态树中的currentTodoTask为null，保持状态树整洁\n      dispatch(taskActions.changeCurrentTodoTask(null));\n    };\n  }, [taskId]);\n\n  const [\n    unfinishedTaskItemRefs,\n    finishedTaskItemRefs,\n  ] = useMemo(() => {\n    const unfinished = [];\n    const finished = [];\n    if ($currentTodoTask != null) {\n      const $itemRefs = $currentTodoTask.getIn(['items', 'refs']);\n      $itemRefs.forEach(taskItemId => {\n        const $item = $currentTodoTask.getIn(['items', 'entity', taskItemId]);\n        if ($item.get('checked')) finished.push(taskItemId);\n        else unfinished.push(taskItemId);\n      });\n    }\n\n    return [unfinished, finished];\n  }, [$currentTodoTask]);\n\n  const toggleTaskItemPropChecked = useCallback(\n    ($taskItem) => {\n      dispatch(taskActions.toggleTaskItemPropChecked($taskItem));\n    },\n    [dispatch],\n  );\n\n  const jumpToEditingPage = useCallback(\n    () => {\n      history.push(`/edit/${$currentTodoTask.get('id')}`);\n    },\n    [$currentTodoTask],\n  );\n\n  if ($currentTodoTask == null) return <FullScreenLoading />;\n\n  return (\n    <>\n      <TodoListHeader title={$currentTodoTask.get('title')} onClickEditButton={jumpToEditingPage} />\n      <Divider variant=\"fullWidth\" />\n      <List>\n        {unfinishedTaskItemRefs.length === 0 ? null : (\n          <ListItem dense>\n            <Typography variant=\"subtitle1\">\n            待完成\n            </Typography>\n          </ListItem>\n        )}\n        <TransitionGroup>\n          {unfinishedTaskItemRefs.length === 0 ? null : unfinishedTaskItemRefs.map((taskItemId) => {\n            const $item = $currentTodoTask.getIn(['items', 'entity', taskItemId]);\n            return (\n              <Slide key={$item.get('id')} timeout={500} direction=\"right\">\n                <div>\n                  <TaskItem $taskItem={$item} onClick={toggleTaskItemPropChecked} />\n                </div>\n              </Slide>\n            );\n          })}\n        </TransitionGroup>\n      </List>\n      <List>\n        {finishedTaskItemRefs.length === 0 ? null : (\n          <ListItem dense>\n            <Typography variant=\"subtitle1\">\n            已完成\n            </Typography>\n          </ListItem>\n        )}\n        <TransitionGroup>\n          {finishedTaskItemRefs.map((taskItemId) => {\n            const $item = $currentTodoTask.getIn(['items', 'entity', taskItemId]);\n            return (\n              <Slide key={$item.get('id')} timeout={500} direction=\"right\">\n                <div>\n                  <TaskItem $taskItem={$item} onClick={toggleTaskItemPropChecked} />\n                </div>\n              </Slide>\n            );\n          })}\n        </TransitionGroup>\n      </List>\n    </>\n  );\n}\n\n\nTodoListContainer.propTypes = {\n  // $tasks: PropTypes.instanceOf(List).isRequired,\n  // $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $currentTodoTask: PropTypes.instanceOf(Map),\n};\n\nTodoListContainer.defaultProps = {\n  $currentTodoTask: null,\n};\n\nconst mapState = ($state) => {\n  const $global = $state.get('global');\n  const $task = $state.get('task');\n  return {\n    showSideMenu: $global.get('showSideMenu'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $currentTodoTask: $task.get('currentTodoTask'),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapState,\n    null,\n  )(TodoListContainer),\n);\n\n// export default TodoListContainer;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport Fade from '@material-ui/core/Fade';\nimport { TransitionGroup } from 'react-transition-group';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\n\nimport { withStopEventtPropagation } from '../../../utils';\n\n\nfunction PinnedTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List\n      subheader={(\n        <ListSubheader component=\"div\">\n          置顶任务\n        </ListSubheader>\n      )}\n    >\n      <Divider />\n      <TransitionGroup>\n        {$tasks.map($task => (\n          <Fade key={$task.get('id')} timeout={300}>\n            <div>\n              <ListItem onClick={() => onClickTask($task)} button>\n                <ListItemText primary={$task.get('title')} />\n                <IconButton onClick={evt => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                  <StarIcon />\n                </IconButton>\n              </ListItem>\n            </div>\n          </Fade>\n        ))}\n      </TransitionGroup>\n    </List>\n  );\n}\n\nPinnedTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nPinnedTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  },\n};\n\nexport default PinnedTaskList;\n","import React, { useMemo } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Divider,\n  // Typography,\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { List as ImmutableList } from 'immutable';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\n\nimport { withStopEventtPropagation } from '../../../utils';\n\nfunction RecentTaskList(props) {\n  const { onClickTask, $tasks, onClickIconButton } = props;\n\n  const onClickIconButtonWithStopEvtPropagation = useMemo(\n    () => withStopEventtPropagation(onClickIconButton),\n    [onClickIconButton],\n  );\n\n  return (\n    <List\n      subheader={(\n        <ListSubheader component=\"div\">\n          最近任务\n        </ListSubheader>\n      )}\n    >\n      <Divider />\n      {$tasks.map(($task) => (\n        <React.Fragment key={$task.get('id')}>\n          <ListItem onClick={() => onClickTask($task)} button>\n            <ListItemText primary={$task.get('title')} />\n            {$task.get('isPinned') ? null : (\n              <IconButton onClick={(evt) => onClickIconButtonWithStopEvtPropagation(evt, $task)}>\n                <StarBorderIcon />\n              </IconButton>\n            )}\n          </ListItem>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n\nRecentTaskList.propTypes = {\n  $tasks: PropTypes.instanceOf(ImmutableList).isRequired,\n  onClickIconButton: PropTypes.func,\n  onClickTask: PropTypes.func,\n};\n\nRecentTaskList.defaultProps = {\n  onClickTask: () => {\n    /*eslint-disable*/\n    console.log('onClickTask');\n  },\n  onClickIconButton: () => {\n    /*eslint-disable*/\n    console.log('onClickIconButton');\n  }\n};\n\nexport default RecentTaskList;\n","/* eslint-disable function-paren-newline */\nimport React, { useCallback, useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Map, List } from 'immutable';\nimport { connect } from 'react-redux';\n\nimport PinnedTaskList from './components/PinnedTaskList';\nimport RecentTaskList from './components/RecentTaskList';\n\nimport { editingTaskActions } from '../../store/actions';\n\nfunction PinnedAndRecentTaskList(props) {\n  const {\n    $tasksRefs,\n    dispatch,\n    history,\n    $tasksEntity,\n  } = props;\n\n  const $recentTasks = useMemo(\n    () =>\n      $tasksRefs.map(ref => $tasksEntity.get(ref)).sort(($taskA, $taskB) => {\n        const taskATime = $taskA.get('lastVisitTime') || 0;\n        const taskBTime = $taskB.get('lastVisitTime') || 0;\n        return taskBTime - taskATime;\n      }),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const $pinnedTasks = useMemo(\n    () => $tasksRefs.map(ref => $tasksEntity.get(ref)).filter($task => $task.get('isPinned')),\n    [$tasksRefs, $tasksEntity],\n  );\n\n  const pinOneTask = useCallback(\n    ($task) => {\n      const $pinndTask = $task.set('isPinned', true);\n      dispatch(editingTaskActions.effectUpdateTask($pinndTask));\n    },\n    [dispatch],\n  );\n\n  const unpinOneTask = useCallback(\n    ($task) => {\n      const $unpinndTask = $task.set('isPinned', false);\n      dispatch(editingTaskActions.effectUpdateTask($unpinndTask));\n    },\n    [dispatch],\n  );\n\n  const onClickTask = useCallback(\n    ($task) => {\n      history.push(`/todo/${$task.get('id')}`);\n    },\n    [history],\n  );\n\n  return (\n    <React.Fragment>\n      <PinnedTaskList\n        onClickIconButton={unpinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$pinnedTasks}\n      />\n      <RecentTaskList\n        onClickIconButton={pinOneTask}\n        onClickTask={onClickTask}\n        $tasks={$recentTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nPinnedAndRecentTaskList.propTypes = {\n  // $recentTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  // $pinnedTaskIds: PropTypes.instanceOf(ImmutableList).isRequired,\n  $tasksEntity: PropTypes.instanceOf(Map).isRequired,\n  $tasksRefs: PropTypes.instanceOf(List).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nPinnedAndRecentTaskList.defaultProps = {};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $recentTaskIds: $task.get('recentTaskIds'),\n    $pinnedTaskIds: $task.get('pinnedTaskIds'),\n    $tasksEntity: $task.getIn(['tasks', 'entity']),\n    $tasksRefs: $task.getIn(['tasks', 'refs']),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(PinnedAndRecentTaskList);\n","/* eslint-disable no-lone-blocks */\nimport React, { useCallback, useRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Proptypes from 'prop-types';\n\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useForceUpdate } from '../hooks';\n\n\nfunction HomeButton(props) {\n  const {\n    onClick,\n    needDoubleClick,\n    timeout,\n  } = props;\n\n  const forceUpdate = useForceUpdate();\n  const clickCountRef = useRef(null);\n  const timerIdRef = useRef(null);\n\n  const doOnClick = useCallback((...args) => {\n    if (!needDoubleClick) {\n      onClick(...args);\n      return;\n    }\n\n    // 以下是开启了needDoubleClick模式的逻辑\n    clickCountRef.current += 1;\n    const clickCountSoFar = clickCountRef.current;\n    if (clickCountSoFar === 1) {\n      if (timerIdRef.current != null) clearTimeout(timerIdRef.current); // 防御性判断\n\n      timerIdRef.current = setTimeout(() => {\n        clickCountRef.current = 0;\n        timerIdRef.current = null;\n        forceUpdate();\n      }, timeout);\n    } else if (clickCountSoFar === 2) {\n      if (timerIdRef.current != null) clearTimeout(timerIdRef.current);\n\n      clickCountRef.current = 0;\n      onClick(...args);\n    }\n    forceUpdate();\n  }, [onClick, needDoubleClick, forceUpdate, timeout]);\n\n  const backgroundColor = clickCountRef.current === 1\n    ? 'rgba(0, 0, 0, 0.25)'\n    : '';\n\n  return (\n    <IconButton\n      style={{\n        backgroundColor,\n        transition: 'background-color 300ms linear',\n      }}\n      onClick={doOnClick}\n      edge=\"end\"\n    >\n      <HomeIcon />\n    </IconButton>\n  );\n}\n\nHomeButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n  needDoubleClick: Proptypes.bool,\n  timeout: Proptypes.number,\n};\n\nHomeButton.defaultProps = {\n  needDoubleClick: false,\n  timeout: 1000,\n};\n\nexport default HomeButton;\n","import React, { useCallback, useMemo } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { List, Map } from 'immutable';\n\nimport { COLOR_ORANGE, COLOR_GREEN, COLOR_RED } from '../utils/constants';\nimport { taskActions } from '../store/actions';\n\nconst CompleteTaskButton = (props) => {\n  const {\n    $task,\n    $tasksItemsEntity,\n    $tasksItemsRefs,\n    dispatch,\n    history,\n  } = props;\n\n  const $unchckedTaskItems = useMemo(\n    () =>\n      $tasksItemsRefs\n        .filter((taskId) => !$tasksItemsEntity.getIn([taskId, 'checked']))\n        .map((taskId) => $tasksItemsEntity.get(taskId)),\n    [$tasksItemsEntity, $tasksItemsRefs],\n  );\n  const numOfAllTaskItem = $tasksItemsRefs.size;\n  const numOfUncheckedItem = $unchckedTaskItems.size;\n  const numOfCheckedItem = numOfAllTaskItem - numOfUncheckedItem;\n  const isAllComleted = numOfAllTaskItem === numOfCheckedItem;\n  const hasZeroTaskItem = numOfAllTaskItem === 0;\n  const onClickCompleteButton = useCallback(() => {\n    if (hasZeroTaskItem) {\n      // 零个可完成任务项，提供跳转到编辑页面的快速方式\n      history.push(`/edit/${$task.get('id')}`);\n    } else if (isAllComleted) {\n      /* 所有任务项全部完成，跳转到APP主页 */\n      history.push('/');\n    } else {\n      dispatch(\n        taskActions.checkTaskItemInTaskItemsByTaskId(\n          $unchckedTaskItems.getIn(['0', 'id']),\n        ),\n      );\n    }\n  }, [\n    $task,\n    hasZeroTaskItem,\n    isAllComleted,\n    $unchckedTaskItems,\n    history,\n    dispatch,\n  ]);\n\n  let buttonText;\n  let buttonColor;\n  if (hasZeroTaskItem) {\n    buttonText = '添加任务项';\n    buttonColor = COLOR_RED;\n  } else if (isAllComleted) {\n    buttonText = `全部完成(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_GREEN;\n  } else {\n    buttonText = `完成一个任务项(${numOfCheckedItem}/${numOfAllTaskItem})`;\n    buttonColor = COLOR_ORANGE;\n  }\n\n  return (\n    <Button\n      style={{\n        backgroundColor: buttonColor,\n        color: '#fff',\n        transition: 'background-color 300ms',\n      }}\n      size=\"medium\"\n      fullWidth\n      aria-label=\"add\"\n      onClick={onClickCompleteButton}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nCompleteTaskButton.propTypes = {\n  $tasksItemsEntity: Proptypes.instanceOf(Map),\n  $tasksItemsRefs: Proptypes.instanceOf(List),\n  $task: Proptypes.instanceOf(Map),\n  dispatch: Proptypes.func.isRequired,\n  history: Proptypes.shape({\n    push: Proptypes.func.isRequired,\n  }).isRequired,\n};\n\nCompleteTaskButton.defaultProps = {\n  $tasksItemsRefs: new List(),\n  $tasksItemsEntity: new Map(),\n  $task: null,\n};\n\nconst mapState = ($state) => {\n  const $task = $state.get('task');\n  return {\n    $tasksItemsEntity: $task.getIn(['currentTodoTask', 'items', 'entity']),\n    $tasksItemsRefs: $task.getIn(['currentTodoTask', 'items', 'refs']),\n    $task: $task.get('currentTodoTask'),\n  };\n};\n\nexport default connect(\n  mapState,\n  null,\n)(CompleteTaskButton);\n","import React, { useCallback } from 'react';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Fab from '@material-ui/core/Fab';\nimport Proptypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router-dom';\nimport { List } from 'immutable';\nimport { editingTaskActions } from '../store/actions';\n\nconst EdtingTaskButtonContainer = (props) => {\n  const { $futureTasks, $oldTasks, dispatch } = props;\n  const isUndoBtnDisabled = $oldTasks.size === 0;\n  const isRedoBtnDisabled = $futureTasks.size === 0;\n\n  const undoEditing = useCallback(() => {\n    dispatch(editingTaskActions.undoCurrentTask());\n  }, [dispatch]);\n\n  const redoEditing = useCallback(() => {\n    dispatch(editingTaskActions.redoCurrentTask());\n  }, [dispatch]);\n\n  return (\n    <ButtonGroup fullWidth variant=\"outlined\">\n      <Button onClick={undoEditing} disabled={isUndoBtnDisabled}>\n        Undo\n      </Button>\n      <Button onClick={redoEditing} disabled={isRedoBtnDisabled}>\n        Redo\n      </Button>\n    </ButtonGroup>\n  );\n};\nEdtingTaskButtonContainer.propTypes = {\n  $futureTasks: Proptypes.instanceOf(List).isRequired,\n  $oldTasks: Proptypes.instanceOf(List).isRequired,\n  dispatch: Proptypes.func.isRequired,\n  // isEditingTaskEdited: Proptypes.bool.isRequired,\n};\n\nconst mapState = ($state) => {\n  const $editingTask = $state.get('editingTask');\n  return {\n    $futureTasks: $editingTask.get('futureTasks'),\n    $oldTasks: $editingTask.get('oldTasks'),\n  };\n};\nexport default connect(\n  mapState,\n  null,\n)(withRouter(EdtingTaskButtonContainer));\n","\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Proptypes from 'prop-types';\n\nimport { COLOR_BLUE } from '../../../utils/constants';\n\nfunction StartTaskButton(props) {\n  const { onClick } = props;\n  return (\n    <Button\n      style={{ backgroundColor: COLOR_BLUE, color: '#fff' }}\n      size=\"medium\"\n      fullWidth\n      // variant=\"outlined\"\n      color=\"primary\"\n      aria-label=\"add\"\n      onClick={onClick}\n    >\n      {'开始一项任务'}\n    </Button>\n  );\n}\n\n\nStartTaskButton.propTypes = {\n  onClick: Proptypes.func.isRequired,\n};\n\nexport default StartTaskButton;\n","import React, { useCallback } from 'react';\n// import Proptypes from 'prop-types';\n// import MoreIcon from '@material-ui/icons/MoreVert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nimport { showSideMenu } from '../../store/actions';\n// import { COLOR_BLUE } from '../../utils/constants';\nimport CompleteTaskButtonContainer from '../CompleteTaskButton';\n\nimport TaskEditorButton from '../TaskEditorButton';\nimport StartTaskButton from './ui/StartTaskButton';\nimport { COLOR_ORANGE } from '../../utils/constants';\nimport FullScreenLoading from '../../components/FullScreenLoading';\n\nconst hasLoginSelector = $state => $state.getIn(['user', 'hasLogin']);\nconst isLoginingSelecotr = $state => $state.getIn(['user', 'isLogining']);\n\nfunction AppBarButton() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const hasLogin = useSelector(hasLoginSelector);\n  const isLogining = useSelector(isLoginingSelecotr);\n\n  const onClickStartOneTaskButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const jumpToLoginPage = useCallback(() => {\n    history.push('/account');\n  }, []);\n\n  if (isLogining) return <FullScreenLoading />;\n\n  if (!hasLogin) {\n    return (\n      <Button\n        style={{\n          backgroundColor: COLOR_ORANGE,\n          color: '#fff',\n        }}\n        size=\"medium\"\n        fullWidth\n        onClick={jumpToLoginPage}\n      >\n        登录\n      </Button>\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/edit/:id\" component={TaskEditorButton} />\n      <Route path=\"/todo\" component={CompleteTaskButtonContainer} />\n      <Route\n        render={() => (\n          <StartTaskButton onClick={onClickStartOneTaskButton} />\n        )}\n      />\n    </Switch>\n  );\n}\nAppBarButton.propTypes = {\n\n};\n\nAppBarButton.defaultProps = {\n};\n\n\nexport default AppBarButton;\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { showSideMenu } from '../../store/actions';\n\nimport HomeButton from '../../components/HomeButton';\nimport AppBarButton from './AppBarButton';\n\nfunction AppBarContainer() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const onClickMenuButton = useCallback(() => {\n    dispatch(showSideMenu());\n  }, [dispatch]);\n\n  const onClickHomeButton = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: 'white',\n        height: '100%',\n      }}\n      position=\"static\"\n    >\n      <Toolbar>\n        <IconButton edge=\"start\" onClick={onClickMenuButton}>\n          <MenuIcon />\n        </IconButton>\n        <div\n          className=\"appbar-button\"\n          style={{\n            flex: '1',\n            padding: '0 5px',\n          }}\n        >\n          <AppBarButton />\n        </div>\n        <HomeButton needDoubleClick onClick={onClickHomeButton} />\n      </Toolbar>\n    </AppBar>\n  );\n}\nAppBarContainer.propTypes = {\n\n};\n\nAppBarContainer.defaultProps = {\n};\n\n\nexport default AppBarContainer;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport ErrorIcon from '@material-ui/icons/Clear';\nimport SuccessIcon from '@material-ui/icons/Done';\nimport WarnIcon from '@material-ui/icons/PriorityHigh';\n\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader } from '@material-ui/core';\n\nimport { COLOR_GREEN, COLOR_RED, COLOR_YELLOW } from '../../../utils/constants';\n\nconst SUCCESS = 'success';\nconst ERROR = 'error';\nconst WARN = 'warn';\n\nconst TYPE_COLOR_MAPPING = {\n  [SUCCESS]: COLOR_GREEN,\n  [ERROR]: COLOR_RED,\n  [WARN]: COLOR_YELLOW,\n};\n\nfunction NotificationCardWithRef(props, ref) {\n  const {\n    type, title, style, subtitle,\n  } = props;\n  const iconStyle = {\n    borderRadius: '50%',\n    overflow: 'hidden',\n    color: '#fff',\n    width: '48px',\n    height: '48px',\n    backgroundColor: TYPE_COLOR_MAPPING[type],\n  };\n  let icon = <WarnIcon style={iconStyle} />;\n  if (type === ERROR) icon = <ErrorIcon style={iconStyle} />;\n  if (type === SUCCESS) icon = <SuccessIcon style={iconStyle} />;\n\n  return (\n    <Card ref={ref} style={style}>\n      <CardHeader\n        avatar={icon}\n        title={title}\n        subheader={subtitle}\n        // subheader=\"status: 401\"\n      />\n    </Card>\n  );\n}\n\nconst NotificationCard = React.forwardRef(NotificationCardWithRef);\n\nNotificationCard.types = {\n  SUCCESS,\n  ERROR,\n  WARN,\n};\n\nNotificationCard.propTypes = {\n  type: PropTypes.oneOf([WARN, ERROR, SUCCESS]),\n  title: PropTypes.node.isRequired,\n  subtitle: PropTypes.node,\n  style: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n};\n\nNotificationCard.defaultProps = {\n  type: 'none',\n  subtitle: null,\n  style: undefined,\n};\n\n\nexport default NotificationCard;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import { List } from 'immutable';\n\nimport Zoom from '@material-ui/core/Zoom';\nimport { TransitionGroup } from 'react-transition-group';\nimport NotificationCard from './ui/NotificationCard';\n\nconst notificationsSelector = $state => $state.getIn(['global', 'notifications']);\n\nfunction NotificationsPanelContainer() {\n  const $notifications = useSelector(notificationsSelector);\n  return (\n    <>\n      <div\n        className=\"NotificationsPanelContainer\"\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: '100%',\n          zIndex: '4000',\n          boxSizing: 'border-box',\n          padding: '0 20px',\n        }}\n      >\n        <TransitionGroup>\n          {$notifications.map(({\n            title, key, detail = null, type = 'warn',\n          }) => (\n            <Zoom key={key}>\n              <NotificationCard\n                style={{ marginTop: '20px' }}\n                type={type}\n                title={title}\n                subtitle={detail}\n              />\n            </Zoom>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n}\n\nNotificationsPanelContainer.propTypes = {\n\n};\n\nNotificationsPanelContainer.defaultProps = {};\n\nexport default NotificationsPanelContainer;\n","import React, { Suspense } from 'react';\nimport Proptypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport AppBar from '../containers/AppBar';\n\n\n// import AccountManagerContainer from '../containers/AccountManagerContainer';\nimport NotificationsPanelContainer from '../containers/NotificationsPanelContainer';\nimport { useHasBeenTrued } from '../hooks';\n\nconst SideMenuContainer = React.lazy(() => import(/* webpackChunkName: \"SideMenuContainer\", webpackPrefetch: true */ '../containers/SideMenuContainer'));\n\nfunction CommonLayout(props) {\n  const {\n    children,\n  } = props;\n\n  const isShowSideMenu = useSelector($state => $state.getIn(['global', 'showSideMenu']));\n\n  const hasSideMenuShowed = useHasBeenTrued(isShowSideMenu);\n\n  return (\n    <div\n      className=\"CommonLayout\"\n      style={{\n        position: 'relative',\n        height: '100%',\n        display: 'flex',\n        flexFlow: 'column nowrap',\n      }}\n    >\n      <div\n        className=\"CommonLayout-content\"\n        style={{\n          position: 'relative',\n          flex: '1',\n          overflowY: 'scroll',\n          overflowX: 'hidden',\n        }}\n      >\n        {children}\n      </div>\n      <div\n        className=\"CommonLayout-navbar\"\n        style={{\n          flex: '0 0 60px',\n        }}\n      >\n        <AppBar />\n      </div>\n      <NotificationsPanelContainer />\n      {hasSideMenuShowed\n        ? (\n          <Suspense fallback={null}>\n            <SideMenuContainer />\n          </Suspense>\n        )\n        : null\n      }\n    </div>\n  );\n}\n\nCommonLayout.propTypes = {\n  // dispatch: PropTypes.func.isRequired,\n  children: Proptypes.node,\n};\n\nCommonLayout.defaultProps = {\n  children: null,\n};\n\nexport default CommonLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\n\nimport './TaskEditorHeader.scss';\n\nimport TextFieldOnKeyEnterUp from '../../../components/TextFieldOnKeyEnterUp';\n\nconst TaskEditorHeader = React.memo(function TaskEditorHeader(props) {\n  const {\n    title,\n    onChange,\n  } = props;\n  return (\n    <ListItem id=\"task-editor-header\" dense>\n      <TextFieldOnKeyEnterUp\n        value={title}\n        id=\"task-editor-task-title-input\"\n        onChange={onChange}\n        onKeyEnterUp={onChange}\n        placeholder=\"任务标题\"\n      />\n    </ListItem>\n  );\n});\n\nTaskEditorHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TaskEditorHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'immutable';\nimport {\n  ListItem, Fade, ListItemText, IconButton, Divider,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport Checkbox from '../../../components/Checkbox';\n\nconst EditableTaskItemList = React.memo(function EditableTaskItemList(props) {\n  const {\n    $items,\n    onClickDeleteButton,\n  } = props;\n  return (\n    <TransitionGroup>\n      {$items.map($item => (\n        <Fade key={$item.get('id')} timeout={600}>\n          <div>\n            <ListItem>\n              <Checkbox disabled edge=\"start\" checked={$item.get('checked')} />\n              <ListItemText primary={$item.get('title')} />\n              <IconButton onClick={() => onClickDeleteButton($item)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n            <Divider variant=\"middle\" />\n          </div>\n        </Fade>\n      ))}\n    </TransitionGroup>\n  );\n});\n\nEditableTaskItemList.propTypes = {\n  $items: PropTypes.instanceOf(List).isRequired,\n  onClickDeleteButton: PropTypes.func.isRequired,\n};\n\nexport default EditableTaskItemList;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport { Map } from 'immutable';\n\nimport TextFieldOnKeyEnterUp from '../../../components/TextFieldOnKeyEnterUp';\nimport { uniqueId } from '../../../utils';\n\nconst TaskItemCreator = React.memo(function TaskItemCreator(props) {\n  const {\n    onCreateTaskItem,\n  } = props;\n\n  const [itemTitle, setItemTitle] = useState('');\n\n  const handleChange = useCallback(evt => setItemTitle(evt.target.value));\n\n  const doOnCreateTaskItem = useCallback(() => {\n    if (itemTitle.trim() === '') return;\n    const $newTaskItem = Map({\n      id: uniqueId(),\n      title: itemTitle,\n      checked: false,\n    });\n    onCreateTaskItem($newTaskItem);\n    setItemTitle('');\n  }, [itemTitle, onCreateTaskItem, setItemTitle]);\n\n  return (\n    <ListItem>\n      <TextFieldOnKeyEnterUp\n        value={itemTitle}\n        onKeyEnterUp={doOnCreateTaskItem}\n        onChange={handleChange}\n        placeholder=\"新增待做事项\"\n        fullWidth\n      />\n    </ListItem>\n  );\n});\n\nTaskItemCreator.propTypes = {\n  onCreateTaskItem: PropTypes.func.isRequired,\n};\n\nexport default TaskItemCreator;\n","/* eslint-disable nonblock-statement-body-position */\nimport React, {\n  useCallback, useEffect, useMemo,\n} from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { List as ImmutableList } from 'immutable';\nimport {\n  List,\n} from '@material-ui/core';\n\nimport { editingTaskActions } from '../../store/actions';\nimport FullScreenLoading from '../../components/FullScreenLoading';\nimport { makeDebounced } from '../../utils';\nimport TaskEditorHeader from './ui/TaskEditorHeader';\nimport EditableTaskItemCollection from './ui/EditableTaskItemCollection';\nimport TaskItemCreator from './ui/TaskItemCreator';\n\nconst currentEditingTaskSelector = $state => $state.getIn(['editingTask', 'currentTask']);\n\nfunction TaskEditor() {\n  const $currentEditingTask = useSelector(currentEditingTaskSelector);\n  const dispatch = useDispatch();\n\n  const { id: taskId } = useParams();\n\n  const debouncedEffectUpdateTask = useCallback(makeDebounced($task => {\n    dispatch(editingTaskActions.effectUpdateTask($task));\n  }, 500), []);\n\n  useEffect(() => {\n    dispatch(editingTaskActions.effectGetTask(taskId));\n    return () => {\n      // 因为根据taskId加载任务，所以taskId变化，即任务变化，所以每次切换任务，就要重置编辑历史，重置redo，undo按钮状态\n      // 即使退出也要重置状态，保持状态树的干净\n      dispatch(editingTaskActions.clearAllEdtingHistory());\n      // 退出任务, 重置为null，\n      dispatch(editingTaskActions.changeCurrentTask(null));\n    };\n  }, [taskId]);\n\n  const addNewTaskItem = useCallback(($newTaskItem) => {\n    dispatch(editingTaskActions.snapshotCurrentTask());\n    dispatch(editingTaskActions.addTaskItemInCurrentTask($newTaskItem));\n    // 因为添加了新任务项，所以清空重做任务列表，重置 重做 按钮状态，为了避免编辑状态混乱\n    dispatch(editingTaskActions.clearFutureTasks());\n    debouncedEffectUpdateTask($currentEditingTask);\n  }, [$currentEditingTask]);\n\n  const removeTaskItem = useCallback($taskItem => {\n    dispatch(editingTaskActions.snapshotCurrentTask());\n    dispatch(editingTaskActions.removeTaskItemInCurrentTask($taskItem));\n    debouncedEffectUpdateTask($currentEditingTask);\n  }, [$currentEditingTask]);\n\n  const $taskItems = useMemo(() => {\n    if ($currentEditingTask == null) return new ImmutableList();\n    return $currentEditingTask\n      .getIn(['items', 'refs'])\n      .map(taskItemId => $currentEditingTask.getIn(['items', 'entity', taskItemId]));\n  }, [$currentEditingTask]);\n\n  const changeTaskTitle = useCallback(evt => {\n    const title = evt.target.value.trim();\n    dispatch(editingTaskActions.snapshotCurrentTask());\n    dispatch(editingTaskActions.changeCurrentTaskTitle(title));\n    debouncedEffectUpdateTask($currentEditingTask);\n  }, [$currentEditingTask]);\n\n  if ($currentEditingTask == null) return <FullScreenLoading />;\n\n  return (\n    <List>\n      <TaskEditorHeader onChange={changeTaskTitle} title={$currentEditingTask.get('title')} />\n      <EditableTaskItemCollection $items={$taskItems} onClickDeleteButton={removeTaskItem} />\n      <TaskItemCreator onCreateTaskItem={addNewTaskItem} />\n    </List>\n  );\n}\n\n// TaskEditor.propTypes = {\n//   // $currentEditingTask: PropTypes.instanceOf(Map),\n// };\n\n// TaskEditor.defaultProps = {\n//   // $currentEditingTask: null,\n// };\n\nexport default TaskEditor;\n","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport TodoListContainer from '../../containers/TodoListContainer';\nimport PinnedAndRecentTaskList from '../../containers/PinnedAndRecentTaskList';\n\nimport CommonLayout from '../../layouts/CommonLayout';\n\nimport { taskActions } from '../../store/actions';\nimport TaskEditor from '../../containers/TaskEditor';\n\nconst hasLoginSelector = $state => $state.getIn(['user', 'hasLogin']);\n\nexport default function HomePage() {\n  const hasLogin = useSelector(hasLoginSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (hasLogin) {\n      dispatch(taskActions.effectGetTaskList());\n    }\n  }, [hasLogin]);\n\n  return (\n    <CommonLayout>\n      <Switch>\n        <Route path=\"/todo/:id\" component={TodoListContainer} />\n        <Route path=\"/edit/:id\" component={TaskEditor} />\n        <Route component={PinnedAndRecentTaskList} />\n      </Switch>\n    </CommonLayout>\n  );\n}\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n// import { Route, useHistory, Redirect } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport AccountPage from '../pages/AccountPage';\nimport HomePage from '../pages/HomePage';\n\n// const hasLoginSelector = $state => $state.getIn(['global', 'hasLogin']) || false;\n\nfunction RootRoutes() {\n  return (\n    <>\n      <Route path=\"/\" component={HomePage} />\n      <Route path=\"/account\" component={AccountPage} />\n    </>\n  );\n}\n\nexport default RootRoutes;\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getLocalJWT } from './utils';\nimport { userActions } from './store/actions';\n\nimport RootRoutes from './routes/RootRoutes';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // 自动登录\n    const jwt = getLocalJWT();\n    if (jwt === '' || jwt == null) return;\n    dispatch(userActions.effectLoginByJWT());\n  }, []);\n\n  return (\n    <div\n      id=\"app-main\"\n      style={{\n        height: '100vh',\n        overflow: 'hidden',\n      }}\n    >\n      <Router>\n        <RootRoutes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\n\nimport App from './App';\n\nfunction Entry() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nexport default Entry;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\n// import * as serviceWorker from './serviceWorker';\n\nimport Entry from './Entry';\nimport './index.css';\n\nReactDOM.render(React.createElement(Entry), document.getElementById('root'));\n","/* eslint-disable operator-linebreak */\nexport const CHANGE_CURRENT_TASK = 'editingTask/CHANGE_CURRENT_TASK';\n\nexport const ADD_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/ADD_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const REMOVE_TASK_ITEM_IN_CURRENT_TASK =\n  'editingTask/REMOVE_TASK_ITEM_IN_CURRENT_TASK';\n\nexport const CHANGE_CURRENT_TASK_TITLE = 'editingTask/CHANGE_CURRENT_TASK_TITLE';\n\nexport const SNAPSHOT_CURRENT_TASK = 'editingTask/SNAPSHOT_CURRENT_TASK';\n\nexport const UNDO_CURRENT_TASK = 'editingTask/UNDO_CURRENT_TASK';\n\nexport const REDO_CURRENT_TASK = 'editingTask/REDO_CURRENT_TASK';\n\nexport const CLEAR_FUTURE_TASKS = 'editingTask/CLEAR_FUTURE_TASKS';\n\nexport const CLEAR_EDITNG_HISTORY = 'editingTask/CLEAR_EDITNG_HISTORY';\n\n// effect\n\nexport const EFFECT_UPDATE_TASK = 'editingtask/EFFECT_UPDATE_TASK';\n\nexport const EFFECT_GET_TASK = 'editingTask/EFFECT_GET_TASK';\n","/* eslint-disable operator-linebreak */\n\nexport const CHANGE_TASKS = 'tasks/CHANGE_TASKS';\n\nexport const ADD_TASK_TO_TASKS = 'tasks/ADD_TASK_TO_TASKS';\n\nexport const REMOVE_TASK_IN_TASKS = 'tasks/REMOVE_TASK_IN_TASKS';\n\nexport const CHANGE_CURRENT_TODO_TASK = 'tasks/CHANGE_CURRENT_TODO_TASK';\n\nexport const CHANGE_CURRENT_TODO_TASK_BY_ID =\n  'tasks/CHANGE_CURRENT_TODO_TASK_BY_ID';\n\n// -- task item\n\n// export const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX =\n//   'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX';\n\nexport const CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID =\n  'tasks/CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID';\n\nexport const TOGGLE_TASK_ITEM_CHECKED = 'tasks/TOGGLE_TASK_ITEM_CHECKED';\n\n// editing task\n\n// export const UPDARE_TASK_FROM_EDTING = 'tasks/UPDARE_TASK_FROM_EDTING';\n\nexport const UPDATE_TASK_IN_TASKS = 'tasks/UPDATE_TASK_IN_TASKS';\n\n// effect\n\nexport const EFFECT_GET_TASK_LIST = 'tasks/EFFECT_GET_TASK_LIST';\n\nexport const EFFECT_DELETE_TASK = 'tasks/EFFECT_DELETE_TASK';\n\nexport const EFFECT_GET_TASK = 'tasks/EFFECT_GET_TASK';\n\n// export const EFFECT_UPDATE_TASK = 'tasks/EFFECT_UPDATE_TASK';\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n// effect\n\nexport const EFFECT_GET_USERINFO = 'EFFECT_GET_USERINFO';\n\nexport const EFFECT_LOGIN = 'EFFECT_LOGIN';\n\nexport const EFFECT_LOGIN_BY_JWT = 'EFFECT_LOGIN_BY_JWT';\n\nexport const EFFECT_REGISTER = 'EFFECT_REGISTER';\n","export const SHOW_SIDE_MENU = 'global/SHOW_SIDE_MENU';\n\nexport const HIDE_SIDE_MENU = 'global/HIDE_SIDE_MENU';\n\nexport const ADD_ONE_NOTIFICATION = 'ADD_ONE_NOTIFICATION';\n\nexport const REMOVE_THE_TOP_NOTIFICATION = 'REMOVE_THE_TOP_NOTIFICATION';\n","export const COLOR_BLUE = '#2196f3';\n\nexport const COLOR_GREEN = '#43a047';\n\nexport const COLOR_YELLOW = '#fdd835';\n\nexport const COLOR_GREY = '#9e9e9e';\n\nexport const COLOR_ORANGE = '#ff5722';\n\nexport const COLOR_RED = '#f44336';\n\nexport const ROOT_URL = '/monica/';\n","export const EFFECT_CREATE_TASK = 'EFFECT_CREATE_TASK';\n\nexport const EFFECT_UPDATE_TASK = 'EFFECT_UPDATE_TASK';\n","import * as actionTypes from './actionTypes';\n\nexport const changeTasks = ($tasks) => ({\n  type: actionTypes.CHANGE_TASKS,\n  payload: $tasks,\n});\n\nexport const addTaskToTasks = (task) => ({\n  type: actionTypes.ADD_TASK_TO_TASKS,\n  payload: task,\n});\n\nexport const removeTaskInTasks = (task) => ({\n  type: actionTypes.REMOVE_TASK_IN_TASKS,\n  payload: task,\n});\n\nexport const changeCurrentTodoTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK,\n  payload: $task,\n});\n\nexport const changeCurrentTodoTaskById = (taskId) => ({\n  type: actionTypes.CHANGE_CURRENT_TODO_TASK_BY_ID,\n  payload: taskId,\n});\n\n// -- task item\n\n// export const checkTaskItemInTaskItemsByIndex = (index) => ({\n//   type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_INDEX,\n//   payload: index,\n// });\n\nexport const checkTaskItemInTaskItemsByTaskId = (taskId) => ({\n  type: actionTypes.CHECK_TASK_ITEM_IN_TASK_ITEMS_BY_TASK_ID,\n  payload: taskId,\n});\n\nexport const toggleTaskItemPropChecked = ($taskItem) => ({\n  type: actionTypes.TOGGLE_TASK_ITEM_CHECKED,\n  payload: $taskItem,\n});\n\n// edting task\n\n// export const updateTaskFromEdting = ($task) => ({\n//   type: actionTypes.UPDARE_TASK_FROM_EDTING,\n//   payload: $task,\n// });\n\nexport const updateTaskInTasks = ($task) => ({\n  type: actionTypes.UPDATE_TASK_IN_TASKS,\n  payload: $task,\n});\n\n// effect\n\nexport const effectGetTaskList = () => ({\n  type: actionTypes.EFFECT_GET_TASK_LIST,\n});\n\nexport const effectDeleteTask = (taskId) => ({\n  type: actionTypes.EFFECT_DELETE_TASK,\n  payload: taskId,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n\n// export const effectUpdateTask = ($task) => ({\n//   type: actionTypes.EFFECT_UPDATE_TASK,\n//   payload: $task,\n// });\n","import * as actionTypes from './actionTypes';\n\nexport const showSideMenu = () => ({\n  type: actionTypes.SHOW_SIDE_MENU,\n});\n\nexport const hideSideMenu = () => ({\n  type: actionTypes.HIDE_SIDE_MENU,\n});\n\n/**\n *\n * @param {{\n *  title: string;\n *  message?: string;\n *  type: 'warn' | 'error' | 'success';\n *  key: string;\n * }} info\n */\nexport const addOneNitification = (info) => ({\n  type: actionTypes.ADD_ONE_NOTIFICATION,\n  payload: info,\n});\n\nexport const removeTheTopNitification = () => ({\n  type: actionTypes.REMOVE_THE_TOP_NOTIFICATION,\n});\n","/* eslint-disable arrow-parens */\nimport * as actionTypes from './actionTypes';\n\nexport const changeCurrentTask = ($task) => ({\n  type: actionTypes.CHANGE_CURRENT_TASK,\n  payload: $task,\n});\n\nexport const addTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.ADD_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const removeTaskItemInCurrentTask = ($taskItem) => ({\n  type: actionTypes.REMOVE_TASK_ITEM_IN_CURRENT_TASK,\n  payload: $taskItem,\n});\n\nexport const changeCurrentTaskTitle = title => ({\n  type: actionTypes.CHANGE_CURRENT_TASK_TITLE,\n  payload: title,\n});\n\nexport const undoCurrentTask = () => ({\n  type: actionTypes.UNDO_CURRENT_TASK,\n});\n\nexport const redoCurrentTask = () => ({\n  type: actionTypes.REDO_CURRENT_TASK,\n});\n\nexport const snapshotCurrentTask = () => ({\n  type: actionTypes.SNAPSHOT_CURRENT_TASK,\n});\n\nexport const clearFutureTasks = () => ({\n  type: actionTypes.CLEAR_FUTURE_TASKS,\n});\n\nexport const clearAllEdtingHistory = () => ({\n  type: actionTypes.CLEAR_EDITNG_HISTORY,\n});\n\n\n// effect\n\nexport const effectUpdateTask = ($task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: $task,\n});\n\nexport const effectGetTask = (taskId) => ({\n  type: actionTypes.EFFECT_GET_TASK,\n  payload: taskId,\n});\n","import * as actionTypes from './actionTypes';\n\nexport const createTask = (task) => ({\n  type: actionTypes.EFFECT_CREATE_TASK,\n  payload: task,\n});\n\nexport const updateTask = (task) => ({\n  type: actionTypes.EFFECT_UPDATE_TASK,\n  payload: task,\n});\n","import * as actionTypes from './actionTypes';\n\nexport const loginSuccess = ($loginInfo) => ({\n  type: actionTypes.LOGIN_SUCCESS,\n  payload: $loginInfo,\n});\n\nexport const loginFail = (err) => ({\n  type: actionTypes.LOGIN_FAIL,\n  payload: err,\n});\n\nexport const logout = () => ({\n  type: actionTypes.LOGOUT,\n});\n\nexport const registerSuccess = ($registerInfo) => ({\n  type: actionTypes.REGISTER_SUCCESS,\n  payload: $registerInfo,\n});\n\nexport const registerFail = (err) => ({\n  type: actionTypes.REGISTER_FAIL,\n  payload: err,\n});\n\n// effect\n\nexport const effectGetUserInfo = () => ({\n  type: actionTypes.EFFECT_GET_USERINFO,\n});\n\nexport const effectLogin = (userInfo) => ({\n  type: actionTypes.EFFECT_LOGIN,\n  payload: userInfo,\n});\n\nexport const effectLoginByJWT = (jwt) => ({\n  type: actionTypes.EFFECT_LOGIN_BY_JWT,\n  payload: jwt,\n});\n\nexport const effectRegister = (userInfo) => ({\n  type: actionTypes.EFFECT_REGISTER,\n  payload: userInfo,\n});\n\n// export const changeCurrentPath = (path, sideEffect = null) => ({\n//   type: actionTypes.CHANGE_CURRENT_PATH,\n//   payload: path,\n//   sideEffect,\n// });\n","import * as taskActions from './tasks/actions';\n\nimport * as globalActions from './global/actions';\n\nimport * as editingTaskActions from './editingTask/actions';\n\nimport * as effectActions from './effect/actions';\n\nimport * as userActions from './user/actions';\n\nexport * from './global/actions';\n\nexport {\n  taskActions,\n  globalActions,\n  editingTaskActions,\n  userActions,\n  effectActions,\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextFieldOnKeyEnterUp(props) {\n  const { onKeyEnterUp, ...rest } = props;\n\n  const doOnKeyEnterUp = useCallback(\n    (evt) => {\n      const KEY_ENTER_CODE = 13;\n      const { keyCode: keyUp = -1 } = evt;\n      if (keyUp === KEY_ENTER_CODE) {\n        onKeyEnterUp(evt);\n      }\n    },\n    [onKeyEnterUp],\n  );\n\n  return <TextField onKeyUp={doOnKeyEnterUp} {...rest} />;\n}\n\nTextFieldOnKeyEnterUp.propTypes = {\n  onKeyEnterUp: PropTypes.func.isRequired,\n};\n\nTextFieldOnKeyEnterUp.defaultProps = {};\n\nexport default TextFieldOnKeyEnterUp;\n","// import {\n//   useRef,\n// } from 'react';\nimport {\n  useState, useEffect, useCallback, useRef,\n} from 'react';\n\n// import { store } from '../store';\n// import { createUseStore } from './helper';\n\n// export const useStore = createUseStore(store);\n\nexport function useIsOnline() {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const onlineListener = useCallback(() => {\n    setIsOnline(true);\n  }, []);\n  const offlineListener = useCallback(() => {\n    setIsOnline(false);\n  }, [setIsOnline]);\n  useEffect(() => {\n    window.addEventListener('online', onlineListener);\n    window.addEventListener('offline', offlineListener);\n    return () => {\n      window.removeEventListener('online', onlineListener);\n      window.removeEventListener('offline', offlineListener);\n    };\n  }, [setIsOnline, onlineListener, offlineListener]);\n  return isOnline;\n}\n\n\nexport function useHasBeenTrued(status) {\n  const initialStausRef = useRef(status);\n  if (status) initialStausRef.current = status;\n  return initialStausRef.current;\n}\n\n// export function useIsMounted() {\n//   const [isMounted, setIsMounted] = useState(false);\n\n//   useEffect(() => {\n//     setIsMounted(true);\n//     return () => setIsMounted(false);\n//   }, [setIsMounted]);\n\n//   return isMounted;\n// }\n\nexport function useForceUpdate() {\n  const [, setUpdateCount] = useState(0);\n  const forceUpdate = useCallback(() => {\n    setUpdateCount(prevCount => prevCount + 1);\n  }, [setUpdateCount]);\n  return forceUpdate;\n}\n\nexport const foo = 'oo';\n"],"sourceRoot":""}